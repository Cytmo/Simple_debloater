{'getline_in_replace': None, 'getpat': None, 'getsub': None, 'addstr': None, 'in_set_2': None, 'change': None, 'getccl': ['  int tmp;\n', '  int tmp___1;\n', '  {\n', '    (* i)++;\n', '    if (((int) (* (arg + (* i)))) == 94)\n', '    {\n', '      {\n', "        tmp = addstr((char) '!', pat, j, 100);\n", '      }\n', '    }\n', '    else\n', '    {\n', '      {\n', '      }\n', '    }\n', '    {\n', '      jstart = * j;\n', '      tmp___1 = addstr((char) 0, pat, j, 100);\n', "      dodash((char) ']', arg, i, pat, j, 100);\n", '      * (pat + jstart) = (char) (((* j) - jstart) - 1);\n', '    }\n', '    return (bool) (((int) (* (arg + (* i)))) == 93);\n', '  }\n', '}\n'], 'stclose': ['  int jp;\n', '  int tmp;\n', '  {\n', '    jp = (* j) - 1;\n', '    {\n', '      while (1)\n', '      {\n', '        if (! (jp >= lastj))\n', '        {\n', '          goto while_break;\n', '        }\n', '        {\n', '          jt = jp + 1;\n', '          tmp = addstr(* (pat + jp), pat, & jt, 100);\n', '          jp--;\n', '        }\n', '      }\n', '      while_break:\n', '      ;\n', '    }\n', '    (* j)++;\n', "    * (pat + lastj) = (char) '*';\n", '  }\n', '}\n'], 'locate': ['  bool flag;\n', '  {\n', '    {\n', '      while (1)\n', '      {\n', '        {\n', '          goto while_break;\n', '        }\n', '        if (((int) c) == ((int) (* (pat + i))))\n', '        {\n', '        }\n', '      }\n', '      while_break:\n', '      ;\n', '    }\n', '    return flag;\n', '  }\n', '}\n'], 'esc': None, 'main': None, 'in_pat_set': None, 'putsub': None, 'subline': None, 'makesub': ['  int i;\n', '  int j;\n', '  character escjunk;\n', '  int tmp;\n', '  int tmp___0;\n', '  int tmp___1;\n', '  {\n', '    j = 0;\n', '    i = from;\n', '    {\n', '      while (1)\n', '      {\n', '        if (((int) (* (arg + i))) != ((int) delim))\n', '        {\n', '          if (! (((int) (* (arg + i))) != 0))\n', '          {\n', '          }\n', '        }\n', '        else\n', '        {\n', '          goto while_break;\n', '        }\n', '        if (((unsigned int) (* (arg + i))) == 38U)\n', '        {\n', '          {\n', '            tmp = addstr((char) (- 1), sub, & j, 100);\n', '          }\n', '        }\n', '        else\n', '        {\n', '          {\n', '            escjunk = esc(arg, & i);\n', '            tmp___0 = addstr(escjunk, sub, & j, 100);\n', '          }\n', '        }\n', '        i++;\n', '      }\n', '      while_break:\n', '      ;\n', '    }\n', '    {\n', '      {\n', "        tmp___1 = addstr((char) '\\000', sub, & j, 100);\n", '      }\n', '    }\n', '    return result;\n', '  }\n', '}\n'], 'patsize': ['  bool tmp;\n', '  {\n', '    {\n', '      tmp = in_pat_set(* (pat + n));\n', '    }\n', '    if (tmp)\n', '    {\n', '      {\n', '        if (((int) (* (pat + n))) == 99)\n', '        {\n', '          goto case_99;\n', '        }\n', '        if (((int) (* (pat + n))) == 63)\n', '        {\n', '          goto case_63;\n', '        }\n', '        if (((int) (* (pat + n))) == 36)\n', '        {\n', '        }\n', '        if (((int) (* (pat + n))) == 37)\n', '        {\n', '          goto case_63;\n', '        }\n', '        if (((int) (* (pat + n))) == 33)\n', '        {\n', '          goto case_33;\n', '        }\n', '        if (((int) (* (pat + n))) == 91)\n', '        {\n', '          goto case_33;\n', '        }\n', '        if (((int) (* (pat + n))) == 42)\n', '        {\n', '          goto case_42;\n', '        }\n', '        case_99:\n', '        size = 2;\n', '        goto switch_break;\n', '        case_63:\n', '        size = 1;\n', '        goto switch_break;\n', '        case_33:\n', '        size = ((int) (* (pat + (n + 1)))) + 2;\n', '        goto switch_break;\n', '        case_42:\n', '        size = 1;\n', '        ;\n', '        {\n', '        }\n', '        switch_break:\n', '        ;\n', '      }\n', '    }\n', '    return size;\n', '  }\n', '}\n'], 'dodash': ['  int tmp___0;\n', '  {\n', '    {\n', '      while (1)\n', '      {\n', '        if (((int) (* (src + (* i)))) != ((int) delim))\n', '        {\n', '          if (! (((int) (* (src + (* i)))) != 0))\n', '          {\n', '          }\n', '        }\n', '        else\n', '        {\n', '          goto while_break;\n', '        }\n', '        {\n', '          if (((int) (* (src + (* i)))) != 45)\n', '          {\n', '            {\n', '              tmp___0 = addstr(* (src + (* i)), dest, j, maxset);\n', '            }\n', '          }\n', '          else\n', '          {\n', '            {\n', '              {\n', '                {\n', '                  {\n', '                  }\n', '                }\n', '              }\n', '            }\n', '          }\n', '        }\n', '        (* i)++;\n', '      }\n', '      while_break:\n', '      ;\n', '    }\n', '    return;\n', '  }\n', '}\n'], 'omatch': ['  bool result;\n', '  bool tmp___0;\n', '  bool tmp___1;\n', '  {\n', '    advance = (char) (- 1);\n', '    {\n', '      {\n', '        tmp___1 = in_pat_set(* (pat + j));\n', '      }\n', '      if (tmp___1)\n', '      {\n', '        {\n', '          if (((int) (* (pat + j))) == 37)\n', '          {\n', '            goto case_37;\n', '          }\n', '          if (((int) (* (pat + j))) == 63)\n', '          {\n', '            goto case_91;\n', '          }\n', '          if (((int) (* (pat + j))) == 33)\n', '          {\n', '            goto case_33;\n', '          }\n', '          case_99:\n', '          if (((int) (* (lin + (* i)))) == ((int) (* (pat + (j + 1)))))\n', '          {\n', '            advance = (char) 1;\n', '          }\n', '          goto switch_break;\n', '          case_37:\n', '          {\n', '            advance = (char) 0;\n', '          }\n', '          goto switch_break;\n', '          {\n', '          }\n', '          case_91:\n', '          case_33:\n', '          if (((int) (* (lin + (* i)))) != 10)\n', '          {\n', '            {\n', '              tmp___0 = locate(* (lin + (* i)), pat, j + 1);\n', '            }\n', '            if (! tmp___0)\n', '            {\n', '              advance = (char) 1;\n', '            }\n', '          }\n', '          ;\n', '          {\n', '          }\n', '          switch_break:\n', '          ;\n', '        }\n', '      }\n', '    }\n', '    if (((int) advance) >= 0)\n', '    {\n', '      * i += (int) advance;\n', '      result = (bool) 1;\n', '    }\n', '    else\n', '    {\n', '      result = (bool) 0;\n', '    }\n', '    return result;\n', '  }\n', '}\n'], 'amatch': ['  int k;\n', '  bool result;\n', '  bool done;\n', '  int tmp;\n', '  int tmp___0;\n', '  int tmp___1;\n', '  {\n', '    done = (bool) 0;\n', '    {\n', '      while (1)\n', '      {\n', '        if (! done)\n', '        {\n', '          if (! (((int) (* (pat + j))) != 0))\n', '          {\n', '            goto while_break;\n', '          }\n', '        }\n', '        else\n', '        {\n', '          goto while_break;\n', '        }\n', '        if (((int) (* (pat + j))) == 42)\n', '        {\n', '          {\n', '            tmp = patsize(pat, j);\n', '            j += tmp;\n', '            i = offset;\n', '          }\n', '          {\n', '            while (1)\n', '            {\n', '              if (! done)\n', '              {\n', '                if (! (((int) (* (lin + i))) != 0))\n', '                {\n', '                }\n', '              }\n', '              else\n', '              {\n', '                goto while_break___0;\n', '              }\n', '              {\n', '                result = omatch(lin, & i, pat, j);\n', '              }\n', '              if (! result)\n', '              {\n', '                done = (bool) 1;\n', '              }\n', '            }\n', '            while_break___0:\n', '            ;\n', '          }\n', '          done = (bool) 0;\n', '          {\n', '            while (1)\n', '            {\n', '              if (! done)\n', '              {\n', '                if (! (i >= offset))\n', '                {\n', '                  goto while_break___1;\n', '                }\n', '              }\n', '              else\n', '              {\n', '                goto while_break___1;\n', '              }\n', '              {\n', '                tmp___0 = patsize(pat, j);\n', '                k = amatch(lin, i, pat, j + tmp___0);\n', '              }\n', '              if (k >= 0)\n', '              {\n', '                done = (bool) 1;\n', '              }\n', '              else\n', '              {\n', '                i--;\n', '              }\n', '            }\n', '            while_break___1:\n', '            ;\n', '          }\n', '          offset = k;\n', '        }\n', '        else\n', '        {\n', '          {\n', '            result = omatch(lin, & offset, pat, j);\n', '          }\n', '          if (! result)\n', '          {\n', '            offset = - 1;\n', '            done = (bool) 1;\n', '          }\n', '          else\n', '          {\n', '            {\n', '              tmp___1 = patsize(pat, j);\n', '              j += tmp___1;\n', '            }\n', '          }\n', '        }\n', '      }\n', '      while_break:\n', '      ;\n', '    }\n', '    return offset;\n', '  }\n', '}\n'], 'makepat': ['  int i;\n', '  int j;\n', '  int lastj;\n', '  int lj;\n', '  bool done;\n', '  bool getres;\n', '  char escjunk;\n', '  int tmp;\n', '  bool tmp___2;\n', '  int tmp___3;\n', '  int tmp___4;\n', '  {\n', '    {\n', '      while (1)\n', '      {\n', '        if (! done)\n', '        {\n', '          if (((int) (* (arg + i))) != ((int) delim))\n', '          {\n', '            if (! (((int) (* (arg + i))) != 0))\n', '            {\n', '            }\n', '          }\n', '          else\n', '          {\n', '            goto while_break;\n', '          }\n', '        }\n', '        else\n', '        {\n', '          goto while_break;\n', '        }\n', '        lj = j;\n', '        if (((int) (* (arg + i))) == 63)\n', '        {\n', '          {\n', "            tmp = addstr((char) '?', pat, & j, 100);\n", '          }\n', '        }\n', '        else\n', '        {\n', '          if (((int) (* (arg + i))) == 37)\n', '          {\n', '            if (i == start)\n', '            {\n', '              {\n', '              }\n', '            }\n', '          }\n', '          else\n', '          {\n', '            {\n', '              _L:\n', '              if (((int) (* (arg + i))) == 91)\n', '              {\n', '                {\n', '                  getres = getccl(arg, & i, pat, & j);\n', '                }\n', '              }\n', '              else\n', '              {\n', '                if (((int) (* (arg + i))) == 42)\n', '                {\n', '                  if (i > start)\n', '                  {\n', '                    {\n', '                      lj = lastj;\n', '                      tmp___2 = in_set_2(* (pat + lj));\n', '                    }\n', '                    if (tmp___2)\n', '                    {\n', '                      done = (bool) 1;\n', '                    }\n', '                    else\n', '                    {\n', '                      {\n', '                        stclose(pat, & j, lastj);\n', '                      }\n', '                    }\n', '                  }\n', '                }\n', '                else\n', '                {\n', '                  {\n', "                    tmp___3 = addstr((char) 'c', pat, & j, 100);\n", '                    escjunk = esc(arg, & i);\n', '                    tmp___4 = addstr(escjunk, pat, & j, 100);\n', '                  }\n', '                }\n', '              }\n', '            }\n', '          }\n', '        }\n', '        {\n', '          i++;\n', '        }\n', '      }\n', '      while_break:\n', '    }\n', '    if (done)\n', '    {\n', '      result = 0;\n', '    }\n', '    else\n', '    {\n', '      {\n', '        {\n', '          result = i;\n', '        }\n', '      }\n', '    }\n', '    return result;\n', '  }\n', '}\n']}[{'name': 'getline_in_replace', 'start_line': 58, 'end_line': 66}, {'name': 'getpat', 'start_line': 602, 'end_line': 610}, {'name': 'getsub', 'start_line': 690, 'end_line': 698}, {'name': 'addstr', 'start_line': 69, 'end_line': 84}, {'name': 'in_set_2', 'start_line': 329, 'end_line': 357}, {'name': 'change', 'start_line': 1224, 'end_line': 1254}, {'name': 'getccl', 'start_line': 256, 'end_line': 289}, {'name': 'stclose', 'start_line': 292, 'end_line': 326}, {'name': 'locate', 'start_line': 702, 'end_line': 737}, {'name': 'esc', 'start_line': 87, 'end_line': 125}, {'name': 'main', 'start_line': 1257, 'end_line': 1299}, {'name': 'in_pat_set', 'start_line': 360, 'end_line': 417}, {'name': 'putsub', 'start_line': 1097, 'end_line': 1154}, {'name': 'subline', 'start_line': 1157, 'end_line': 1221}, {'name': 'makesub', 'start_line': 613, 'end_line': 687}, {'name': 'patsize', 'start_line': 874, 'end_line': 953}, {'name': 'dodash', 'start_line': 130, 'end_line': 253}, {'name': 'omatch', 'start_line': 741, 'end_line': 871}, {'name': 'amatch', 'start_line': 956, 'end_line': 1094}, {'name': 'makepat', 'start_line': 420, 'end_line': 599}]