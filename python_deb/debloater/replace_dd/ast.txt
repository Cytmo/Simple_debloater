FileAST:  (at None)
  Typedef: size_t, [], ['typedef'] (at temp/replace.c:4:23)
    TypeDecl: size_t, [] (at temp/replace.c:4:23)
      IdentifierType: ['unsigned', 'long'] (at temp/replace.c:4:9)
  Typedef: __off_t, [], ['typedef'] (at temp/replace.c:5:14)
    TypeDecl: __off_t, [] (at temp/replace.c:5:14)
      IdentifierType: ['long'] (at temp/replace.c:5:9)
  Typedef: __off64_t, [], ['typedef'] (at temp/replace.c:6:14)
    TypeDecl: __off64_t, [] (at temp/replace.c:6:14)
      IdentifierType: ['long'] (at temp/replace.c:6:9)
  Decl: None, [], [], [] (at temp/replace.c:7:8)
    Struct: _IO_FILE (at temp/replace.c:7:8)
  Typedef: FILE, [], ['typedef'] (at temp/replace.c:8:25)
    TypeDecl: FILE, [] (at temp/replace.c:8:25)
      Struct: _IO_FILE (at temp/replace.c:8:16)
  Typedef: _IO_lock_t, [], ['typedef'] (at temp/replace.c:9:14)
    TypeDecl: _IO_lock_t, [] (at temp/replace.c:9:14)
      IdentifierType: ['void'] (at temp/replace.c:9:9)
  Decl: None, [], [], [] (at temp/replace.c:10:8)
    Struct: _IO_marker (at temp/replace.c:10:8)
      Decl: _next, [], [], [] (at temp/replace.c:11:22)
        PtrDecl: [] (at temp/replace.c:11:22)
          TypeDecl: _next, [] (at temp/replace.c:11:23)
            Struct: _IO_marker (at temp/replace.c:11:11)
      Decl: _sbuf, [], [], [] (at temp/replace.c:12:20)
        PtrDecl: [] (at temp/replace.c:12:20)
          TypeDecl: _sbuf, [] (at temp/replace.c:12:21)
            Struct: _IO_FILE (at temp/replace.c:12:11)
      Decl: _pos, [], [], [] (at temp/replace.c:13:8)
        TypeDecl: _pos, [] (at temp/replace.c:13:8)
          IdentifierType: ['int'] (at temp/replace.c:13:4)
  Decl: None, [], [], [] (at temp/replace.c:15:8)
    Struct: _IO_FILE (at temp/replace.c:15:8)
      Decl: _flags, [], [], [] (at temp/replace.c:16:8)
        TypeDecl: _flags, [] (at temp/replace.c:16:8)
          IdentifierType: ['int'] (at temp/replace.c:16:4)
      Decl: _IO_read_ptr, [], [], [] (at temp/replace.c:17:9)
        PtrDecl: [] (at temp/replace.c:17:9)
          TypeDecl: _IO_read_ptr, [] (at temp/replace.c:17:10)
            IdentifierType: ['char'] (at temp/replace.c:17:4)
      Decl: _IO_read_end, [], [], [] (at temp/replace.c:18:9)
        PtrDecl: [] (at temp/replace.c:18:9)
          TypeDecl: _IO_read_end, [] (at temp/replace.c:18:10)
            IdentifierType: ['char'] (at temp/replace.c:18:4)
      Decl: _IO_read_base, [], [], [] (at temp/replace.c:19:9)
        PtrDecl: [] (at temp/replace.c:19:9)
          TypeDecl: _IO_read_base, [] (at temp/replace.c:19:10)
            IdentifierType: ['char'] (at temp/replace.c:19:4)
      Decl: _IO_write_base, [], [], [] (at temp/replace.c:20:9)
        PtrDecl: [] (at temp/replace.c:20:9)
          TypeDecl: _IO_write_base, [] (at temp/replace.c:20:10)
            IdentifierType: ['char'] (at temp/replace.c:20:4)
      Decl: _IO_write_ptr, [], [], [] (at temp/replace.c:21:9)
        PtrDecl: [] (at temp/replace.c:21:9)
          TypeDecl: _IO_write_ptr, [] (at temp/replace.c:21:10)
            IdentifierType: ['char'] (at temp/replace.c:21:4)
      Decl: _IO_write_end, [], [], [] (at temp/replace.c:22:9)
        PtrDecl: [] (at temp/replace.c:22:9)
          TypeDecl: _IO_write_end, [] (at temp/replace.c:22:10)
            IdentifierType: ['char'] (at temp/replace.c:22:4)
      Decl: _IO_buf_base, [], [], [] (at temp/replace.c:23:9)
        PtrDecl: [] (at temp/replace.c:23:9)
          TypeDecl: _IO_buf_base, [] (at temp/replace.c:23:10)
            IdentifierType: ['char'] (at temp/replace.c:23:4)
      Decl: _IO_buf_end, [], [], [] (at temp/replace.c:24:9)
        PtrDecl: [] (at temp/replace.c:24:9)
          TypeDecl: _IO_buf_end, [] (at temp/replace.c:24:10)
            IdentifierType: ['char'] (at temp/replace.c:24:4)
      Decl: _IO_save_base, [], [], [] (at temp/replace.c:25:9)
        PtrDecl: [] (at temp/replace.c:25:9)
          TypeDecl: _IO_save_base, [] (at temp/replace.c:25:10)
            IdentifierType: ['char'] (at temp/replace.c:25:4)
      Decl: _IO_backup_base, [], [], [] (at temp/replace.c:26:9)
        PtrDecl: [] (at temp/replace.c:26:9)
          TypeDecl: _IO_backup_base, [] (at temp/replace.c:26:10)
            IdentifierType: ['char'] (at temp/replace.c:26:4)
      Decl: _IO_save_end, [], [], [] (at temp/replace.c:27:9)
        PtrDecl: [] (at temp/replace.c:27:9)
          TypeDecl: _IO_save_end, [] (at temp/replace.c:27:10)
            IdentifierType: ['char'] (at temp/replace.c:27:4)
      Decl: _markers, [], [], [] (at temp/replace.c:28:22)
        PtrDecl: [] (at temp/replace.c:28:22)
          TypeDecl: _markers, [] (at temp/replace.c:28:23)
            Struct: _IO_marker (at temp/replace.c:28:11)
      Decl: _chain, [], [], [] (at temp/replace.c:29:20)
        PtrDecl: [] (at temp/replace.c:29:20)
          TypeDecl: _chain, [] (at temp/replace.c:29:21)
            Struct: _IO_FILE (at temp/replace.c:29:11)
      Decl: _fileno, [], [], [] (at temp/replace.c:30:8)
        TypeDecl: _fileno, [] (at temp/replace.c:30:8)
          IdentifierType: ['int'] (at temp/replace.c:30:4)
      Decl: _flags2, [], [], [] (at temp/replace.c:31:8)
        TypeDecl: _flags2, [] (at temp/replace.c:31:8)
          IdentifierType: ['int'] (at temp/replace.c:31:4)
      Decl: _old_offset, [], [], [] (at temp/replace.c:32:12)
        TypeDecl: _old_offset, [] (at temp/replace.c:32:12)
          IdentifierType: ['__off_t'] (at temp/replace.c:32:4)
      Decl: _cur_column, [], [], [] (at temp/replace.c:33:19)
        TypeDecl: _cur_column, [] (at temp/replace.c:33:19)
          IdentifierType: ['unsigned', 'short'] (at temp/replace.c:33:4)
      Decl: _vtable_offset, [], [], [] (at temp/replace.c:34:16)
        TypeDecl: _vtable_offset, [] (at temp/replace.c:34:16)
          IdentifierType: ['signed', 'char'] (at temp/replace.c:34:4)
      Decl: _shortbuf, [], [], [] (at temp/replace.c:35:9)
        ArrayDecl: [] (at temp/replace.c:35:9)
          TypeDecl: _shortbuf, [] (at temp/replace.c:35:9)
            IdentifierType: ['char'] (at temp/replace.c:35:4)
          Constant: int, 1 (at temp/replace.c:35:19)
      Decl: _lock, [], [], [] (at temp/replace.c:36:15)
        PtrDecl: [] (at temp/replace.c:36:15)
          TypeDecl: _lock, [] (at temp/replace.c:36:16)
            IdentifierType: ['_IO_lock_t'] (at temp/replace.c:36:4)
      Decl: _offset, [], [], [] (at temp/replace.c:37:14)
        TypeDecl: _offset, [] (at temp/replace.c:37:14)
          IdentifierType: ['__off64_t'] (at temp/replace.c:37:4)
      Decl: __pad1, [], [], [] (at temp/replace.c:38:9)
        PtrDecl: [] (at temp/replace.c:38:9)
          TypeDecl: __pad1, [] (at temp/replace.c:38:10)
            IdentifierType: ['void'] (at temp/replace.c:38:4)
      Decl: __pad2, [], [], [] (at temp/replace.c:39:9)
        PtrDecl: [] (at temp/replace.c:39:9)
          TypeDecl: __pad2, [] (at temp/replace.c:39:10)
            IdentifierType: ['void'] (at temp/replace.c:39:4)
      Decl: __pad3, [], [], [] (at temp/replace.c:40:9)
        PtrDecl: [] (at temp/replace.c:40:9)
          TypeDecl: __pad3, [] (at temp/replace.c:40:10)
            IdentifierType: ['void'] (at temp/replace.c:40:4)
      Decl: __pad4, [], [], [] (at temp/replace.c:41:9)
        PtrDecl: [] (at temp/replace.c:41:9)
          TypeDecl: __pad4, [] (at temp/replace.c:41:10)
            IdentifierType: ['void'] (at temp/replace.c:41:4)
      Decl: __pad5, [], [], [] (at temp/replace.c:42:11)
        TypeDecl: __pad5, [] (at temp/replace.c:42:11)
          IdentifierType: ['size_t'] (at temp/replace.c:42:4)
      Decl: _mode, [], [], [] (at temp/replace.c:43:8)
        TypeDecl: _mode, [] (at temp/replace.c:43:8)
          IdentifierType: ['int'] (at temp/replace.c:43:4)
      Decl: _unused2, [], [], [] (at temp/replace.c:44:9)
        ArrayDecl: [] (at temp/replace.c:44:9)
          TypeDecl: _unused2, [] (at temp/replace.c:44:9)
            IdentifierType: ['char'] (at temp/replace.c:44:4)
          BinaryOp: - (at temp/replace.c:44:19)
            BinaryOp: - (at temp/replace.c:44:19)
              BinaryOp: * (at temp/replace.c:44:19)
                Constant: unsigned long int, 15UL (at temp/replace.c:44:19)
                UnaryOp: sizeof (at temp/replace.c:44:26)
                  Typename: None, [] (at temp/replace.c:0:1)
                    TypeDecl: None, [] (at None)
                      IdentifierType: ['int'] (at temp/replace.c:44:33)
              BinaryOp: * (at temp/replace.c:44:41)
                Constant: unsigned long int, 4UL (at temp/replace.c:44:41)
                UnaryOp: sizeof (at temp/replace.c:44:47)
                  Typename: None, [] (at temp/replace.c:0:1)
                    PtrDecl: [] (at temp/replace.c:44:59)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['void'] (at temp/replace.c:44:54)
            UnaryOp: sizeof (at temp/replace.c:44:65)
              Typename: None, [] (at temp/replace.c:0:1)
                TypeDecl: None, [] (at None)
                  IdentifierType: ['size_t'] (at temp/replace.c:44:72)
  Typedef: bool, [], ['typedef'] (at temp/replace.c:46:14)
    TypeDecl: bool, [] (at temp/replace.c:46:14)
      IdentifierType: ['char'] (at temp/replace.c:46:9)
  Typedef: character, [], ['typedef'] (at temp/replace.c:47:14)
    TypeDecl: character, [] (at temp/replace.c:47:14)
      IdentifierType: ['char'] (at temp/replace.c:47:9)
  Typedef: string, [], ['typedef'] (at temp/replace.c:48:14)
    ArrayDecl: [] (at temp/replace.c:48:14)
      TypeDecl: string, [] (at temp/replace.c:48:14)
        IdentifierType: ['char'] (at temp/replace.c:48:9)
      Constant: int, 100 (at temp/replace.c:48:21)
  Pragma: merger("0","./empty.i","-w") (at temp/replace.c:49:9)
  Pragma: merger("0","./replace.i","-w") (at temp/replace.c:50:9)
  Decl: exit, [], ['extern'], [] (at temp/replace.c:51:13)
    FuncDeclExt:  (at temp/replace.c:51:13)
      TypeDecl: exit, [] (at temp/replace.c:51:13)
        IdentifierType: ['void'] (at temp/replace.c:51:8)
      ExprList:  (at temp/replace.c:0)
  Decl: stdin, [], ['extern'], [] (at temp/replace.c:52:24)
    PtrDecl: [] (at temp/replace.c:52:24)
      TypeDecl: stdin, [] (at temp/replace.c:52:25)
        Struct: _IO_FILE (at temp/replace.c:52:15)
  Decl: stdout, [], ['extern'], [] (at temp/replace.c:53:24)
    PtrDecl: [] (at temp/replace.c:53:24)
      TypeDecl: stdout, [] (at temp/replace.c:53:25)
        Struct: _IO_FILE (at temp/replace.c:53:15)
  Decl: fprintf, [], ['extern'], [] (at temp/replace.c:54:12)
    FuncDeclExt:  (at temp/replace.c:54:12)
      ParamList:  (at temp/replace.c:54:25)
        Decl: __stream, [], [], [] (at temp/replace.c:54:25)
          PtrDecl: ['__restrict'] (at temp/replace.c:54:25)
            TypeDecl: __stream, [] (at temp/replace.c:54:38)
              IdentifierType: ['FILE'] (at temp/replace.c:54:20)
        Decl: __format, ['const'], [], [] (at temp/replace.c:54:60)
          PtrDecl: ['__restrict'] (at temp/replace.c:54:60)
            TypeDecl: __format, ['const'] (at temp/replace.c:54:73)
              IdentifierType: ['char'] (at temp/replace.c:54:49)
        EllipsisParam:  (at temp/replace.c:55:22)
      TypeDecl: fprintf, [] (at temp/replace.c:54:12)
        IdentifierType: ['int'] (at temp/replace.c:54:8)
      ExprList:  (at temp/replace.c:0)
  Decl: fputc, [], ['extern'], [] (at temp/replace.c:56:12)
    FuncDeclExt:  (at temp/replace.c:56:12)
      ParamList:  (at temp/replace.c:56:22)
        Decl: __c, [], [], [] (at temp/replace.c:56:22)
          TypeDecl: __c, [] (at temp/replace.c:56:22)
            IdentifierType: ['int'] (at temp/replace.c:56:18)
        Decl: __stream, [], [], [] (at temp/replace.c:56:33)
          PtrDecl: [] (at temp/replace.c:56:33)
            TypeDecl: __stream, [] (at temp/replace.c:56:34)
              IdentifierType: ['FILE'] (at temp/replace.c:56:28)
      TypeDecl: fputc, [] (at temp/replace.c:56:12)
        IdentifierType: ['int'] (at temp/replace.c:56:8)
      ExprList:  (at temp/replace.c:0)
  Decl: fgets, [], ['extern'], [] (at temp/replace.c:57:14)
    FuncDeclExt:  (at temp/replace.c:57:14)
      ParamList:  (at temp/replace.c:57:25)
        Decl: __s, [], [], [] (at temp/replace.c:57:25)
          PtrDecl: ['__restrict'] (at temp/replace.c:57:25)
            TypeDecl: __s, [] (at temp/replace.c:57:38)
              IdentifierType: ['char'] (at temp/replace.c:57:20)
        Decl: __n, [], [], [] (at temp/replace.c:57:48)
          TypeDecl: __n, [] (at temp/replace.c:57:48)
            IdentifierType: ['int'] (at temp/replace.c:57:44)
        Decl: __stream, [], [], [] (at temp/replace.c:57:59)
          PtrDecl: ['__restrict'] (at temp/replace.c:57:59)
            TypeDecl: __stream, [] (at temp/replace.c:57:72)
              IdentifierType: ['FILE'] (at temp/replace.c:57:54)
      PtrDecl: [] (at temp/replace.c:57:13)
        TypeDecl: fgets, [] (at temp/replace.c:57:14)
          IdentifierType: ['char'] (at temp/replace.c:57:8)
      ExprList:  (at temp/replace.c:0)
  Decl: Caseerror, [], [], [] (at temp/replace.c:58:6)
    FuncDeclExt:  (at temp/replace.c:58:6)
      ParamList:  (at temp/replace.c:58:20)
        Decl: n, [], [], [] (at temp/replace.c:58:20)
          TypeDecl: n, [] (at temp/replace.c:58:20)
            IdentifierType: ['int'] (at temp/replace.c:58:16)
      TypeDecl: Caseerror, [] (at temp/replace.c:58:6)
        IdentifierType: ['void'] (at temp/replace.c:58:1)
      ExprList:  (at temp/replace.c:0)
  FuncDef:  (at temp/replace.c:59:6)
    Decl: getline_in_replace, [], [], [] (at temp/replace.c:59:6)
      FuncDeclExt:  (at temp/replace.c:59:6)
        ParamList:  (at temp/replace.c:59:30)
          Decl: s, [], [], [] (at temp/replace.c:59:30)
            PtrDecl: [] (at temp/replace.c:59:30)
              TypeDecl: s, [] (at temp/replace.c:59:31)
                IdentifierType: ['char'] (at temp/replace.c:59:25)
          Decl: maxsize, [], [], [] (at temp/replace.c:59:39)
            TypeDecl: maxsize, [] (at temp/replace.c:59:39)
              IdentifierType: ['int'] (at temp/replace.c:59:35)
        TypeDecl: getline_in_replace, [] (at temp/replace.c:59:6)
          IdentifierType: ['bool'] (at temp/replace.c:59:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:60:1)
      Decl: result, [], [], [] (at temp/replace.c:61:8)
        PtrDecl: [] (at temp/replace.c:61:8)
          TypeDecl: result, [] (at temp/replace.c:61:9)
            IdentifierType: ['char'] (at temp/replace.c:61:3)
      Compound:  (at temp/replace.c:63:1)
        Compound:  (at temp/replace.c:64:1)
          Assignment: = (at temp/replace.c:65:3)
            ID: result (at temp/replace.c:65:3)
            FuncCall:  (at temp/replace.c:65:12)
              ID: fgets (at temp/replace.c:65:12)
              ExprList:  (at temp/replace.c:65:18)
                Cast:  (at temp/replace.c:65:18)
                  Typename: None, [] (at temp/replace.c:0:1)
                    PtrDecl: ['__restrict'] (at temp/replace.c:65:24)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['char'] (at temp/replace.c:65:19)
                  ID: s (at temp/replace.c:65:38)
                ID: maxsize (at temp/replace.c:65:41)
                Cast:  (at temp/replace.c:65:50)
                  Typename: None, [] (at temp/replace.c:0:1)
                    PtrDecl: ['__restrict'] (at temp/replace.c:65:56)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['FILE'] (at temp/replace.c:65:51)
                  ID: stdin (at temp/replace.c:65:70)
        Return:  (at temp/replace.c:67:3)
          Cast:  (at temp/replace.c:67:11)
            Typename: None, [] (at temp/replace.c:0:1)
              TypeDecl: None, [] (at None)
                IdentifierType: ['bool'] (at temp/replace.c:67:12)
            BinaryOp: != (at temp/replace.c:67:19)
              Cast:  (at temp/replace.c:67:19)
                Typename: None, [] (at temp/replace.c:0:1)
                  TypeDecl: None, [] (at None)
                    IdentifierType: ['unsigned', 'long'] (at temp/replace.c:67:20)
                ID: result (at temp/replace.c:67:35)
              Cast:  (at temp/replace.c:67:45)
                Typename: None, [] (at temp/replace.c:0:1)
                  TypeDecl: None, [] (at None)
                    IdentifierType: ['unsigned', 'long'] (at temp/replace.c:67:46)
                Cast:  (at temp/replace.c:67:62)
                  Typename: None, [] (at temp/replace.c:0:1)
                    PtrDecl: [] (at temp/replace.c:67:68)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['char'] (at temp/replace.c:67:63)
                  Constant: int, 0 (at temp/replace.c:67:70)
  FuncDef:  (at temp/replace.c:70:5)
    Decl: addstr, [], [], [] (at temp/replace.c:70:5)
      FuncDeclExt:  (at temp/replace.c:70:5)
        ParamList:  (at temp/replace.c:70:17)
          Decl: c, [], [], [] (at temp/replace.c:70:17)
            TypeDecl: c, [] (at temp/replace.c:70:17)
              IdentifierType: ['char'] (at temp/replace.c:70:12)
          Decl: outset, [], [], [] (at temp/replace.c:70:26)
            PtrDecl: [] (at temp/replace.c:70:26)
              TypeDecl: outset, [] (at temp/replace.c:70:27)
                IdentifierType: ['char'] (at temp/replace.c:70:21)
          Decl: j, [], [], [] (at temp/replace.c:70:40)
            PtrDecl: [] (at temp/replace.c:70:40)
              TypeDecl: j, [] (at temp/replace.c:70:41)
                IdentifierType: ['int'] (at temp/replace.c:70:36)
          Decl: maxset, [], [], [] (at temp/replace.c:70:49)
            TypeDecl: maxset, [] (at temp/replace.c:70:49)
              IdentifierType: ['int'] (at temp/replace.c:70:45)
        TypeDecl: addstr, [] (at temp/replace.c:70:5)
          IdentifierType: ['int'] (at temp/replace.c:70:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:71:1)
      Decl: result, [], [], [] (at temp/replace.c:72:8)
        TypeDecl: result, [] (at temp/replace.c:72:8)
          IdentifierType: ['bool'] (at temp/replace.c:72:3)
      Compound:  (at temp/replace.c:74:1)
        If:  (at temp/replace.c:75:3)
          BinaryOp: >= (at temp/replace.c:75:8)
            UnaryOp: * (at temp/replace.c:75:8)
              ID: j (at temp/replace.c:75:8)
            ID: maxset (at temp/replace.c:75:13)
          Compound:  (at temp/replace.c:75:1)
            Assignment: = (at temp/replace.c:76:5)
              ID: result (at temp/replace.c:76:5)
              Cast:  (at temp/replace.c:76:14)
                Typename: None, [] (at temp/replace.c:0:1)
                  TypeDecl: None, [] (at None)
                    IdentifierType: ['bool'] (at temp/replace.c:76:15)
                Constant: int, 0 (at temp/replace.c:76:21)
          Compound:  (at temp/replace.c:77:1)
            Assignment: = (at temp/replace.c:78:7)
              UnaryOp: * (at temp/replace.c:78:7)
                BinaryOp: + (at temp/replace.c:78:7)
                  ID: outset (at temp/replace.c:78:7)
                  UnaryOp: * (at temp/replace.c:78:17)
                    ID: j (at temp/replace.c:78:17)
              ID: c (at temp/replace.c:78:22)
            UnaryOp: p++ (at temp/replace.c:79:7)
              UnaryOp: * (at temp/replace.c:79:7)
                ID: j (at temp/replace.c:79:7)
            Assignment: = (at temp/replace.c:80:5)
              ID: result (at temp/replace.c:80:5)
              Cast:  (at temp/replace.c:80:14)
                Typename: None, [] (at temp/replace.c:0:1)
                  TypeDecl: None, [] (at None)
                    IdentifierType: ['bool'] (at temp/replace.c:80:15)
                Constant: int, 1 (at temp/replace.c:80:21)
        Return:  (at temp/replace.c:82:3)
          Cast:  (at temp/replace.c:82:11)
            Typename: None, [] (at temp/replace.c:0:1)
              TypeDecl: None, [] (at None)
                IdentifierType: ['int'] (at temp/replace.c:82:12)
            ID: result (at temp/replace.c:82:17)
  FuncDef:  (at temp/replace.c:85:6)
    Decl: esc, [], [], [] (at temp/replace.c:85:6)
      FuncDeclExt:  (at temp/replace.c:85:6)
        ParamList:  (at temp/replace.c:85:15)
          Decl: s, [], [], [] (at temp/replace.c:85:15)
            PtrDecl: [] (at temp/replace.c:85:15)
              TypeDecl: s, [] (at temp/replace.c:85:16)
                IdentifierType: ['char'] (at temp/replace.c:85:10)
          Decl: i, [], [], [] (at temp/replace.c:85:24)
            PtrDecl: [] (at temp/replace.c:85:24)
              TypeDecl: i, [] (at temp/replace.c:85:25)
                IdentifierType: ['int'] (at temp/replace.c:85:20)
        TypeDecl: esc, [] (at temp/replace.c:85:6)
          IdentifierType: ['char'] (at temp/replace.c:85:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:86:1)
      Decl: result, [], [], [] (at temp/replace.c:87:8)
        TypeDecl: result, [] (at temp/replace.c:87:8)
          IdentifierType: ['char'] (at temp/replace.c:87:3)
      Compound:  (at temp/replace.c:89:1)
        If:  (at temp/replace.c:90:3)
          BinaryOp: != (at temp/replace.c:90:7)
            Cast:  (at temp/replace.c:90:7)
              Typename: None, [] (at temp/replace.c:0:1)
                TypeDecl: None, [] (at None)
                  IdentifierType: ['int'] (at temp/replace.c:90:8)
              UnaryOp: * (at temp/replace.c:90:15)
                BinaryOp: + (at temp/replace.c:90:15)
                  ID: s (at temp/replace.c:90:15)
                  UnaryOp: * (at temp/replace.c:90:20)
                    ID: i (at temp/replace.c:90:20)
            Constant: int, 64 (at temp/replace.c:90:26)
          Compound:  (at temp/replace.c:90:1)
            Assignment: = (at temp/replace.c:91:5)
              ID: result (at temp/replace.c:91:5)
              UnaryOp: * (at temp/replace.c:91:16)
                BinaryOp: + (at temp/replace.c:91:16)
                  ID: s (at temp/replace.c:91:16)
                  UnaryOp: * (at temp/replace.c:91:21)
                    ID: i (at temp/replace.c:91:21)
          Compound:  (at temp/replace.c:92:1)
            If:  (at temp/replace.c:93:3)
              BinaryOp: == (at temp/replace.c:93:7)
                Cast:  (at temp/replace.c:93:7)
                  Typename: None, [] (at temp/replace.c:0:1)
                    TypeDecl: None, [] (at None)
                      IdentifierType: ['int'] (at temp/replace.c:93:8)
                  UnaryOp: * (at temp/replace.c:93:15)
                    BinaryOp: + (at temp/replace.c:93:15)
                      ID: s (at temp/replace.c:93:15)
                      BinaryOp: + (at temp/replace.c:93:21)
                        UnaryOp: * (at temp/replace.c:93:21)
                          ID: i (at temp/replace.c:93:21)
                        Constant: int, 1 (at temp/replace.c:93:25)
                Constant: int, 0 (at temp/replace.c:93:32)
              Compound:  (at temp/replace.c:93:1)
                Assignment: = (at temp/replace.c:94:5)
                  ID: result (at temp/replace.c:94:5)
                  Cast:  (at temp/replace.c:94:14)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['char'] (at temp/replace.c:94:15)
                    Constant: char, '@' (at temp/replace.c:94:21)
              Compound:  (at temp/replace.c:95:1)
                UnaryOp: p++ (at temp/replace.c:96:7)
                  UnaryOp: * (at temp/replace.c:96:7)
                    ID: i (at temp/replace.c:96:7)
                If:  (at temp/replace.c:97:5)
                  BinaryOp: == (at temp/replace.c:97:9)
                    Cast:  (at temp/replace.c:97:9)
                      Typename: None, [] (at temp/replace.c:0:1)
                        TypeDecl: None, [] (at None)
                          IdentifierType: ['int'] (at temp/replace.c:97:10)
                      UnaryOp: * (at temp/replace.c:97:17)
                        BinaryOp: + (at temp/replace.c:97:17)
                          ID: s (at temp/replace.c:97:17)
                          UnaryOp: * (at temp/replace.c:97:22)
                            ID: i (at temp/replace.c:97:22)
                    Constant: int, 110 (at temp/replace.c:97:28)
                  Compound:  (at temp/replace.c:97:1)
                    Assignment: = (at temp/replace.c:98:7)
                      ID: result (at temp/replace.c:98:7)
                      Cast:  (at temp/replace.c:98:16)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['char'] (at temp/replace.c:98:17)
                        Constant: int, 10 (at temp/replace.c:98:22)
                  Compound:  (at temp/replace.c:99:1)
                    If:  (at temp/replace.c:100:5)
                      BinaryOp: == (at temp/replace.c:100:9)
                        Cast:  (at temp/replace.c:100:9)
                          Typename: None, [] (at temp/replace.c:0:1)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['int'] (at temp/replace.c:100:10)
                          UnaryOp: * (at temp/replace.c:100:17)
                            BinaryOp: + (at temp/replace.c:100:17)
                              ID: s (at temp/replace.c:100:17)
                              UnaryOp: * (at temp/replace.c:100:22)
                                ID: i (at temp/replace.c:100:22)
                        Constant: int, 116 (at temp/replace.c:100:28)
                      Compound:  (at temp/replace.c:100:1)
                        Assignment: = (at temp/replace.c:101:7)
                          ID: result (at temp/replace.c:101:7)
                          Cast:  (at temp/replace.c:101:16)
                            Typename: None, [] (at temp/replace.c:0:1)
                              TypeDecl: None, [] (at None)
                                IdentifierType: ['char'] (at temp/replace.c:101:17)
                            Constant: int, 9 (at temp/replace.c:101:22)
                      Compound:  (at temp/replace.c:102:1)
                        Assignment: = (at temp/replace.c:103:7)
                          ID: result (at temp/replace.c:103:7)
                          UnaryOp: * (at temp/replace.c:103:18)
                            BinaryOp: + (at temp/replace.c:103:18)
                              ID: s (at temp/replace.c:103:18)
                              UnaryOp: * (at temp/replace.c:103:23)
                                ID: i (at temp/replace.c:103:23)
        Return:  (at temp/replace.c:108:3)
          ID: result (at temp/replace.c:108:11)
  Decl: change, [], [], [] (at temp/replace.c:111:6)
    FuncDeclExt:  (at temp/replace.c:111:6)
      ParamList:  (at temp/replace.c:111:18)
        Decl: pat, [], [], [] (at temp/replace.c:111:18)
          PtrDecl: [] (at temp/replace.c:111:18)
            TypeDecl: pat, [] (at temp/replace.c:111:19)
              IdentifierType: ['char'] (at temp/replace.c:111:13)
        Decl: sub, [], [], [] (at temp/replace.c:111:30)
          PtrDecl: [] (at temp/replace.c:111:30)
            TypeDecl: sub, [] (at temp/replace.c:111:31)
              IdentifierType: ['char'] (at temp/replace.c:111:25)
      TypeDecl: change, [] (at temp/replace.c:111:6)
        IdentifierType: ['void'] (at temp/replace.c:111:1)
      ExprList:  (at temp/replace.c:0)
  Decl: isalnum, [], ['extern'], [] (at temp/replace.c:112:14)
    FuncDeclExt:  (at temp/replace.c:112:14)
      TypeDecl: isalnum, [] (at temp/replace.c:112:14)
        IdentifierType: ['int'] (at temp/replace.c:112:8)
      ExprList:  (at temp/replace.c:0)
  FuncDef:  (at temp/replace.c:113:6)
    Decl: dodash, [], [], [] (at temp/replace.c:113:6)
      FuncDeclExt:  (at temp/replace.c:113:6)
        ParamList:  (at temp/replace.c:113:18)
          Decl: delim, [], [], [] (at temp/replace.c:113:18)
            TypeDecl: delim, [] (at temp/replace.c:113:18)
              IdentifierType: ['char'] (at temp/replace.c:113:13)
          Decl: src, [], [], [] (at temp/replace.c:113:31)
            PtrDecl: [] (at temp/replace.c:113:31)
              TypeDecl: src, [] (at temp/replace.c:113:32)
                IdentifierType: ['char'] (at temp/replace.c:113:26)
          Decl: i, [], [], [] (at temp/replace.c:113:42)
            PtrDecl: [] (at temp/replace.c:113:42)
              TypeDecl: i, [] (at temp/replace.c:113:43)
                IdentifierType: ['int'] (at temp/replace.c:113:38)
          Decl: dest, [], [], [] (at temp/replace.c:113:52)
            PtrDecl: [] (at temp/replace.c:113:52)
              TypeDecl: dest, [] (at temp/replace.c:113:53)
                IdentifierType: ['char'] (at temp/replace.c:113:47)
          Decl: j, [], [], [] (at temp/replace.c:113:64)
            PtrDecl: [] (at temp/replace.c:113:64)
              TypeDecl: j, [] (at temp/replace.c:113:65)
                IdentifierType: ['int'] (at temp/replace.c:113:60)
          Decl: maxset, [], [], [] (at temp/replace.c:113:73)
            TypeDecl: maxset, [] (at temp/replace.c:113:73)
              IdentifierType: ['int'] (at temp/replace.c:113:69)
        TypeDecl: dodash, [] (at temp/replace.c:113:6)
          IdentifierType: ['void'] (at temp/replace.c:113:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:114:1)
      Decl: k, [], [], [] (at temp/replace.c:115:7)
        TypeDecl: k, [] (at temp/replace.c:115:7)
          IdentifierType: ['int'] (at temp/replace.c:115:3)
      Decl: junk, [], [], [] (at temp/replace.c:116:8)
        TypeDecl: junk, [] (at temp/replace.c:116:8)
          IdentifierType: ['bool'] (at temp/replace.c:116:3)
      Decl: escjunk, [], [], [] (at temp/replace.c:117:8)
        TypeDecl: escjunk, [] (at temp/replace.c:117:8)
          IdentifierType: ['char'] (at temp/replace.c:117:3)
      Decl: tmp, [], [], [] (at temp/replace.c:118:7)
        TypeDecl: tmp, [] (at temp/replace.c:118:7)
          IdentifierType: ['int'] (at temp/replace.c:118:3)
      Decl: tmp___0, [], [], [] (at temp/replace.c:119:7)
        TypeDecl: tmp___0, [] (at temp/replace.c:119:7)
          IdentifierType: ['int'] (at temp/replace.c:119:3)
      Decl: tmp___1, [], [], [] (at temp/replace.c:120:7)
        TypeDecl: tmp___1, [] (at temp/replace.c:120:7)
          IdentifierType: ['int'] (at temp/replace.c:120:3)
      Decl: tmp___2, [], [], [] (at temp/replace.c:121:7)
        TypeDecl: tmp___2, [] (at temp/replace.c:121:7)
          IdentifierType: ['int'] (at temp/replace.c:121:3)
      Decl: tmp___3, [], [], [] (at temp/replace.c:122:7)
        TypeDecl: tmp___3, [] (at temp/replace.c:122:7)
          IdentifierType: ['int'] (at temp/replace.c:122:3)
      Decl: tmp___4, [], [], [] (at temp/replace.c:123:7)
        TypeDecl: tmp___4, [] (at temp/replace.c:123:7)
          IdentifierType: ['int'] (at temp/replace.c:123:3)
      Decl: tmp___5, [], [], [] (at temp/replace.c:124:7)
        TypeDecl: tmp___5, [] (at temp/replace.c:124:7)
          IdentifierType: ['int'] (at temp/replace.c:124:3)
      Compound:  (at temp/replace.c:126:1)
        Compound:  (at temp/replace.c:127:1)
          While:  (at temp/replace.c:128:3)
            Constant: int, 1 (at temp/replace.c:128:10)
            Compound:  (at temp/replace.c:128:1)
              Label: while_continue (at temp/replace.c:129:5)
                EmptyStatement:  (at temp/replace.c:129:21)
              If:  (at temp/replace.c:130:5)
                BinaryOp: != (at temp/replace.c:130:9)
                  Cast:  (at temp/replace.c:130:9)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:130:10)
                    UnaryOp: * (at temp/replace.c:130:17)
                      BinaryOp: + (at temp/replace.c:130:17)
                        ID: src (at temp/replace.c:130:17)
                        UnaryOp: * (at temp/replace.c:130:24)
                          ID: i (at temp/replace.c:130:24)
                  Cast:  (at temp/replace.c:130:30)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:130:31)
                    ID: delim (at temp/replace.c:130:36)
                Compound:  (at temp/replace.c:130:1)
                  If:  (at temp/replace.c:131:7)
                    UnaryOp: ! (at temp/replace.c:131:14)
                      BinaryOp: != (at temp/replace.c:131:14)
                        Cast:  (at temp/replace.c:131:14)
                          Typename: None, [] (at temp/replace.c:0:1)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['int'] (at temp/replace.c:131:15)
                          UnaryOp: * (at temp/replace.c:131:22)
                            BinaryOp: + (at temp/replace.c:131:22)
                              ID: src (at temp/replace.c:131:22)
                              UnaryOp: * (at temp/replace.c:131:29)
                                ID: i (at temp/replace.c:131:29)
                        Constant: int, 0 (at temp/replace.c:131:35)
                    Compound:  (at temp/replace.c:131:1)
                      Goto: while_break (at temp/replace.c:132:9)
                Compound:  (at temp/replace.c:134:1)
                  Goto: while_break (at temp/replace.c:135:7)
              If:  (at temp/replace.c:137:5)
                BinaryOp: == (at temp/replace.c:137:9)
                  Cast:  (at temp/replace.c:137:9)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:137:10)
                    UnaryOp: * (at temp/replace.c:137:17)
                      BinaryOp: + (at temp/replace.c:137:17)
                        ID: src (at temp/replace.c:137:17)
                        BinaryOp: - (at temp/replace.c:137:25)
                          UnaryOp: * (at temp/replace.c:137:25)
                            ID: i (at temp/replace.c:137:25)
                          Constant: int, 1 (at temp/replace.c:137:29)
                  Constant: int, 64 (at temp/replace.c:137:36)
                Compound:  (at temp/replace.c:137:1)
                  Compound:  (at temp/replace.c:138:1)
                    Assignment: = (at temp/replace.c:139:7)
                      ID: escjunk (at temp/replace.c:139:7)
                      FuncCall:  (at temp/replace.c:139:17)
                        ID: esc (at temp/replace.c:139:17)
                        ExprList:  (at temp/replace.c:139:21)
                          ID: src (at temp/replace.c:139:21)
                          ID: i (at temp/replace.c:139:26)
                    Assignment: = (at temp/replace.c:140:7)
                      ID: tmp (at temp/replace.c:140:7)
                      FuncCall:  (at temp/replace.c:140:13)
                        ID: addstr (at temp/replace.c:140:13)
                        ExprList:  (at temp/replace.c:140:20)
                          ID: escjunk (at temp/replace.c:140:20)
                          ID: dest (at temp/replace.c:140:29)
                          ID: j (at temp/replace.c:140:35)
                          ID: maxset (at temp/replace.c:140:38)
                    Assignment: = (at temp/replace.c:141:7)
                      ID: junk (at temp/replace.c:141:7)
                      Cast:  (at temp/replace.c:141:14)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['bool'] (at temp/replace.c:141:15)
                        ID: tmp (at temp/replace.c:141:21)
                Compound:  (at temp/replace.c:143:1)
                  If:  (at temp/replace.c:144:5)
                    BinaryOp: != (at temp/replace.c:144:9)
                      Cast:  (at temp/replace.c:144:9)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['int'] (at temp/replace.c:144:10)
                        UnaryOp: * (at temp/replace.c:144:17)
                          BinaryOp: + (at temp/replace.c:144:17)
                            ID: src (at temp/replace.c:144:17)
                            UnaryOp: * (at temp/replace.c:144:24)
                              ID: i (at temp/replace.c:144:24)
                      Constant: int, 45 (at temp/replace.c:144:30)
                    Compound:  (at temp/replace.c:144:1)
                      Compound:  (at temp/replace.c:145:1)
                        Assignment: = (at temp/replace.c:146:7)
                          ID: tmp___0 (at temp/replace.c:146:7)
                          FuncCall:  (at temp/replace.c:146:17)
                            ID: addstr (at temp/replace.c:146:17)
                            ExprList:  (at temp/replace.c:146:26)
                              UnaryOp: * (at temp/replace.c:146:26)
                                BinaryOp: + (at temp/replace.c:146:26)
                                  ID: src (at temp/replace.c:146:26)
                                  UnaryOp: * (at temp/replace.c:146:33)
                                    ID: i (at temp/replace.c:146:33)
                              ID: dest (at temp/replace.c:146:37)
                              ID: j (at temp/replace.c:146:43)
                              ID: maxset (at temp/replace.c:146:46)
                        Assignment: = (at temp/replace.c:147:7)
                          ID: junk (at temp/replace.c:147:7)
                          Cast:  (at temp/replace.c:147:14)
                            Typename: None, [] (at temp/replace.c:0:1)
                              TypeDecl: None, [] (at None)
                                IdentifierType: ['bool'] (at temp/replace.c:147:15)
                            ID: tmp___0 (at temp/replace.c:147:21)
                    Compound:  (at temp/replace.c:149:1)
                      If:  (at temp/replace.c:150:5)
                        BinaryOp: <= (at temp/replace.c:150:10)
                          UnaryOp: * (at temp/replace.c:150:10)
                            ID: j (at temp/replace.c:150:10)
                          Constant: int, 1 (at temp/replace.c:150:15)
                        Compound:  (at temp/replace.c:150:1)
                          Compound:  (at temp/replace.c:151:1)
                            Assignment: = (at temp/replace.c:152:7)
                              ID: tmp___1 (at temp/replace.c:152:7)
                              FuncCall:  (at temp/replace.c:152:17)
                                ID: addstr (at temp/replace.c:152:17)
                                ExprList:  (at temp/replace.c:152:24)
                                  Cast:  (at temp/replace.c:152:24)
                                    Typename: None, [] (at temp/replace.c:0:1)
                                      TypeDecl: None, [] (at None)
                                        IdentifierType: ['char'] (at temp/replace.c:152:25)
                                    Constant: char, '-' (at temp/replace.c:152:31)
                                  ID: dest (at temp/replace.c:152:36)
                                  ID: j (at temp/replace.c:152:42)
                                  ID: maxset (at temp/replace.c:152:45)
                            Assignment: = (at temp/replace.c:153:7)
                              ID: junk (at temp/replace.c:153:7)
                              Cast:  (at temp/replace.c:153:14)
                                Typename: None, [] (at temp/replace.c:0:1)
                                  TypeDecl: None, [] (at None)
                                    IdentifierType: ['bool'] (at temp/replace.c:153:15)
                                ID: tmp___1 (at temp/replace.c:153:21)
                        Compound:  (at temp/replace.c:155:1)
                          If:  (at temp/replace.c:156:5)
                            BinaryOp: == (at temp/replace.c:156:9)
                              Cast:  (at temp/replace.c:156:9)
                                Typename: None, [] (at temp/replace.c:0:1)
                                  TypeDecl: None, [] (at None)
                                    IdentifierType: ['int'] (at temp/replace.c:156:10)
                                UnaryOp: * (at temp/replace.c:156:17)
                                  BinaryOp: + (at temp/replace.c:156:17)
                                    ID: src (at temp/replace.c:156:17)
                                    BinaryOp: + (at temp/replace.c:156:25)
                                      UnaryOp: * (at temp/replace.c:156:25)
                                        ID: i (at temp/replace.c:156:25)
                                      Constant: int, 1 (at temp/replace.c:156:29)
                              Constant: int, 0 (at temp/replace.c:156:36)
                            Compound:  (at temp/replace.c:156:1)
                              Compound:  (at temp/replace.c:157:1)
                                Assignment: = (at temp/replace.c:158:7)
                                  ID: tmp___1 (at temp/replace.c:158:7)
                                  FuncCall:  (at temp/replace.c:158:17)
                                    ID: addstr (at temp/replace.c:158:17)
                                    ExprList:  (at temp/replace.c:158:24)
                                      Cast:  (at temp/replace.c:158:24)
                                        Typename: None, [] (at temp/replace.c:0:1)
                                          TypeDecl: None, [] (at None)
                                            IdentifierType: ['char'] (at temp/replace.c:158:25)
                                        Constant: char, '-' (at temp/replace.c:158:31)
                                      ID: dest (at temp/replace.c:158:36)
                                      ID: j (at temp/replace.c:158:42)
                                      ID: maxset (at temp/replace.c:158:45)
                                Assignment: = (at temp/replace.c:159:7)
                                  ID: junk (at temp/replace.c:159:7)
                                  Cast:  (at temp/replace.c:159:14)
                                    Typename: None, [] (at temp/replace.c:0:1)
                                      TypeDecl: None, [] (at None)
                                        IdentifierType: ['bool'] (at temp/replace.c:159:15)
                                    ID: tmp___1 (at temp/replace.c:159:21)
                            Compound:  (at temp/replace.c:161:1)
                              Compound:  (at temp/replace.c:162:1)
                                Assignment: = (at temp/replace.c:163:7)
                                  ID: tmp___4 (at temp/replace.c:163:7)
                                  FuncCall:  (at temp/replace.c:163:17)
                                    ID: isalnum (at temp/replace.c:163:17)
                                    ExprList:  (at temp/replace.c:163:25)
                                      Cast:  (at temp/replace.c:163:25)
                                        Typename: None, [] (at temp/replace.c:0:1)
                                          TypeDecl: None, [] (at None)
                                            IdentifierType: ['int'] (at temp/replace.c:163:26)
                                        UnaryOp: * (at temp/replace.c:163:33)
                                          BinaryOp: + (at temp/replace.c:163:33)
                                            ID: src (at temp/replace.c:163:33)
                                            BinaryOp: - (at temp/replace.c:163:41)
                                              UnaryOp: * (at temp/replace.c:163:41)
                                                ID: i (at temp/replace.c:163:41)
                                              Constant: int, 1 (at temp/replace.c:163:45)
                                Assignment: = (at temp/replace.c:164:7)
                                  ID: tmp___5 (at temp/replace.c:164:7)
                                  FuncCall:  (at temp/replace.c:164:17)
                                    ID: isalnum (at temp/replace.c:164:17)
                                    ExprList:  (at temp/replace.c:164:25)
                                      Cast:  (at temp/replace.c:164:25)
                                        Typename: None, [] (at temp/replace.c:0:1)
                                          TypeDecl: None, [] (at None)
                                            IdentifierType: ['int'] (at temp/replace.c:164:26)
                                        UnaryOp: * (at temp/replace.c:164:33)
                                          BinaryOp: + (at temp/replace.c:164:33)
                                            ID: src (at temp/replace.c:164:33)
                                            BinaryOp: + (at temp/replace.c:164:41)
                                              UnaryOp: * (at temp/replace.c:164:41)
                                                ID: i (at temp/replace.c:164:41)
                                              Constant: int, 1 (at temp/replace.c:164:45)
                              If:  (at temp/replace.c:166:7)
                                BinaryOp: & (at temp/replace.c:166:11)
                                  ID: tmp___4 (at temp/replace.c:166:11)
                                  ID: tmp___5 (at temp/replace.c:166:21)
                                Compound:  (at temp/replace.c:166:1)
                                  If:  (at temp/replace.c:167:9)
                                    BinaryOp: <= (at temp/replace.c:167:13)
                                      Cast:  (at temp/replace.c:167:13)
                                        Typename: None, [] (at temp/replace.c:0:1)
                                          TypeDecl: None, [] (at None)
                                            IdentifierType: ['int'] (at temp/replace.c:167:14)
                                        UnaryOp: * (at temp/replace.c:167:21)
                                          BinaryOp: + (at temp/replace.c:167:21)
                                            ID: src (at temp/replace.c:167:21)
                                            BinaryOp: - (at temp/replace.c:167:29)
                                              UnaryOp: * (at temp/replace.c:167:29)
                                                ID: i (at temp/replace.c:167:29)
                                              Constant: int, 1 (at temp/replace.c:167:33)
                                      Cast:  (at temp/replace.c:167:40)
                                        Typename: None, [] (at temp/replace.c:0:1)
                                          TypeDecl: None, [] (at None)
                                            IdentifierType: ['int'] (at temp/replace.c:167:41)
                                        UnaryOp: * (at temp/replace.c:167:48)
                                          BinaryOp: + (at temp/replace.c:167:48)
                                            ID: src (at temp/replace.c:167:48)
                                            BinaryOp: + (at temp/replace.c:167:56)
                                              UnaryOp: * (at temp/replace.c:167:56)
                                                ID: i (at temp/replace.c:167:56)
                                              Constant: int, 1 (at temp/replace.c:167:60)
                                    Compound:  (at temp/replace.c:167:1)
                                      Assignment: = (at temp/replace.c:168:11)
                                        ID: k (at temp/replace.c:168:11)
                                        BinaryOp: + (at temp/replace.c:168:15)
                                          Cast:  (at temp/replace.c:168:15)
                                            Typename: None, [] (at temp/replace.c:0:1)
                                              TypeDecl: None, [] (at None)
                                                IdentifierType: ['int'] (at temp/replace.c:168:16)
                                            UnaryOp: * (at temp/replace.c:168:23)
                                              BinaryOp: + (at temp/replace.c:168:23)
                                                ID: src (at temp/replace.c:168:23)
                                                BinaryOp: - (at temp/replace.c:168:31)
                                                  UnaryOp: * (at temp/replace.c:168:31)
                                                    ID: i (at temp/replace.c:168:31)
                                                  Constant: int, 1 (at temp/replace.c:168:35)
                                          Constant: int, 1 (at temp/replace.c:168:41)
                                      Compound:  (at temp/replace.c:169:1)
                                        While:  (at temp/replace.c:170:11)
                                          Constant: int, 1 (at temp/replace.c:170:18)
                                          Compound:  (at temp/replace.c:170:1)
                                            Label: while_continue___0 (at temp/replace.c:171:13)
                                              EmptyStatement:  (at temp/replace.c:171:33)
                                            If:  (at temp/replace.c:172:13)
                                              UnaryOp: ! (at temp/replace.c:172:20)
                                                BinaryOp: <= (at temp/replace.c:172:20)
                                                  ID: k (at temp/replace.c:172:20)
                                                  Cast:  (at temp/replace.c:172:25)
                                                    Typename: None, [] (at temp/replace.c:0:1)
                                                      TypeDecl: None, [] (at None)
                                                        IdentifierType: ['int'] (at temp/replace.c:172:26)
                                                    UnaryOp: * (at temp/replace.c:172:33)
                                                      BinaryOp: + (at temp/replace.c:172:33)
                                                        ID: src (at temp/replace.c:172:33)
                                                        BinaryOp: + (at temp/replace.c:172:41)
                                                          UnaryOp: * (at temp/replace.c:172:41)
                                                            ID: i (at temp/replace.c:172:41)
                                                          Constant: int, 1 (at temp/replace.c:172:45)
                                              Compound:  (at temp/replace.c:172:1)
                                                Goto: while_break___0 (at temp/replace.c:173:15)
                                            Compound:  (at temp/replace.c:175:1)
                                              Assignment: = (at temp/replace.c:176:13)
                                                ID: tmp___2 (at temp/replace.c:176:13)
                                                FuncCall:  (at temp/replace.c:176:23)
                                                  ID: addstr (at temp/replace.c:176:23)
                                                  ExprList:  (at temp/replace.c:176:30)
                                                    Cast:  (at temp/replace.c:176:30)
                                                      Typename: None, [] (at temp/replace.c:0:1)
                                                        TypeDecl: None, [] (at None)
                                                          IdentifierType: ['char'] (at temp/replace.c:176:31)
                                                      ID: k (at temp/replace.c:176:37)
                                                    ID: dest (at temp/replace.c:176:40)
                                                    ID: j (at temp/replace.c:176:46)
                                                    ID: maxset (at temp/replace.c:176:49)
                                              Assignment: = (at temp/replace.c:177:13)
                                                ID: junk (at temp/replace.c:177:13)
                                                Cast:  (at temp/replace.c:177:20)
                                                  Typename: None, [] (at temp/replace.c:0:1)
                                                    TypeDecl: None, [] (at None)
                                                      IdentifierType: ['bool'] (at temp/replace.c:177:21)
                                                  ID: tmp___2 (at temp/replace.c:177:27)
                                              UnaryOp: p++ (at temp/replace.c:178:13)
                                                ID: k (at temp/replace.c:178:13)
                                        Label: while_break___0 (at temp/replace.c:181:11)
                                          EmptyStatement:  (at temp/replace.c:181:28)
                                      UnaryOp: p++ (at temp/replace.c:183:13)
                                        UnaryOp: * (at temp/replace.c:183:13)
                                          ID: i (at temp/replace.c:183:13)
                                    Compound:  (at temp/replace.c:184:1)
                                      Compound:  (at temp/replace.c:185:1)
                                        Assignment: = (at temp/replace.c:186:11)
                                          ID: tmp___3 (at temp/replace.c:186:11)
                                          FuncCall:  (at temp/replace.c:186:21)
                                            ID: addstr (at temp/replace.c:186:21)
                                            ExprList:  (at temp/replace.c:186:28)
                                              Cast:  (at temp/replace.c:186:28)
                                                Typename: None, [] (at temp/replace.c:0:1)
                                                  TypeDecl: None, [] (at None)
                                                    IdentifierType: ['char'] (at temp/replace.c:186:29)
                                                Constant: char, '-' (at temp/replace.c:186:35)
                                              ID: dest (at temp/replace.c:186:40)
                                              ID: j (at temp/replace.c:186:46)
                                              ID: maxset (at temp/replace.c:186:49)
                                        Assignment: = (at temp/replace.c:187:11)
                                          ID: junk (at temp/replace.c:187:11)
                                          Cast:  (at temp/replace.c:187:18)
                                            Typename: None, [] (at temp/replace.c:0:1)
                                              TypeDecl: None, [] (at None)
                                                IdentifierType: ['bool'] (at temp/replace.c:187:19)
                                            ID: tmp___3 (at temp/replace.c:187:25)
                                Compound:  (at temp/replace.c:190:1)
                                  Compound:  (at temp/replace.c:191:1)
                                    Assignment: = (at temp/replace.c:192:9)
                                      ID: tmp___3 (at temp/replace.c:192:9)
                                      FuncCall:  (at temp/replace.c:192:19)
                                        ID: addstr (at temp/replace.c:192:19)
                                        ExprList:  (at temp/replace.c:192:26)
                                          Cast:  (at temp/replace.c:192:26)
                                            Typename: None, [] (at temp/replace.c:0:1)
                                              TypeDecl: None, [] (at None)
                                                IdentifierType: ['char'] (at temp/replace.c:192:27)
                                            Constant: char, '-' (at temp/replace.c:192:33)
                                          ID: dest (at temp/replace.c:192:38)
                                          ID: j (at temp/replace.c:192:44)
                                          ID: maxset (at temp/replace.c:192:47)
                                    Assignment: = (at temp/replace.c:193:9)
                                      ID: junk (at temp/replace.c:193:9)
                                      Cast:  (at temp/replace.c:193:16)
                                        Typename: None, [] (at temp/replace.c:0:1)
                                          TypeDecl: None, [] (at None)
                                            IdentifierType: ['bool'] (at temp/replace.c:193:17)
                                        ID: tmp___3 (at temp/replace.c:193:23)
              UnaryOp: p++ (at temp/replace.c:200:7)
                UnaryOp: * (at temp/replace.c:200:7)
                  ID: i (at temp/replace.c:200:7)
          Label: while_break (at temp/replace.c:202:3)
            EmptyStatement:  (at temp/replace.c:202:16)
        Return:  (at temp/replace.c:204:3)
  FuncDef:  (at temp/replace.c:207:6)
    Decl: getccl, [], [], [] (at temp/replace.c:207:6)
      FuncDeclExt:  (at temp/replace.c:207:6)
        ParamList:  (at temp/replace.c:207:18)
          Decl: arg, [], [], [] (at temp/replace.c:207:18)
            PtrDecl: [] (at temp/replace.c:207:18)
              TypeDecl: arg, [] (at temp/replace.c:207:19)
                IdentifierType: ['char'] (at temp/replace.c:207:13)
          Decl: i, [], [], [] (at temp/replace.c:207:29)
            PtrDecl: [] (at temp/replace.c:207:29)
              TypeDecl: i, [] (at temp/replace.c:207:30)
                IdentifierType: ['int'] (at temp/replace.c:207:25)
          Decl: pat, [], [], [] (at temp/replace.c:207:39)
            PtrDecl: [] (at temp/replace.c:207:39)
              TypeDecl: pat, [] (at temp/replace.c:207:40)
                IdentifierType: ['char'] (at temp/replace.c:207:34)
          Decl: j, [], [], [] (at temp/replace.c:207:50)
            PtrDecl: [] (at temp/replace.c:207:50)
              TypeDecl: j, [] (at temp/replace.c:207:51)
                IdentifierType: ['int'] (at temp/replace.c:207:46)
        TypeDecl: getccl, [] (at temp/replace.c:207:6)
          IdentifierType: ['bool'] (at temp/replace.c:207:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:208:1)
      Decl: jstart, [], [], [] (at temp/replace.c:209:7)
        TypeDecl: jstart, [] (at temp/replace.c:209:7)
          IdentifierType: ['int'] (at temp/replace.c:209:3)
      Decl: junk, [], [], [] (at temp/replace.c:210:8)
        TypeDecl: junk, [] (at temp/replace.c:210:8)
          IdentifierType: ['bool'] (at temp/replace.c:210:3)
      Decl: tmp, [], [], [] (at temp/replace.c:211:7)
        TypeDecl: tmp, [] (at temp/replace.c:211:7)
          IdentifierType: ['int'] (at temp/replace.c:211:3)
      Decl: tmp___0, [], [], [] (at temp/replace.c:212:7)
        TypeDecl: tmp___0, [] (at temp/replace.c:212:7)
          IdentifierType: ['int'] (at temp/replace.c:212:3)
      Decl: tmp___1, [], [], [] (at temp/replace.c:213:7)
        TypeDecl: tmp___1, [] (at temp/replace.c:213:7)
          IdentifierType: ['int'] (at temp/replace.c:213:3)
      Compound:  (at temp/replace.c:215:1)
        UnaryOp: p++ (at temp/replace.c:216:5)
          UnaryOp: * (at temp/replace.c:216:5)
            ID: i (at temp/replace.c:216:5)
        If:  (at temp/replace.c:217:3)
          BinaryOp: == (at temp/replace.c:217:7)
            Cast:  (at temp/replace.c:217:7)
              Typename: None, [] (at temp/replace.c:0:1)
                TypeDecl: None, [] (at None)
                  IdentifierType: ['int'] (at temp/replace.c:217:8)
              UnaryOp: * (at temp/replace.c:217:15)
                BinaryOp: + (at temp/replace.c:217:15)
                  ID: arg (at temp/replace.c:217:15)
                  UnaryOp: * (at temp/replace.c:217:22)
                    ID: i (at temp/replace.c:217:22)
            Constant: int, 94 (at temp/replace.c:217:28)
          Compound:  (at temp/replace.c:217:1)
            Compound:  (at temp/replace.c:218:1)
              Assignment: = (at temp/replace.c:219:5)
                ID: tmp (at temp/replace.c:219:5)
                FuncCall:  (at temp/replace.c:219:11)
                  ID: addstr (at temp/replace.c:219:11)
                  ExprList:  (at temp/replace.c:219:18)
                    Cast:  (at temp/replace.c:219:18)
                      Typename: None, [] (at temp/replace.c:0:1)
                        TypeDecl: None, [] (at None)
                          IdentifierType: ['char'] (at temp/replace.c:219:19)
                      Constant: char, '!' (at temp/replace.c:219:25)
                    ID: pat (at temp/replace.c:219:30)
                    ID: j (at temp/replace.c:219:35)
                    Constant: int, 100 (at temp/replace.c:219:38)
              Assignment: = (at temp/replace.c:220:5)
                ID: junk (at temp/replace.c:220:5)
                Cast:  (at temp/replace.c:220:12)
                  Typename: None, [] (at temp/replace.c:0:1)
                    TypeDecl: None, [] (at None)
                      IdentifierType: ['bool'] (at temp/replace.c:220:13)
                  ID: tmp (at temp/replace.c:220:19)
              UnaryOp: p++ (at temp/replace.c:221:7)
                UnaryOp: * (at temp/replace.c:221:7)
                  ID: i (at temp/replace.c:221:7)
          Compound:  (at temp/replace.c:223:1)
            Compound:  (at temp/replace.c:224:1)
              Assignment: = (at temp/replace.c:225:5)
                ID: tmp___0 (at temp/replace.c:225:5)
                FuncCall:  (at temp/replace.c:225:15)
                  ID: addstr (at temp/replace.c:225:15)
                  ExprList:  (at temp/replace.c:225:22)
                    Cast:  (at temp/replace.c:225:22)
                      Typename: None, [] (at temp/replace.c:0:1)
                        TypeDecl: None, [] (at None)
                          IdentifierType: ['char'] (at temp/replace.c:225:23)
                      Constant: char, '[' (at temp/replace.c:225:29)
                    ID: pat (at temp/replace.c:225:34)
                    ID: j (at temp/replace.c:225:39)
                    Constant: int, 100 (at temp/replace.c:225:42)
              Assignment: = (at temp/replace.c:226:5)
                ID: junk (at temp/replace.c:226:5)
                Cast:  (at temp/replace.c:226:12)
                  Typename: None, [] (at temp/replace.c:0:1)
                    TypeDecl: None, [] (at None)
                      IdentifierType: ['bool'] (at temp/replace.c:226:13)
                  ID: tmp___0 (at temp/replace.c:226:19)
        Compound:  (at temp/replace.c:229:1)
          Assignment: = (at temp/replace.c:230:3)
            ID: jstart (at temp/replace.c:230:3)
            UnaryOp: * (at temp/replace.c:230:13)
              ID: j (at temp/replace.c:230:13)
          Assignment: = (at temp/replace.c:231:3)
            ID: tmp___1 (at temp/replace.c:231:3)
            FuncCall:  (at temp/replace.c:231:13)
              ID: addstr (at temp/replace.c:231:13)
              ExprList:  (at temp/replace.c:231:20)
                Cast:  (at temp/replace.c:231:20)
                  Typename: None, [] (at temp/replace.c:0:1)
                    TypeDecl: None, [] (at None)
                      IdentifierType: ['char'] (at temp/replace.c:231:21)
                  Constant: int, 0 (at temp/replace.c:231:26)
                ID: pat (at temp/replace.c:231:29)
                ID: j (at temp/replace.c:231:34)
                Constant: int, 100 (at temp/replace.c:231:37)
          Assignment: = (at temp/replace.c:232:3)
            ID: junk (at temp/replace.c:232:3)
            Cast:  (at temp/replace.c:232:10)
              Typename: None, [] (at temp/replace.c:0:1)
                TypeDecl: None, [] (at None)
                  IdentifierType: ['bool'] (at temp/replace.c:232:11)
              ID: tmp___1 (at temp/replace.c:232:17)
          FuncCall:  (at temp/replace.c:233:3)
            ID: dodash (at temp/replace.c:233:3)
            ExprList:  (at temp/replace.c:233:10)
              Cast:  (at temp/replace.c:233:10)
                Typename: None, [] (at temp/replace.c:0:1)
                  TypeDecl: None, [] (at None)
                    IdentifierType: ['char'] (at temp/replace.c:233:11)
                Constant: char, ']' (at temp/replace.c:233:17)
              ID: arg (at temp/replace.c:233:22)
              ID: i (at temp/replace.c:233:27)
              ID: pat (at temp/replace.c:233:30)
              ID: j (at temp/replace.c:233:35)
              Constant: int, 100 (at temp/replace.c:233:38)
          Assignment: = (at temp/replace.c:234:5)
            UnaryOp: * (at temp/replace.c:234:5)
              BinaryOp: + (at temp/replace.c:234:5)
                ID: pat (at temp/replace.c:234:5)
                ID: jstart (at temp/replace.c:234:11)
            Cast:  (at temp/replace.c:234:21)
              Typename: None, [] (at temp/replace.c:0:1)
                TypeDecl: None, [] (at None)
                  IdentifierType: ['char'] (at temp/replace.c:234:22)
              BinaryOp: - (at temp/replace.c:234:31)
                BinaryOp: - (at temp/replace.c:234:31)
                  UnaryOp: * (at temp/replace.c:234:31)
                    ID: j (at temp/replace.c:234:31)
                  ID: jstart (at temp/replace.c:234:35)
                Constant: int, 1 (at temp/replace.c:234:45)
        Return:  (at temp/replace.c:236:3)
          Cast:  (at temp/replace.c:236:11)
            Typename: None, [] (at temp/replace.c:0:1)
              TypeDecl: None, [] (at None)
                IdentifierType: ['bool'] (at temp/replace.c:236:12)
            BinaryOp: == (at temp/replace.c:236:19)
              Cast:  (at temp/replace.c:236:19)
                Typename: None, [] (at temp/replace.c:0:1)
                  TypeDecl: None, [] (at None)
                    IdentifierType: ['int'] (at temp/replace.c:236:20)
                UnaryOp: * (at temp/replace.c:236:27)
                  BinaryOp: + (at temp/replace.c:236:27)
                    ID: arg (at temp/replace.c:236:27)
                    UnaryOp: * (at temp/replace.c:236:34)
                      ID: i (at temp/replace.c:236:34)
              Constant: int, 93 (at temp/replace.c:236:40)
  FuncDef:  (at temp/replace.c:239:6)
    Decl: stclose, [], [], [] (at temp/replace.c:239:6)
      FuncDeclExt:  (at temp/replace.c:239:6)
        ParamList:  (at temp/replace.c:239:19)
          Decl: pat, [], [], [] (at temp/replace.c:239:19)
            PtrDecl: [] (at temp/replace.c:239:19)
              TypeDecl: pat, [] (at temp/replace.c:239:20)
                IdentifierType: ['char'] (at temp/replace.c:239:14)
          Decl: j, [], [], [] (at temp/replace.c:239:30)
            PtrDecl: [] (at temp/replace.c:239:30)
              TypeDecl: j, [] (at temp/replace.c:239:31)
                IdentifierType: ['int'] (at temp/replace.c:239:26)
          Decl: lastj, [], [], [] (at temp/replace.c:239:39)
            TypeDecl: lastj, [] (at temp/replace.c:239:39)
              IdentifierType: ['int'] (at temp/replace.c:239:35)
        TypeDecl: stclose, [] (at temp/replace.c:239:6)
          IdentifierType: ['void'] (at temp/replace.c:239:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:240:1)
      Decl: jt, [], [], [] (at temp/replace.c:241:7)
        TypeDecl: jt, [] (at temp/replace.c:241:7)
          IdentifierType: ['int'] (at temp/replace.c:241:3)
      Decl: jp, [], [], [] (at temp/replace.c:242:7)
        TypeDecl: jp, [] (at temp/replace.c:242:7)
          IdentifierType: ['int'] (at temp/replace.c:242:3)
      Decl: junk, [], [], [] (at temp/replace.c:243:8)
        TypeDecl: junk, [] (at temp/replace.c:243:8)
          IdentifierType: ['bool'] (at temp/replace.c:243:3)
      Decl: tmp, [], [], [] (at temp/replace.c:244:7)
        TypeDecl: tmp, [] (at temp/replace.c:244:7)
          IdentifierType: ['int'] (at temp/replace.c:244:3)
      Compound:  (at temp/replace.c:246:1)
        Assignment: = (at temp/replace.c:247:3)
          ID: jp (at temp/replace.c:247:3)
          BinaryOp: - (at temp/replace.c:247:9)
            UnaryOp: * (at temp/replace.c:247:9)
              ID: j (at temp/replace.c:247:9)
            Constant: int, 1 (at temp/replace.c:247:13)
        Compound:  (at temp/replace.c:248:1)
          While:  (at temp/replace.c:249:3)
            Constant: int, 1 (at temp/replace.c:249:10)
            Compound:  (at temp/replace.c:249:1)
              Label: while_continue (at temp/replace.c:250:5)
                EmptyStatement:  (at temp/replace.c:250:21)
              If:  (at temp/replace.c:251:5)
                UnaryOp: ! (at temp/replace.c:251:12)
                  BinaryOp: >= (at temp/replace.c:251:12)
                    ID: jp (at temp/replace.c:251:12)
                    ID: lastj (at temp/replace.c:251:18)
                Compound:  (at temp/replace.c:251:1)
                  Goto: while_break (at temp/replace.c:252:7)
              Compound:  (at temp/replace.c:254:1)
                Assignment: = (at temp/replace.c:255:5)
                  ID: jt (at temp/replace.c:255:5)
                  BinaryOp: + (at temp/replace.c:255:10)
                    ID: jp (at temp/replace.c:255:10)
                    Constant: int, 1 (at temp/replace.c:255:15)
                Assignment: = (at temp/replace.c:256:5)
                  ID: tmp (at temp/replace.c:256:5)
                  FuncCall:  (at temp/replace.c:256:11)
                    ID: addstr (at temp/replace.c:256:11)
                    ExprList:  (at temp/replace.c:256:20)
                      UnaryOp: * (at temp/replace.c:256:20)
                        BinaryOp: + (at temp/replace.c:256:20)
                          ID: pat (at temp/replace.c:256:20)
                          ID: jp (at temp/replace.c:256:26)
                      ID: pat (at temp/replace.c:256:31)
                      UnaryOp: & (at temp/replace.c:256:38)
                        ID: jt (at temp/replace.c:256:38)
                      Constant: int, 100 (at temp/replace.c:256:42)
                Assignment: = (at temp/replace.c:257:5)
                  ID: junk (at temp/replace.c:257:5)
                  Cast:  (at temp/replace.c:257:12)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['bool'] (at temp/replace.c:257:13)
                    ID: tmp (at temp/replace.c:257:19)
                UnaryOp: p-- (at temp/replace.c:258:5)
                  ID: jp (at temp/replace.c:258:5)
          Label: while_break (at temp/replace.c:261:3)
            EmptyStatement:  (at temp/replace.c:261:16)
        UnaryOp: p++ (at temp/replace.c:263:5)
          UnaryOp: * (at temp/replace.c:263:5)
            ID: j (at temp/replace.c:263:5)
        Assignment: = (at temp/replace.c:264:5)
          UnaryOp: * (at temp/replace.c:264:5)
            BinaryOp: + (at temp/replace.c:264:5)
              ID: pat (at temp/replace.c:264:5)
              ID: lastj (at temp/replace.c:264:11)
          Cast:  (at temp/replace.c:264:20)
            Typename: None, [] (at temp/replace.c:0:1)
              TypeDecl: None, [] (at None)
                IdentifierType: ['char'] (at temp/replace.c:264:21)
            Constant: char, '*' (at temp/replace.c:264:27)
        Return:  (at temp/replace.c:265:3)
  FuncDef:  (at temp/replace.c:268:6)
    Decl: in_set_2, [], [], [] (at temp/replace.c:268:6)
      FuncDeclExt:  (at temp/replace.c:268:6)
        ParamList:  (at temp/replace.c:268:20)
          Decl: c, [], [], [] (at temp/replace.c:268:20)
            TypeDecl: c, [] (at temp/replace.c:268:20)
              IdentifierType: ['char'] (at temp/replace.c:268:15)
        TypeDecl: in_set_2, [] (at temp/replace.c:268:6)
          IdentifierType: ['bool'] (at temp/replace.c:268:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:269:1)
      Decl: tmp, [], [], [] (at temp/replace.c:270:7)
        TypeDecl: tmp, [] (at temp/replace.c:270:7)
          IdentifierType: ['int'] (at temp/replace.c:270:3)
      Compound:  (at temp/replace.c:272:1)
        If:  (at temp/replace.c:273:3)
          BinaryOp: == (at temp/replace.c:273:7)
            Cast:  (at temp/replace.c:273:7)
              Typename: None, [] (at temp/replace.c:0:1)
                TypeDecl: None, [] (at None)
                  IdentifierType: ['int'] (at temp/replace.c:273:8)
              ID: c (at temp/replace.c:273:13)
            Constant: int, 37 (at temp/replace.c:273:18)
          Compound:  (at temp/replace.c:273:1)
            Assignment: = (at temp/replace.c:274:5)
              ID: tmp (at temp/replace.c:274:5)
              Constant: int, 1 (at temp/replace.c:274:11)
          Compound:  (at temp/replace.c:275:1)
            If:  (at temp/replace.c:276:3)
              BinaryOp: == (at temp/replace.c:276:7)
                Cast:  (at temp/replace.c:276:7)
                  Typename: None, [] (at temp/replace.c:0:1)
                    TypeDecl: None, [] (at None)
                      IdentifierType: ['int'] (at temp/replace.c:276:8)
                  ID: c (at temp/replace.c:276:13)
                Constant: int, 36 (at temp/replace.c:276:18)
              Compound:  (at temp/replace.c:276:1)
                Assignment: = (at temp/replace.c:277:5)
                  ID: tmp (at temp/replace.c:277:5)
                  Constant: int, 1 (at temp/replace.c:277:11)
              Compound:  (at temp/replace.c:278:1)
                If:  (at temp/replace.c:279:3)
                  BinaryOp: == (at temp/replace.c:279:7)
                    Cast:  (at temp/replace.c:279:7)
                      Typename: None, [] (at temp/replace.c:0:1)
                        TypeDecl: None, [] (at None)
                          IdentifierType: ['int'] (at temp/replace.c:279:8)
                      ID: c (at temp/replace.c:279:13)
                    Constant: int, 42 (at temp/replace.c:279:18)
                  Compound:  (at temp/replace.c:279:1)
                    Assignment: = (at temp/replace.c:280:5)
                      ID: tmp (at temp/replace.c:280:5)
                      Constant: int, 1 (at temp/replace.c:280:11)
                  Compound:  (at temp/replace.c:281:1)
                    Assignment: = (at temp/replace.c:282:5)
                      ID: tmp (at temp/replace.c:282:5)
                      Constant: int, 0 (at temp/replace.c:282:11)
        Return:  (at temp/replace.c:286:3)
          Cast:  (at temp/replace.c:286:11)
            Typename: None, [] (at temp/replace.c:0:1)
              TypeDecl: None, [] (at None)
                IdentifierType: ['bool'] (at temp/replace.c:286:12)
            ID: tmp (at temp/replace.c:286:18)
  FuncDef:  (at temp/replace.c:289:6)
    Decl: in_pat_set, [], [], [] (at temp/replace.c:289:6)
      FuncDeclExt:  (at temp/replace.c:289:6)
        ParamList:  (at temp/replace.c:289:22)
          Decl: c, [], [], [] (at temp/replace.c:289:22)
            TypeDecl: c, [] (at temp/replace.c:289:22)
              IdentifierType: ['char'] (at temp/replace.c:289:17)
        TypeDecl: in_pat_set, [] (at temp/replace.c:289:6)
          IdentifierType: ['bool'] (at temp/replace.c:289:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:290:1)
      Decl: tmp, [], [], [] (at temp/replace.c:291:7)
        TypeDecl: tmp, [] (at temp/replace.c:291:7)
          IdentifierType: ['int'] (at temp/replace.c:291:3)
      Compound:  (at temp/replace.c:293:1)
        If:  (at temp/replace.c:294:3)
          BinaryOp: == (at temp/replace.c:294:7)
            Cast:  (at temp/replace.c:294:7)
              Typename: None, [] (at temp/replace.c:0:1)
                TypeDecl: None, [] (at None)
                  IdentifierType: ['int'] (at temp/replace.c:294:8)
              ID: c (at temp/replace.c:294:13)
            Constant: int, 99 (at temp/replace.c:294:18)
          Compound:  (at temp/replace.c:294:1)
            Assignment: = (at temp/replace.c:295:5)
              ID: tmp (at temp/replace.c:295:5)
              Constant: int, 1 (at temp/replace.c:295:11)
          Compound:  (at temp/replace.c:296:1)
            If:  (at temp/replace.c:297:3)
              BinaryOp: == (at temp/replace.c:297:7)
                Cast:  (at temp/replace.c:297:7)
                  Typename: None, [] (at temp/replace.c:0:1)
                    TypeDecl: None, [] (at None)
                      IdentifierType: ['int'] (at temp/replace.c:297:8)
                  ID: c (at temp/replace.c:297:13)
                Constant: int, 37 (at temp/replace.c:297:18)
              Compound:  (at temp/replace.c:297:1)
                Assignment: = (at temp/replace.c:298:5)
                  ID: tmp (at temp/replace.c:298:5)
                  Constant: int, 1 (at temp/replace.c:298:11)
              Compound:  (at temp/replace.c:299:1)
                If:  (at temp/replace.c:300:3)
                  BinaryOp: == (at temp/replace.c:300:7)
                    Cast:  (at temp/replace.c:300:7)
                      Typename: None, [] (at temp/replace.c:0:1)
                        TypeDecl: None, [] (at None)
                          IdentifierType: ['int'] (at temp/replace.c:300:8)
                      ID: c (at temp/replace.c:300:13)
                    Constant: int, 36 (at temp/replace.c:300:18)
                  Compound:  (at temp/replace.c:300:1)
                    Assignment: = (at temp/replace.c:301:5)
                      ID: tmp (at temp/replace.c:301:5)
                      Constant: int, 1 (at temp/replace.c:301:11)
                  Compound:  (at temp/replace.c:302:1)
                    If:  (at temp/replace.c:303:3)
                      BinaryOp: == (at temp/replace.c:303:7)
                        Cast:  (at temp/replace.c:303:7)
                          Typename: None, [] (at temp/replace.c:0:1)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['int'] (at temp/replace.c:303:8)
                          ID: c (at temp/replace.c:303:13)
                        Constant: int, 63 (at temp/replace.c:303:18)
                      Compound:  (at temp/replace.c:303:1)
                        Assignment: = (at temp/replace.c:304:5)
                          ID: tmp (at temp/replace.c:304:5)
                          Constant: int, 1 (at temp/replace.c:304:11)
                      Compound:  (at temp/replace.c:305:1)
                        If:  (at temp/replace.c:306:3)
                          BinaryOp: == (at temp/replace.c:306:7)
                            Cast:  (at temp/replace.c:306:7)
                              Typename: None, [] (at temp/replace.c:0:1)
                                TypeDecl: None, [] (at None)
                                  IdentifierType: ['int'] (at temp/replace.c:306:8)
                              ID: c (at temp/replace.c:306:13)
                            Constant: int, 91 (at temp/replace.c:306:18)
                          Compound:  (at temp/replace.c:306:1)
                            Assignment: = (at temp/replace.c:307:5)
                              ID: tmp (at temp/replace.c:307:5)
                              Constant: int, 1 (at temp/replace.c:307:11)
                          Compound:  (at temp/replace.c:308:1)
                            If:  (at temp/replace.c:309:3)
                              BinaryOp: == (at temp/replace.c:309:7)
                                Cast:  (at temp/replace.c:309:7)
                                  Typename: None, [] (at temp/replace.c:0:1)
                                    TypeDecl: None, [] (at None)
                                      IdentifierType: ['int'] (at temp/replace.c:309:8)
                                  ID: c (at temp/replace.c:309:13)
                                Constant: int, 33 (at temp/replace.c:309:18)
                              Compound:  (at temp/replace.c:309:1)
                                Assignment: = (at temp/replace.c:310:5)
                                  ID: tmp (at temp/replace.c:310:5)
                                  Constant: int, 1 (at temp/replace.c:310:11)
                              Compound:  (at temp/replace.c:311:1)
                                If:  (at temp/replace.c:312:3)
                                  BinaryOp: == (at temp/replace.c:312:7)
                                    Cast:  (at temp/replace.c:312:7)
                                      Typename: None, [] (at temp/replace.c:0:1)
                                        TypeDecl: None, [] (at None)
                                          IdentifierType: ['int'] (at temp/replace.c:312:8)
                                      ID: c (at temp/replace.c:312:13)
                                    Constant: int, 42 (at temp/replace.c:312:18)
                                  Compound:  (at temp/replace.c:312:1)
                                    Assignment: = (at temp/replace.c:313:5)
                                      ID: tmp (at temp/replace.c:313:5)
                                      Constant: int, 1 (at temp/replace.c:313:11)
                                  Compound:  (at temp/replace.c:314:1)
                                    Assignment: = (at temp/replace.c:315:5)
                                      ID: tmp (at temp/replace.c:315:5)
                                      Constant: int, 0 (at temp/replace.c:315:11)
        Return:  (at temp/replace.c:323:3)
          Cast:  (at temp/replace.c:323:11)
            Typename: None, [] (at temp/replace.c:0:1)
              TypeDecl: None, [] (at None)
                IdentifierType: ['bool'] (at temp/replace.c:323:12)
            ID: tmp (at temp/replace.c:323:18)
  FuncDef:  (at temp/replace.c:326:5)
    Decl: makepat, [], [], [] (at temp/replace.c:326:5)
      FuncDeclExt:  (at temp/replace.c:326:5)
        ParamList:  (at temp/replace.c:326:18)
          Decl: arg, [], [], [] (at temp/replace.c:326:18)
            PtrDecl: [] (at temp/replace.c:326:18)
              TypeDecl: arg, [] (at temp/replace.c:326:19)
                IdentifierType: ['char'] (at temp/replace.c:326:13)
          Decl: start, [], [], [] (at temp/replace.c:326:29)
            TypeDecl: start, [] (at temp/replace.c:326:29)
              IdentifierType: ['int'] (at temp/replace.c:326:25)
          Decl: delim, [], [], [] (at temp/replace.c:326:42)
            TypeDecl: delim, [] (at temp/replace.c:326:42)
              IdentifierType: ['char'] (at temp/replace.c:326:37)
          Decl: pat, [], [], [] (at temp/replace.c:326:55)
            PtrDecl: [] (at temp/replace.c:326:55)
              TypeDecl: pat, [] (at temp/replace.c:326:56)
                IdentifierType: ['char'] (at temp/replace.c:326:50)
        TypeDecl: makepat, [] (at temp/replace.c:326:5)
          IdentifierType: ['int'] (at temp/replace.c:326:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:327:1)
      Decl: result, [], [], [] (at temp/replace.c:328:7)
        TypeDecl: result, [] (at temp/replace.c:328:7)
          IdentifierType: ['int'] (at temp/replace.c:328:3)
      Decl: i, [], [], [] (at temp/replace.c:329:7)
        TypeDecl: i, [] (at temp/replace.c:329:7)
          IdentifierType: ['int'] (at temp/replace.c:329:3)
      Decl: j, [], [], [] (at temp/replace.c:330:7)
        TypeDecl: j, [] (at temp/replace.c:330:7)
          IdentifierType: ['int'] (at temp/replace.c:330:3)
      Decl: lastj, [], [], [] (at temp/replace.c:331:7)
        TypeDecl: lastj, [] (at temp/replace.c:331:7)
          IdentifierType: ['int'] (at temp/replace.c:331:3)
      Decl: lj, [], [], [] (at temp/replace.c:332:7)
        TypeDecl: lj, [] (at temp/replace.c:332:7)
          IdentifierType: ['int'] (at temp/replace.c:332:3)
      Decl: done, [], [], [] (at temp/replace.c:333:8)
        TypeDecl: done, [] (at temp/replace.c:333:8)
          IdentifierType: ['bool'] (at temp/replace.c:333:3)
      Decl: junk, [], [], [] (at temp/replace.c:334:8)
        TypeDecl: junk, [] (at temp/replace.c:334:8)
          IdentifierType: ['bool'] (at temp/replace.c:334:3)
      Decl: getres, [], [], [] (at temp/replace.c:335:8)
        TypeDecl: getres, [] (at temp/replace.c:335:8)
          IdentifierType: ['bool'] (at temp/replace.c:335:3)
      Decl: escjunk, [], [], [] (at temp/replace.c:336:8)
        TypeDecl: escjunk, [] (at temp/replace.c:336:8)
          IdentifierType: ['char'] (at temp/replace.c:336:3)
      Decl: tmp, [], [], [] (at temp/replace.c:337:7)
        TypeDecl: tmp, [] (at temp/replace.c:337:7)
          IdentifierType: ['int'] (at temp/replace.c:337:3)
      Decl: tmp___0, [], [], [] (at temp/replace.c:338:7)
        TypeDecl: tmp___0, [] (at temp/replace.c:338:7)
          IdentifierType: ['int'] (at temp/replace.c:338:3)
      Decl: tmp___1, [], [], [] (at temp/replace.c:339:7)
        TypeDecl: tmp___1, [] (at temp/replace.c:339:7)
          IdentifierType: ['int'] (at temp/replace.c:339:3)
      Decl: tmp___2, [], [], [] (at temp/replace.c:340:8)
        TypeDecl: tmp___2, [] (at temp/replace.c:340:8)
          IdentifierType: ['bool'] (at temp/replace.c:340:3)
      Decl: tmp___3, [], [], [] (at temp/replace.c:341:7)
        TypeDecl: tmp___3, [] (at temp/replace.c:341:7)
          IdentifierType: ['int'] (at temp/replace.c:341:3)
      Decl: tmp___4, [], [], [] (at temp/replace.c:342:7)
        TypeDecl: tmp___4, [] (at temp/replace.c:342:7)
          IdentifierType: ['int'] (at temp/replace.c:342:3)
      Decl: tmp___5, [], [], [] (at temp/replace.c:343:7)
        TypeDecl: tmp___5, [] (at temp/replace.c:343:7)
          IdentifierType: ['int'] (at temp/replace.c:343:3)
      Compound:  (at temp/replace.c:345:1)
        Assignment: = (at temp/replace.c:346:3)
          ID: j (at temp/replace.c:346:3)
          Constant: int, 0 (at temp/replace.c:346:7)
        Assignment: = (at temp/replace.c:347:3)
          ID: i (at temp/replace.c:347:3)
          ID: start (at temp/replace.c:347:7)
        Assignment: = (at temp/replace.c:348:3)
          ID: lastj (at temp/replace.c:348:3)
          Constant: int, 0 (at temp/replace.c:348:11)
        Assignment: = (at temp/replace.c:349:3)
          ID: done (at temp/replace.c:349:3)
          Cast:  (at temp/replace.c:349:10)
            Typename: None, [] (at temp/replace.c:0:1)
              TypeDecl: None, [] (at None)
                IdentifierType: ['bool'] (at temp/replace.c:349:11)
            Constant: int, 0 (at temp/replace.c:349:17)
        Compound:  (at temp/replace.c:350:1)
          While:  (at temp/replace.c:351:3)
            Constant: int, 1 (at temp/replace.c:351:10)
            Compound:  (at temp/replace.c:351:1)
              Label: while_continue (at temp/replace.c:352:5)
                EmptyStatement:  (at temp/replace.c:352:21)
              If:  (at temp/replace.c:353:5)
                UnaryOp: ! (at temp/replace.c:353:11)
                  ID: done (at temp/replace.c:353:11)
                Compound:  (at temp/replace.c:353:1)
                  If:  (at temp/replace.c:354:7)
                    BinaryOp: != (at temp/replace.c:354:11)
                      Cast:  (at temp/replace.c:354:11)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['int'] (at temp/replace.c:354:12)
                        UnaryOp: * (at temp/replace.c:354:19)
                          BinaryOp: + (at temp/replace.c:354:19)
                            ID: arg (at temp/replace.c:354:19)
                            ID: i (at temp/replace.c:354:25)
                      Cast:  (at temp/replace.c:354:31)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['int'] (at temp/replace.c:354:32)
                        ID: delim (at temp/replace.c:354:37)
                    Compound:  (at temp/replace.c:354:1)
                      If:  (at temp/replace.c:355:9)
                        UnaryOp: ! (at temp/replace.c:355:16)
                          BinaryOp: != (at temp/replace.c:355:16)
                            Cast:  (at temp/replace.c:355:16)
                              Typename: None, [] (at temp/replace.c:0:1)
                                TypeDecl: None, [] (at None)
                                  IdentifierType: ['int'] (at temp/replace.c:355:17)
                              UnaryOp: * (at temp/replace.c:355:24)
                                BinaryOp: + (at temp/replace.c:355:24)
                                  ID: arg (at temp/replace.c:355:24)
                                  ID: i (at temp/replace.c:355:30)
                            Constant: int, 0 (at temp/replace.c:355:36)
                        Compound:  (at temp/replace.c:355:1)
                          Goto: while_break (at temp/replace.c:356:11)
                    Compound:  (at temp/replace.c:358:1)
                      Goto: while_break (at temp/replace.c:359:9)
                Compound:  (at temp/replace.c:361:1)
                  Goto: while_break (at temp/replace.c:362:7)
              Assignment: = (at temp/replace.c:364:5)
                ID: lj (at temp/replace.c:364:5)
                ID: j (at temp/replace.c:364:10)
              If:  (at temp/replace.c:365:5)
                BinaryOp: == (at temp/replace.c:365:9)
                  Cast:  (at temp/replace.c:365:9)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:365:10)
                    UnaryOp: * (at temp/replace.c:365:17)
                      BinaryOp: + (at temp/replace.c:365:17)
                        ID: arg (at temp/replace.c:365:17)
                        ID: i (at temp/replace.c:365:23)
                  Constant: int, 63 (at temp/replace.c:365:29)
                Compound:  (at temp/replace.c:365:1)
                  Compound:  (at temp/replace.c:366:1)
                    Assignment: = (at temp/replace.c:367:7)
                      ID: tmp (at temp/replace.c:367:7)
                      FuncCall:  (at temp/replace.c:367:13)
                        ID: addstr (at temp/replace.c:367:13)
                        ExprList:  (at temp/replace.c:367:20)
                          Cast:  (at temp/replace.c:367:20)
                            Typename: None, [] (at temp/replace.c:0:1)
                              TypeDecl: None, [] (at None)
                                IdentifierType: ['char'] (at temp/replace.c:367:21)
                            Constant: char, '?' (at temp/replace.c:367:27)
                          ID: pat (at temp/replace.c:367:32)
                          UnaryOp: & (at temp/replace.c:367:39)
                            ID: j (at temp/replace.c:367:39)
                          Constant: int, 100 (at temp/replace.c:367:42)
                    Assignment: = (at temp/replace.c:368:7)
                      ID: junk (at temp/replace.c:368:7)
                      Cast:  (at temp/replace.c:368:14)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['bool'] (at temp/replace.c:368:15)
                        ID: tmp (at temp/replace.c:368:21)
                Compound:  (at temp/replace.c:370:1)
                  If:  (at temp/replace.c:371:5)
                    BinaryOp: == (at temp/replace.c:371:9)
                      Cast:  (at temp/replace.c:371:9)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['int'] (at temp/replace.c:371:10)
                        UnaryOp: * (at temp/replace.c:371:17)
                          BinaryOp: + (at temp/replace.c:371:17)
                            ID: arg (at temp/replace.c:371:17)
                            ID: i (at temp/replace.c:371:23)
                      Constant: int, 37 (at temp/replace.c:371:29)
                    Compound:  (at temp/replace.c:371:1)
                      If:  (at temp/replace.c:372:7)
                        BinaryOp: == (at temp/replace.c:372:11)
                          ID: i (at temp/replace.c:372:11)
                          ID: start (at temp/replace.c:372:16)
                        Compound:  (at temp/replace.c:372:1)
                          Compound:  (at temp/replace.c:373:1)
                            Assignment: = (at temp/replace.c:374:9)
                              ID: tmp___0 (at temp/replace.c:374:9)
                              FuncCall:  (at temp/replace.c:374:19)
                                ID: addstr (at temp/replace.c:374:19)
                                ExprList:  (at temp/replace.c:374:26)
                                  Cast:  (at temp/replace.c:374:26)
                                    Typename: None, [] (at temp/replace.c:0:1)
                                      TypeDecl: None, [] (at None)
                                        IdentifierType: ['char'] (at temp/replace.c:374:27)
                                    Constant: char, '%' (at temp/replace.c:374:33)
                                  ID: pat (at temp/replace.c:374:38)
                                  UnaryOp: & (at temp/replace.c:374:45)
                                    ID: j (at temp/replace.c:374:45)
                                  Constant: int, 100 (at temp/replace.c:374:48)
                            Assignment: = (at temp/replace.c:375:9)
                              ID: junk (at temp/replace.c:375:9)
                              Cast:  (at temp/replace.c:375:16)
                                Typename: None, [] (at temp/replace.c:0:1)
                                  TypeDecl: None, [] (at None)
                                    IdentifierType: ['bool'] (at temp/replace.c:375:17)
                                ID: tmp___0 (at temp/replace.c:375:23)
                        Compound:  (at temp/replace.c:377:1)
                          Goto: _L___0 (at temp/replace.c:378:9)
                    Compound:  (at temp/replace.c:380:1)
                      Label: _L___0 (at temp/replace.c:381:5)
                        If:  (at temp/replace.c:382:5)
                          BinaryOp: == (at temp/replace.c:382:9)
                            Cast:  (at temp/replace.c:382:9)
                              Typename: None, [] (at temp/replace.c:0:1)
                                TypeDecl: None, [] (at None)
                                  IdentifierType: ['int'] (at temp/replace.c:382:10)
                              UnaryOp: * (at temp/replace.c:382:17)
                                BinaryOp: + (at temp/replace.c:382:17)
                                  ID: arg (at temp/replace.c:382:17)
                                  ID: i (at temp/replace.c:382:23)
                            Constant: int, 36 (at temp/replace.c:382:29)
                          Compound:  (at temp/replace.c:382:1)
                            If:  (at temp/replace.c:383:7)
                              BinaryOp: == (at temp/replace.c:383:11)
                                Cast:  (at temp/replace.c:383:11)
                                  Typename: None, [] (at temp/replace.c:0:1)
                                    TypeDecl: None, [] (at None)
                                      IdentifierType: ['int'] (at temp/replace.c:383:12)
                                  UnaryOp: * (at temp/replace.c:383:19)
                                    BinaryOp: + (at temp/replace.c:383:19)
                                      ID: arg (at temp/replace.c:383:19)
                                      BinaryOp: + (at temp/replace.c:383:26)
                                        ID: i (at temp/replace.c:383:26)
                                        Constant: int, 1 (at temp/replace.c:383:30)
                                Cast:  (at temp/replace.c:383:37)
                                  Typename: None, [] (at temp/replace.c:0:1)
                                    TypeDecl: None, [] (at None)
                                      IdentifierType: ['int'] (at temp/replace.c:383:38)
                                  ID: delim (at temp/replace.c:383:43)
                              Compound:  (at temp/replace.c:383:1)
                                Compound:  (at temp/replace.c:384:1)
                                  Assignment: = (at temp/replace.c:385:9)
                                    ID: tmp___1 (at temp/replace.c:385:9)
                                    FuncCall:  (at temp/replace.c:385:19)
                                      ID: addstr (at temp/replace.c:385:19)
                                      ExprList:  (at temp/replace.c:385:26)
                                        Cast:  (at temp/replace.c:385:26)
                                          Typename: None, [] (at temp/replace.c:0:1)
                                            TypeDecl: None, [] (at None)
                                              IdentifierType: ['char'] (at temp/replace.c:385:27)
                                          Constant: char, '$' (at temp/replace.c:385:33)
                                        ID: pat (at temp/replace.c:385:38)
                                        UnaryOp: & (at temp/replace.c:385:45)
                                          ID: j (at temp/replace.c:385:45)
                                        Constant: int, 100 (at temp/replace.c:385:48)
                                  Assignment: = (at temp/replace.c:386:9)
                                    ID: junk (at temp/replace.c:386:9)
                                    Cast:  (at temp/replace.c:386:16)
                                      Typename: None, [] (at temp/replace.c:0:1)
                                        TypeDecl: None, [] (at None)
                                          IdentifierType: ['bool'] (at temp/replace.c:386:17)
                                      ID: tmp___1 (at temp/replace.c:386:23)
                              Compound:  (at temp/replace.c:388:1)
                                Goto: _L (at temp/replace.c:389:9)
                          Compound:  (at temp/replace.c:391:1)
                            Label: _L (at temp/replace.c:392:5)
                              If:  (at temp/replace.c:393:5)
                                BinaryOp: == (at temp/replace.c:393:9)
                                  Cast:  (at temp/replace.c:393:9)
                                    Typename: None, [] (at temp/replace.c:0:1)
                                      TypeDecl: None, [] (at None)
                                        IdentifierType: ['int'] (at temp/replace.c:393:10)
                                    UnaryOp: * (at temp/replace.c:393:17)
                                      BinaryOp: + (at temp/replace.c:393:17)
                                        ID: arg (at temp/replace.c:393:17)
                                        ID: i (at temp/replace.c:393:23)
                                  Constant: int, 91 (at temp/replace.c:393:29)
                                Compound:  (at temp/replace.c:393:1)
                                  Compound:  (at temp/replace.c:394:1)
                                    Assignment: = (at temp/replace.c:395:7)
                                      ID: getres (at temp/replace.c:395:7)
                                      FuncCall:  (at temp/replace.c:395:16)
                                        ID: getccl (at temp/replace.c:395:16)
                                        ExprList:  (at temp/replace.c:395:23)
                                          ID: arg (at temp/replace.c:395:23)
                                          UnaryOp: & (at temp/replace.c:395:30)
                                            ID: i (at temp/replace.c:395:30)
                                          ID: pat (at temp/replace.c:395:33)
                                          UnaryOp: & (at temp/replace.c:395:40)
                                            ID: j (at temp/replace.c:395:40)
                                    Assignment: = (at temp/replace.c:396:7)
                                      ID: done (at temp/replace.c:396:7)
                                      Cast:  (at temp/replace.c:396:14)
                                        Typename: None, [] (at temp/replace.c:0:1)
                                          TypeDecl: None, [] (at None)
                                            IdentifierType: ['bool'] (at temp/replace.c:396:15)
                                        BinaryOp: == (at temp/replace.c:396:22)
                                          Cast:  (at temp/replace.c:396:22)
                                            Typename: None, [] (at temp/replace.c:0:1)
                                              TypeDecl: None, [] (at None)
                                                IdentifierType: ['int'] (at temp/replace.c:396:23)
                                            ID: getres (at temp/replace.c:396:28)
                                          Constant: int, 0 (at temp/replace.c:396:38)
                                Compound:  (at temp/replace.c:398:1)
                                  If:  (at temp/replace.c:399:5)
                                    BinaryOp: == (at temp/replace.c:399:9)
                                      Cast:  (at temp/replace.c:399:9)
                                        Typename: None, [] (at temp/replace.c:0:1)
                                          TypeDecl: None, [] (at None)
                                            IdentifierType: ['int'] (at temp/replace.c:399:10)
                                        UnaryOp: * (at temp/replace.c:399:17)
                                          BinaryOp: + (at temp/replace.c:399:17)
                                            ID: arg (at temp/replace.c:399:17)
                                            ID: i (at temp/replace.c:399:23)
                                      Constant: int, 42 (at temp/replace.c:399:29)
                                    Compound:  (at temp/replace.c:399:1)
                                      If:  (at temp/replace.c:400:7)
                                        BinaryOp: > (at temp/replace.c:400:11)
                                          ID: i (at temp/replace.c:400:11)
                                          ID: start (at temp/replace.c:400:15)
                                        Compound:  (at temp/replace.c:400:1)
                                          Compound:  (at temp/replace.c:401:1)
                                            Assignment: = (at temp/replace.c:402:9)
                                              ID: lj (at temp/replace.c:402:9)
                                              ID: lastj (at temp/replace.c:402:14)
                                            Assignment: = (at temp/replace.c:403:9)
                                              ID: tmp___2 (at temp/replace.c:403:9)
                                              FuncCall:  (at temp/replace.c:403:19)
                                                ID: in_set_2 (at temp/replace.c:403:19)
                                                ExprList:  (at temp/replace.c:403:30)
                                                  UnaryOp: * (at temp/replace.c:403:30)
                                                    BinaryOp: + (at temp/replace.c:403:30)
                                                      ID: pat (at temp/replace.c:403:30)
                                                      ID: lj (at temp/replace.c:403:36)
                                          If:  (at temp/replace.c:405:9)
                                            ID: tmp___2 (at temp/replace.c:405:13)
                                            Compound:  (at temp/replace.c:405:1)
                                              Assignment: = (at temp/replace.c:406:11)
                                                ID: done (at temp/replace.c:406:11)
                                                Cast:  (at temp/replace.c:406:18)
                                                  Typename: None, [] (at temp/replace.c:0:1)
                                                    TypeDecl: None, [] (at None)
                                                      IdentifierType: ['bool'] (at temp/replace.c:406:19)
                                                  Constant: int, 1 (at temp/replace.c:406:25)
                                            Compound:  (at temp/replace.c:407:1)
                                              Compound:  (at temp/replace.c:408:1)
                                                FuncCall:  (at temp/replace.c:409:11)
                                                  ID: stclose (at temp/replace.c:409:11)
                                                  ExprList:  (at temp/replace.c:409:19)
                                                    ID: pat (at temp/replace.c:409:19)
                                                    UnaryOp: & (at temp/replace.c:409:26)
                                                      ID: j (at temp/replace.c:409:26)
                                                    ID: lastj (at temp/replace.c:409:29)
                                        Compound:  (at temp/replace.c:412:1)
                                          Compound:  (at temp/replace.c:413:1)
                                            Assignment: = (at temp/replace.c:414:9)
                                              ID: tmp___3 (at temp/replace.c:414:9)
                                              FuncCall:  (at temp/replace.c:414:19)
                                                ID: addstr (at temp/replace.c:414:19)
                                                ExprList:  (at temp/replace.c:414:26)
                                                  Cast:  (at temp/replace.c:414:26)
                                                    Typename: None, [] (at temp/replace.c:0:1)
                                                      TypeDecl: None, [] (at None)
                                                        IdentifierType: ['char'] (at temp/replace.c:414:27)
                                                    Constant: char, 'c' (at temp/replace.c:414:33)
                                                  ID: pat (at temp/replace.c:414:38)
                                                  UnaryOp: & (at temp/replace.c:414:45)
                                                    ID: j (at temp/replace.c:414:45)
                                                  Constant: int, 100 (at temp/replace.c:414:48)
                                            Assignment: = (at temp/replace.c:415:9)
                                              ID: junk (at temp/replace.c:415:9)
                                              Cast:  (at temp/replace.c:415:16)
                                                Typename: None, [] (at temp/replace.c:0:1)
                                                  TypeDecl: None, [] (at None)
                                                    IdentifierType: ['bool'] (at temp/replace.c:415:17)
                                                ID: tmp___3 (at temp/replace.c:415:23)
                                            Assignment: = (at temp/replace.c:416:9)
                                              ID: escjunk (at temp/replace.c:416:9)
                                              FuncCall:  (at temp/replace.c:416:19)
                                                ID: esc (at temp/replace.c:416:19)
                                                ExprList:  (at temp/replace.c:416:23)
                                                  ID: arg (at temp/replace.c:416:23)
                                                  UnaryOp: & (at temp/replace.c:416:30)
                                                    ID: i (at temp/replace.c:416:30)
                                            Assignment: = (at temp/replace.c:417:9)
                                              ID: tmp___4 (at temp/replace.c:417:9)
                                              FuncCall:  (at temp/replace.c:417:19)
                                                ID: addstr (at temp/replace.c:417:19)
                                                ExprList:  (at temp/replace.c:417:26)
                                                  ID: escjunk (at temp/replace.c:417:26)
                                                  ID: pat (at temp/replace.c:417:35)
                                                  UnaryOp: & (at temp/replace.c:417:42)
                                                    ID: j (at temp/replace.c:417:42)
                                                  Constant: int, 100 (at temp/replace.c:417:45)
                                            Assignment: = (at temp/replace.c:418:9)
                                              ID: junk (at temp/replace.c:418:9)
                                              Cast:  (at temp/replace.c:418:16)
                                                Typename: None, [] (at temp/replace.c:0:1)
                                                  TypeDecl: None, [] (at None)
                                                    IdentifierType: ['bool'] (at temp/replace.c:418:17)
                                                ID: tmp___4 (at temp/replace.c:418:23)
                                    Compound:  (at temp/replace.c:421:1)
                                      Compound:  (at temp/replace.c:422:1)
                                        Assignment: = (at temp/replace.c:423:7)
                                          ID: tmp___3 (at temp/replace.c:423:7)
                                          FuncCall:  (at temp/replace.c:423:17)
                                            ID: addstr (at temp/replace.c:423:17)
                                            ExprList:  (at temp/replace.c:423:24)
                                              Cast:  (at temp/replace.c:423:24)
                                                Typename: None, [] (at temp/replace.c:0:1)
                                                  TypeDecl: None, [] (at None)
                                                    IdentifierType: ['char'] (at temp/replace.c:423:25)
                                                Constant: char, 'c' (at temp/replace.c:423:31)
                                              ID: pat (at temp/replace.c:423:36)
                                              UnaryOp: & (at temp/replace.c:423:43)
                                                ID: j (at temp/replace.c:423:43)
                                              Constant: int, 100 (at temp/replace.c:423:46)
                                        Assignment: = (at temp/replace.c:424:7)
                                          ID: junk (at temp/replace.c:424:7)
                                          Cast:  (at temp/replace.c:424:14)
                                            Typename: None, [] (at temp/replace.c:0:1)
                                              TypeDecl: None, [] (at None)
                                                IdentifierType: ['bool'] (at temp/replace.c:424:15)
                                            ID: tmp___3 (at temp/replace.c:424:21)
                                        Assignment: = (at temp/replace.c:425:7)
                                          ID: escjunk (at temp/replace.c:425:7)
                                          FuncCall:  (at temp/replace.c:425:17)
                                            ID: esc (at temp/replace.c:425:17)
                                            ExprList:  (at temp/replace.c:425:21)
                                              ID: arg (at temp/replace.c:425:21)
                                              UnaryOp: & (at temp/replace.c:425:28)
                                                ID: i (at temp/replace.c:425:28)
                                        Assignment: = (at temp/replace.c:426:7)
                                          ID: tmp___4 (at temp/replace.c:426:7)
                                          FuncCall:  (at temp/replace.c:426:17)
                                            ID: addstr (at temp/replace.c:426:17)
                                            ExprList:  (at temp/replace.c:426:24)
                                              ID: escjunk (at temp/replace.c:426:24)
                                              ID: pat (at temp/replace.c:426:33)
                                              UnaryOp: & (at temp/replace.c:426:40)
                                                ID: j (at temp/replace.c:426:40)
                                              Constant: int, 100 (at temp/replace.c:426:43)
                                        Assignment: = (at temp/replace.c:427:7)
                                          ID: junk (at temp/replace.c:427:7)
                                          Cast:  (at temp/replace.c:427:14)
                                            Typename: None, [] (at temp/replace.c:0:1)
                                              TypeDecl: None, [] (at None)
                                                IdentifierType: ['bool'] (at temp/replace.c:427:15)
                                            ID: tmp___4 (at temp/replace.c:427:21)
              Assignment: = (at temp/replace.c:434:5)
                ID: lastj (at temp/replace.c:434:5)
                ID: lj (at temp/replace.c:434:13)
              If:  (at temp/replace.c:435:5)
                UnaryOp: ! (at temp/replace.c:435:11)
                  ID: done (at temp/replace.c:435:11)
                Compound:  (at temp/replace.c:435:1)
                  UnaryOp: p++ (at temp/replace.c:436:7)
                    ID: i (at temp/replace.c:436:7)
          Label: while_break (at temp/replace.c:439:3)
            EmptyStatement:  (at temp/replace.c:439:16)
        Compound:  (at temp/replace.c:441:1)
          Assignment: = (at temp/replace.c:442:3)
            ID: tmp___5 (at temp/replace.c:442:3)
            FuncCall:  (at temp/replace.c:442:13)
              ID: addstr (at temp/replace.c:442:13)
              ExprList:  (at temp/replace.c:442:20)
                Cast:  (at temp/replace.c:442:20)
                  Typename: None, [] (at temp/replace.c:0:1)
                    TypeDecl: None, [] (at None)
                      IdentifierType: ['char'] (at temp/replace.c:442:21)
                  Constant: char, '\000' (at temp/replace.c:442:27)
                ID: pat (at temp/replace.c:442:35)
                UnaryOp: & (at temp/replace.c:442:42)
                  ID: j (at temp/replace.c:442:42)
                Constant: int, 100 (at temp/replace.c:442:45)
          Assignment: = (at temp/replace.c:443:3)
            ID: junk (at temp/replace.c:443:3)
            Cast:  (at temp/replace.c:443:10)
              Typename: None, [] (at temp/replace.c:0:1)
                TypeDecl: None, [] (at None)
                  IdentifierType: ['bool'] (at temp/replace.c:443:11)
              ID: tmp___5 (at temp/replace.c:443:17)
        If:  (at temp/replace.c:445:3)
          ID: done (at temp/replace.c:445:7)
          Compound:  (at temp/replace.c:445:1)
            Assignment: = (at temp/replace.c:446:5)
              ID: result (at temp/replace.c:446:5)
              Constant: int, 0 (at temp/replace.c:446:14)
          Compound:  (at temp/replace.c:447:1)
            If:  (at temp/replace.c:448:3)
              BinaryOp: != (at temp/replace.c:448:7)
                Cast:  (at temp/replace.c:448:7)
                  Typename: None, [] (at temp/replace.c:0:1)
                    TypeDecl: None, [] (at None)
                      IdentifierType: ['int'] (at temp/replace.c:448:8)
                  UnaryOp: * (at temp/replace.c:448:15)
                    BinaryOp: + (at temp/replace.c:448:15)
                      ID: arg (at temp/replace.c:448:15)
                      ID: i (at temp/replace.c:448:21)
                Cast:  (at temp/replace.c:448:27)
                  Typename: None, [] (at temp/replace.c:0:1)
                    TypeDecl: None, [] (at None)
                      IdentifierType: ['int'] (at temp/replace.c:448:28)
                  ID: delim (at temp/replace.c:448:33)
              Compound:  (at temp/replace.c:448:1)
                Assignment: = (at temp/replace.c:449:5)
                  ID: result (at temp/replace.c:449:5)
                  Constant: int, 0 (at temp/replace.c:449:14)
              Compound:  (at temp/replace.c:450:1)
                If:  (at temp/replace.c:451:3)
                  UnaryOp: ! (at temp/replace.c:451:9)
                    ID: junk (at temp/replace.c:451:9)
                  Compound:  (at temp/replace.c:451:1)
                    Assignment: = (at temp/replace.c:452:5)
                      ID: result (at temp/replace.c:452:5)
                      Constant: int, 0 (at temp/replace.c:452:14)
                  Compound:  (at temp/replace.c:453:1)
                    Assignment: = (at temp/replace.c:454:5)
                      ID: result (at temp/replace.c:454:5)
                      ID: i (at temp/replace.c:454:14)
        Return:  (at temp/replace.c:458:3)
          ID: result (at temp/replace.c:458:11)
  FuncDef:  (at temp/replace.c:461:5)
    Decl: getpat, [], [], [] (at temp/replace.c:461:5)
      FuncDeclExt:  (at temp/replace.c:461:5)
        ParamList:  (at temp/replace.c:461:17)
          Decl: arg, [], [], [] (at temp/replace.c:461:17)
            PtrDecl: [] (at temp/replace.c:461:17)
              TypeDecl: arg, [] (at temp/replace.c:461:18)
                IdentifierType: ['char'] (at temp/replace.c:461:12)
          Decl: pat, [], [], [] (at temp/replace.c:461:29)
            PtrDecl: [] (at temp/replace.c:461:29)
              TypeDecl: pat, [] (at temp/replace.c:461:30)
                IdentifierType: ['char'] (at temp/replace.c:461:24)
        TypeDecl: getpat, [] (at temp/replace.c:461:5)
          IdentifierType: ['int'] (at temp/replace.c:461:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:462:1)
      Decl: makeres, [], [], [] (at temp/replace.c:463:7)
        TypeDecl: makeres, [] (at temp/replace.c:463:7)
          IdentifierType: ['int'] (at temp/replace.c:463:3)
      Compound:  (at temp/replace.c:465:1)
        Compound:  (at temp/replace.c:466:1)
          Assignment: = (at temp/replace.c:467:3)
            ID: makeres (at temp/replace.c:467:3)
            FuncCall:  (at temp/replace.c:467:13)
              ID: makepat (at temp/replace.c:467:13)
              ExprList:  (at temp/replace.c:467:21)
                ID: arg (at temp/replace.c:467:21)
                Constant: int, 0 (at temp/replace.c:467:26)
                Cast:  (at temp/replace.c:467:29)
                  Typename: None, [] (at temp/replace.c:0:1)
                    TypeDecl: None, [] (at None)
                      IdentifierType: ['char'] (at temp/replace.c:467:30)
                  Constant: char, '\000' (at temp/replace.c:467:36)
                ID: pat (at temp/replace.c:467:44)
        Return:  (at temp/replace.c:469:3)
          BinaryOp: > (at temp/replace.c:469:11)
            ID: makeres (at temp/replace.c:469:11)
            Constant: int, 0 (at temp/replace.c:469:21)
  FuncDef:  (at temp/replace.c:472:5)
    Decl: makesub, [], [], [] (at temp/replace.c:472:5)
      FuncDeclExt:  (at temp/replace.c:472:5)
        ParamList:  (at temp/replace.c:472:18)
          Decl: arg, [], [], [] (at temp/replace.c:472:18)
            PtrDecl: [] (at temp/replace.c:472:18)
              TypeDecl: arg, [] (at temp/replace.c:472:19)
                IdentifierType: ['char'] (at temp/replace.c:472:13)
          Decl: from, [], [], [] (at temp/replace.c:472:29)
            TypeDecl: from, [] (at temp/replace.c:472:29)
              IdentifierType: ['int'] (at temp/replace.c:472:25)
          Decl: delim, [], [], [] (at temp/replace.c:472:46)
            TypeDecl: delim, [] (at temp/replace.c:472:46)
              IdentifierType: ['character'] (at temp/replace.c:472:36)
          Decl: sub, [], [], [] (at temp/replace.c:472:59)
            PtrDecl: [] (at temp/replace.c:472:59)
              TypeDecl: sub, [] (at temp/replace.c:472:60)
                IdentifierType: ['char'] (at temp/replace.c:472:54)
        TypeDecl: makesub, [] (at temp/replace.c:472:5)
          IdentifierType: ['int'] (at temp/replace.c:472:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:473:1)
      Decl: result, [], [], [] (at temp/replace.c:474:7)
        TypeDecl: result, [] (at temp/replace.c:474:7)
          IdentifierType: ['int'] (at temp/replace.c:474:3)
      Decl: i, [], [], [] (at temp/replace.c:475:7)
        TypeDecl: i, [] (at temp/replace.c:475:7)
          IdentifierType: ['int'] (at temp/replace.c:475:3)
      Decl: j, [], [], [] (at temp/replace.c:476:7)
        TypeDecl: j, [] (at temp/replace.c:476:7)
          IdentifierType: ['int'] (at temp/replace.c:476:3)
      Decl: junk, [], [], [] (at temp/replace.c:477:8)
        TypeDecl: junk, [] (at temp/replace.c:477:8)
          IdentifierType: ['bool'] (at temp/replace.c:477:3)
      Decl: escjunk, [], [], [] (at temp/replace.c:478:13)
        TypeDecl: escjunk, [] (at temp/replace.c:478:13)
          IdentifierType: ['character'] (at temp/replace.c:478:3)
      Decl: tmp, [], [], [] (at temp/replace.c:479:7)
        TypeDecl: tmp, [] (at temp/replace.c:479:7)
          IdentifierType: ['int'] (at temp/replace.c:479:3)
      Decl: tmp___0, [], [], [] (at temp/replace.c:480:7)
        TypeDecl: tmp___0, [] (at temp/replace.c:480:7)
          IdentifierType: ['int'] (at temp/replace.c:480:3)
      Decl: tmp___1, [], [], [] (at temp/replace.c:481:7)
        TypeDecl: tmp___1, [] (at temp/replace.c:481:7)
          IdentifierType: ['int'] (at temp/replace.c:481:3)
      Compound:  (at temp/replace.c:483:1)
        Assignment: = (at temp/replace.c:484:3)
          ID: j (at temp/replace.c:484:3)
          Constant: int, 0 (at temp/replace.c:484:7)
        Assignment: = (at temp/replace.c:485:3)
          ID: i (at temp/replace.c:485:3)
          ID: from (at temp/replace.c:485:7)
        Compound:  (at temp/replace.c:486:1)
          While:  (at temp/replace.c:487:3)
            Constant: int, 1 (at temp/replace.c:487:10)
            Compound:  (at temp/replace.c:487:1)
              Label: while_continue (at temp/replace.c:488:5)
                EmptyStatement:  (at temp/replace.c:488:21)
              If:  (at temp/replace.c:489:5)
                BinaryOp: != (at temp/replace.c:489:9)
                  Cast:  (at temp/replace.c:489:9)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:489:10)
                    UnaryOp: * (at temp/replace.c:489:17)
                      BinaryOp: + (at temp/replace.c:489:17)
                        ID: arg (at temp/replace.c:489:17)
                        ID: i (at temp/replace.c:489:23)
                  Cast:  (at temp/replace.c:489:29)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:489:30)
                    ID: delim (at temp/replace.c:489:35)
                Compound:  (at temp/replace.c:489:1)
                  If:  (at temp/replace.c:490:7)
                    UnaryOp: ! (at temp/replace.c:490:14)
                      BinaryOp: != (at temp/replace.c:490:14)
                        Cast:  (at temp/replace.c:490:14)
                          Typename: None, [] (at temp/replace.c:0:1)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['int'] (at temp/replace.c:490:15)
                          UnaryOp: * (at temp/replace.c:490:22)
                            BinaryOp: + (at temp/replace.c:490:22)
                              ID: arg (at temp/replace.c:490:22)
                              ID: i (at temp/replace.c:490:28)
                        Constant: int, 0 (at temp/replace.c:490:34)
                    Compound:  (at temp/replace.c:490:1)
                      Goto: while_break (at temp/replace.c:491:9)
                Compound:  (at temp/replace.c:493:1)
                  Goto: while_break (at temp/replace.c:494:7)
              If:  (at temp/replace.c:496:5)
                BinaryOp: == (at temp/replace.c:496:9)
                  Cast:  (at temp/replace.c:496:9)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['unsigned', 'int'] (at temp/replace.c:496:10)
                    UnaryOp: * (at temp/replace.c:496:26)
                      BinaryOp: + (at temp/replace.c:496:26)
                        ID: arg (at temp/replace.c:496:26)
                        ID: i (at temp/replace.c:496:32)
                  Constant: unsigned int, 38U (at temp/replace.c:496:38)
                Compound:  (at temp/replace.c:496:1)
                  Compound:  (at temp/replace.c:497:1)
                    Assignment: = (at temp/replace.c:498:7)
                      ID: tmp (at temp/replace.c:498:7)
                      FuncCall:  (at temp/replace.c:498:13)
                        ID: addstr (at temp/replace.c:498:13)
                        ExprList:  (at temp/replace.c:498:20)
                          Cast:  (at temp/replace.c:498:20)
                            Typename: None, [] (at temp/replace.c:0:1)
                              TypeDecl: None, [] (at None)
                                IdentifierType: ['char'] (at temp/replace.c:498:21)
                            UnaryOp: - (at temp/replace.c:498:27)
                              Constant: int, 1 (at temp/replace.c:498:27)
                          ID: sub (at temp/replace.c:498:30)
                          UnaryOp: & (at temp/replace.c:498:37)
                            ID: j (at temp/replace.c:498:37)
                          Constant: int, 100 (at temp/replace.c:498:40)
                    Assignment: = (at temp/replace.c:499:7)
                      ID: junk (at temp/replace.c:499:7)
                      Cast:  (at temp/replace.c:499:14)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['bool'] (at temp/replace.c:499:15)
                        ID: tmp (at temp/replace.c:499:21)
                Compound:  (at temp/replace.c:501:1)
                  Compound:  (at temp/replace.c:502:1)
                    Assignment: = (at temp/replace.c:503:7)
                      ID: escjunk (at temp/replace.c:503:7)
                      FuncCall:  (at temp/replace.c:503:17)
                        ID: esc (at temp/replace.c:503:17)
                        ExprList:  (at temp/replace.c:503:21)
                          ID: arg (at temp/replace.c:503:21)
                          UnaryOp: & (at temp/replace.c:503:28)
                            ID: i (at temp/replace.c:503:28)
                    Assignment: = (at temp/replace.c:504:7)
                      ID: tmp___0 (at temp/replace.c:504:7)
                      FuncCall:  (at temp/replace.c:504:17)
                        ID: addstr (at temp/replace.c:504:17)
                        ExprList:  (at temp/replace.c:504:24)
                          ID: escjunk (at temp/replace.c:504:24)
                          ID: sub (at temp/replace.c:504:33)
                          UnaryOp: & (at temp/replace.c:504:40)
                            ID: j (at temp/replace.c:504:40)
                          Constant: int, 100 (at temp/replace.c:504:43)
                    Assignment: = (at temp/replace.c:505:7)
                      ID: junk (at temp/replace.c:505:7)
                      Cast:  (at temp/replace.c:505:14)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['bool'] (at temp/replace.c:505:15)
                        ID: tmp___0 (at temp/replace.c:505:21)
              UnaryOp: p++ (at temp/replace.c:508:5)
                ID: i (at temp/replace.c:508:5)
          Label: while_break (at temp/replace.c:510:3)
            EmptyStatement:  (at temp/replace.c:510:16)
        If:  (at temp/replace.c:512:3)
          BinaryOp: != (at temp/replace.c:512:7)
            Cast:  (at temp/replace.c:512:7)
              Typename: None, [] (at temp/replace.c:0:1)
                TypeDecl: None, [] (at None)
                  IdentifierType: ['int'] (at temp/replace.c:512:8)
              UnaryOp: * (at temp/replace.c:512:15)
                BinaryOp: + (at temp/replace.c:512:15)
                  ID: arg (at temp/replace.c:512:15)
                  ID: i (at temp/replace.c:512:21)
            Cast:  (at temp/replace.c:512:27)
              Typename: None, [] (at temp/replace.c:0:1)
                TypeDecl: None, [] (at None)
                  IdentifierType: ['int'] (at temp/replace.c:512:28)
              ID: delim (at temp/replace.c:512:33)
          Compound:  (at temp/replace.c:512:1)
            Assignment: = (at temp/replace.c:513:5)
              ID: result (at temp/replace.c:513:5)
              Constant: int, 0 (at temp/replace.c:513:14)
          Compound:  (at temp/replace.c:514:1)
            Compound:  (at temp/replace.c:515:1)
              Assignment: = (at temp/replace.c:516:5)
                ID: tmp___1 (at temp/replace.c:516:5)
                FuncCall:  (at temp/replace.c:516:15)
                  ID: addstr (at temp/replace.c:516:15)
                  ExprList:  (at temp/replace.c:516:22)
                    Cast:  (at temp/replace.c:516:22)
                      Typename: None, [] (at temp/replace.c:0:1)
                        TypeDecl: None, [] (at None)
                          IdentifierType: ['char'] (at temp/replace.c:516:23)
                      Constant: char, '\000' (at temp/replace.c:516:29)
                    ID: sub (at temp/replace.c:516:37)
                    UnaryOp: & (at temp/replace.c:516:44)
                      ID: j (at temp/replace.c:516:44)
                    Constant: int, 100 (at temp/replace.c:516:47)
              Assignment: = (at temp/replace.c:517:5)
                ID: junk (at temp/replace.c:517:5)
                Cast:  (at temp/replace.c:517:12)
                  Typename: None, [] (at temp/replace.c:0:1)
                    TypeDecl: None, [] (at None)
                      IdentifierType: ['bool'] (at temp/replace.c:517:13)
                  ID: tmp___1 (at temp/replace.c:517:19)
            If:  (at temp/replace.c:519:5)
              UnaryOp: ! (at temp/replace.c:519:11)
                ID: junk (at temp/replace.c:519:11)
              Compound:  (at temp/replace.c:519:1)
                Assignment: = (at temp/replace.c:520:7)
                  ID: result (at temp/replace.c:520:7)
                  Constant: int, 0 (at temp/replace.c:520:16)
              Compound:  (at temp/replace.c:521:1)
                Assignment: = (at temp/replace.c:522:7)
                  ID: result (at temp/replace.c:522:7)
                  ID: i (at temp/replace.c:522:16)
        Return:  (at temp/replace.c:525:3)
          ID: result (at temp/replace.c:525:11)
  FuncDef:  (at temp/replace.c:528:6)
    Decl: getsub, [], [], [] (at temp/replace.c:528:6)
      FuncDeclExt:  (at temp/replace.c:528:6)
        ParamList:  (at temp/replace.c:528:18)
          Decl: arg, [], [], [] (at temp/replace.c:528:18)
            PtrDecl: [] (at temp/replace.c:528:18)
              TypeDecl: arg, [] (at temp/replace.c:528:19)
                IdentifierType: ['char'] (at temp/replace.c:528:13)
          Decl: sub, [], [], [] (at temp/replace.c:528:30)
            PtrDecl: [] (at temp/replace.c:528:30)
              TypeDecl: sub, [] (at temp/replace.c:528:31)
                IdentifierType: ['char'] (at temp/replace.c:528:25)
        TypeDecl: getsub, [] (at temp/replace.c:528:6)
          IdentifierType: ['bool'] (at temp/replace.c:528:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:529:1)
      Decl: makeres, [], [], [] (at temp/replace.c:530:7)
        TypeDecl: makeres, [] (at temp/replace.c:530:7)
          IdentifierType: ['int'] (at temp/replace.c:530:3)
      Compound:  (at temp/replace.c:532:1)
        Compound:  (at temp/replace.c:533:1)
          Assignment: = (at temp/replace.c:534:3)
            ID: makeres (at temp/replace.c:534:3)
            FuncCall:  (at temp/replace.c:534:13)
              ID: makesub (at temp/replace.c:534:13)
              ExprList:  (at temp/replace.c:534:21)
                ID: arg (at temp/replace.c:534:21)
                Constant: int, 0 (at temp/replace.c:534:26)
                Cast:  (at temp/replace.c:534:29)
                  Typename: None, [] (at temp/replace.c:0:1)
                    TypeDecl: None, [] (at None)
                      IdentifierType: ['character'] (at temp/replace.c:534:30)
                  Constant: char, '\000' (at temp/replace.c:534:41)
                ID: sub (at temp/replace.c:534:49)
        Return:  (at temp/replace.c:536:3)
          Cast:  (at temp/replace.c:536:11)
            Typename: None, [] (at temp/replace.c:0:1)
              TypeDecl: None, [] (at None)
                IdentifierType: ['bool'] (at temp/replace.c:536:12)
            BinaryOp: > (at temp/replace.c:536:19)
              ID: makeres (at temp/replace.c:536:19)
              Constant: int, 0 (at temp/replace.c:536:29)
  Decl: subline, [], [], [] (at temp/replace.c:539:6)
    FuncDeclExt:  (at temp/replace.c:539:6)
      ParamList:  (at temp/replace.c:539:19)
        Decl: lin, [], [], [] (at temp/replace.c:539:19)
          PtrDecl: [] (at temp/replace.c:539:19)
            TypeDecl: lin, [] (at temp/replace.c:539:20)
              IdentifierType: ['char'] (at temp/replace.c:539:14)
        Decl: pat, [], [], [] (at temp/replace.c:539:31)
          PtrDecl: [] (at temp/replace.c:539:31)
            TypeDecl: pat, [] (at temp/replace.c:539:32)
              IdentifierType: ['char'] (at temp/replace.c:539:26)
        Decl: sub, [], [], [] (at temp/replace.c:539:43)
          PtrDecl: [] (at temp/replace.c:539:43)
            TypeDecl: sub, [] (at temp/replace.c:539:44)
              IdentifierType: ['char'] (at temp/replace.c:539:38)
      TypeDecl: subline, [] (at temp/replace.c:539:6)
        IdentifierType: ['void'] (at temp/replace.c:539:1)
      ExprList:  (at temp/replace.c:0)
  FuncDef:  (at temp/replace.c:540:6)
    Decl: locate, [], [], [] (at temp/replace.c:540:6)
      FuncDeclExt:  (at temp/replace.c:540:6)
        ParamList:  (at temp/replace.c:540:23)
          Decl: c, [], [], [] (at temp/replace.c:540:23)
            TypeDecl: c, [] (at temp/replace.c:540:23)
              IdentifierType: ['character'] (at temp/replace.c:540:13)
          Decl: pat, [], [], [] (at temp/replace.c:540:32)
            PtrDecl: [] (at temp/replace.c:540:32)
              TypeDecl: pat, [] (at temp/replace.c:540:33)
                IdentifierType: ['char'] (at temp/replace.c:540:27)
          Decl: offset, [], [], [] (at temp/replace.c:540:43)
            TypeDecl: offset, [] (at temp/replace.c:540:43)
              IdentifierType: ['int'] (at temp/replace.c:540:39)
        TypeDecl: locate, [] (at temp/replace.c:540:6)
          IdentifierType: ['bool'] (at temp/replace.c:540:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:541:1)
      Decl: i, [], [], [] (at temp/replace.c:542:7)
        TypeDecl: i, [] (at temp/replace.c:542:7)
          IdentifierType: ['int'] (at temp/replace.c:542:3)
      Decl: flag, [], [], [] (at temp/replace.c:543:8)
        TypeDecl: flag, [] (at temp/replace.c:543:8)
          IdentifierType: ['bool'] (at temp/replace.c:543:3)
      Compound:  (at temp/replace.c:545:1)
        Assignment: = (at temp/replace.c:546:3)
          ID: flag (at temp/replace.c:546:3)
          Cast:  (at temp/replace.c:546:10)
            Typename: None, [] (at temp/replace.c:0:1)
              TypeDecl: None, [] (at None)
                IdentifierType: ['bool'] (at temp/replace.c:546:11)
            Constant: int, 0 (at temp/replace.c:546:17)
        Assignment: = (at temp/replace.c:547:3)
          ID: i (at temp/replace.c:547:3)
          BinaryOp: + (at temp/replace.c:547:7)
            ID: offset (at temp/replace.c:547:7)
            Cast:  (at temp/replace.c:547:16)
              Typename: None, [] (at temp/replace.c:0:1)
                TypeDecl: None, [] (at None)
                  IdentifierType: ['int'] (at temp/replace.c:547:17)
              UnaryOp: * (at temp/replace.c:547:24)
                BinaryOp: + (at temp/replace.c:547:24)
                  ID: pat (at temp/replace.c:547:24)
                  ID: offset (at temp/replace.c:547:30)
        Compound:  (at temp/replace.c:548:1)
          While:  (at temp/replace.c:549:3)
            Constant: int, 1 (at temp/replace.c:549:10)
            Compound:  (at temp/replace.c:549:1)
              Label: while_continue (at temp/replace.c:550:5)
                EmptyStatement:  (at temp/replace.c:550:21)
              If:  (at temp/replace.c:551:5)
                UnaryOp: ! (at temp/replace.c:551:12)
                  BinaryOp: > (at temp/replace.c:551:12)
                    ID: i (at temp/replace.c:551:12)
                    ID: offset (at temp/replace.c:551:16)
                Compound:  (at temp/replace.c:551:1)
                  Goto: while_break (at temp/replace.c:552:7)
              If:  (at temp/replace.c:554:5)
                BinaryOp: == (at temp/replace.c:554:9)
                  Cast:  (at temp/replace.c:554:9)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:554:10)
                    ID: c (at temp/replace.c:554:15)
                  Cast:  (at temp/replace.c:554:20)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:554:21)
                    UnaryOp: * (at temp/replace.c:554:28)
                      BinaryOp: + (at temp/replace.c:554:28)
                        ID: pat (at temp/replace.c:554:28)
                        ID: i (at temp/replace.c:554:34)
                Compound:  (at temp/replace.c:554:1)
                  Assignment: = (at temp/replace.c:555:7)
                    ID: flag (at temp/replace.c:555:7)
                    Cast:  (at temp/replace.c:555:14)
                      Typename: None, [] (at temp/replace.c:0:1)
                        TypeDecl: None, [] (at None)
                          IdentifierType: ['bool'] (at temp/replace.c:555:15)
                      Constant: int, 1 (at temp/replace.c:555:21)
                  Assignment: = (at temp/replace.c:556:7)
                    ID: i (at temp/replace.c:556:7)
                    ID: offset (at temp/replace.c:556:11)
                Compound:  (at temp/replace.c:557:1)
                  UnaryOp: p-- (at temp/replace.c:558:7)
                    ID: i (at temp/replace.c:558:7)
          Label: while_break (at temp/replace.c:561:3)
            EmptyStatement:  (at temp/replace.c:561:16)
        Return:  (at temp/replace.c:563:3)
          ID: flag (at temp/replace.c:563:11)
  Decl: abort, [], ['extern'], [] (at temp/replace.c:566:14)
    FuncDeclExt:  (at temp/replace.c:566:14)
      TypeDecl: abort, [] (at temp/replace.c:566:14)
        IdentifierType: ['int'] (at temp/replace.c:566:8)
      ExprList:  (at temp/replace.c:0)
  FuncDef:  (at temp/replace.c:567:6)
    Decl: omatch, [], [], [] (at temp/replace.c:567:6)
      FuncDeclExt:  (at temp/replace.c:567:6)
        ParamList:  (at temp/replace.c:567:18)
          Decl: lin, [], [], [] (at temp/replace.c:567:18)
            PtrDecl: [] (at temp/replace.c:567:18)
              TypeDecl: lin, [] (at temp/replace.c:567:19)
                IdentifierType: ['char'] (at temp/replace.c:567:13)
          Decl: i, [], [], [] (at temp/replace.c:567:29)
            PtrDecl: [] (at temp/replace.c:567:29)
              TypeDecl: i, [] (at temp/replace.c:567:30)
                IdentifierType: ['int'] (at temp/replace.c:567:25)
          Decl: pat, [], [], [] (at temp/replace.c:567:39)
            PtrDecl: [] (at temp/replace.c:567:39)
              TypeDecl: pat, [] (at temp/replace.c:567:40)
                IdentifierType: ['char'] (at temp/replace.c:567:34)
          Decl: j, [], [], [] (at temp/replace.c:567:50)
            TypeDecl: j, [] (at temp/replace.c:567:50)
              IdentifierType: ['int'] (at temp/replace.c:567:46)
        TypeDecl: omatch, [] (at temp/replace.c:567:6)
          IdentifierType: ['bool'] (at temp/replace.c:567:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:568:1)
      Decl: advance, [], [], [] (at temp/replace.c:569:8)
        TypeDecl: advance, [] (at temp/replace.c:569:8)
          IdentifierType: ['char'] (at temp/replace.c:569:3)
      Decl: result, [], [], [] (at temp/replace.c:570:8)
        TypeDecl: result, [] (at temp/replace.c:570:8)
          IdentifierType: ['bool'] (at temp/replace.c:570:3)
      Decl: tmp, [], [], [] (at temp/replace.c:571:8)
        TypeDecl: tmp, [] (at temp/replace.c:571:8)
          IdentifierType: ['bool'] (at temp/replace.c:571:3)
      Decl: tmp___0, [], [], [] (at temp/replace.c:572:8)
        TypeDecl: tmp___0, [] (at temp/replace.c:572:8)
          IdentifierType: ['bool'] (at temp/replace.c:572:3)
      Decl: tmp___1, [], [], [] (at temp/replace.c:573:8)
        TypeDecl: tmp___1, [] (at temp/replace.c:573:8)
          IdentifierType: ['bool'] (at temp/replace.c:573:3)
      Compound:  (at temp/replace.c:575:1)
        Assignment: = (at temp/replace.c:576:3)
          ID: advance (at temp/replace.c:576:3)
          Cast:  (at temp/replace.c:576:13)
            Typename: None, [] (at temp/replace.c:0:1)
              TypeDecl: None, [] (at None)
                IdentifierType: ['char'] (at temp/replace.c:576:14)
            UnaryOp: - (at temp/replace.c:576:20)
              Constant: int, 1 (at temp/replace.c:576:20)
        If:  (at temp/replace.c:577:3)
          BinaryOp: == (at temp/replace.c:577:7)
            Cast:  (at temp/replace.c:577:7)
              Typename: None, [] (at temp/replace.c:0:1)
                TypeDecl: None, [] (at None)
                  IdentifierType: ['int'] (at temp/replace.c:577:8)
              UnaryOp: * (at temp/replace.c:577:15)
                BinaryOp: + (at temp/replace.c:577:15)
                  ID: lin (at temp/replace.c:577:15)
                  UnaryOp: * (at temp/replace.c:577:22)
                    ID: i (at temp/replace.c:577:22)
            Constant: int, 0 (at temp/replace.c:577:28)
          Compound:  (at temp/replace.c:577:1)
            Assignment: = (at temp/replace.c:578:5)
              ID: result (at temp/replace.c:578:5)
              Cast:  (at temp/replace.c:578:14)
                Typename: None, [] (at temp/replace.c:0:1)
                  TypeDecl: None, [] (at None)
                    IdentifierType: ['bool'] (at temp/replace.c:578:15)
                Constant: int, 0 (at temp/replace.c:578:21)
          Compound:  (at temp/replace.c:579:1)
            Compound:  (at temp/replace.c:580:1)
              Assignment: = (at temp/replace.c:581:5)
                ID: tmp___1 (at temp/replace.c:581:5)
                FuncCall:  (at temp/replace.c:581:15)
                  ID: in_pat_set (at temp/replace.c:581:15)
                  ExprList:  (at temp/replace.c:581:28)
                    UnaryOp: * (at temp/replace.c:581:28)
                      BinaryOp: + (at temp/replace.c:581:28)
                        ID: pat (at temp/replace.c:581:28)
                        ID: j (at temp/replace.c:581:34)
            If:  (at temp/replace.c:583:5)
              ID: tmp___1 (at temp/replace.c:583:9)
              Compound:  (at temp/replace.c:583:1)
                Compound:  (at temp/replace.c:584:1)
                  If:  (at temp/replace.c:585:7)
                    BinaryOp: == (at temp/replace.c:585:11)
                      Cast:  (at temp/replace.c:585:11)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['int'] (at temp/replace.c:585:12)
                        UnaryOp: * (at temp/replace.c:585:19)
                          BinaryOp: + (at temp/replace.c:585:19)
                            ID: pat (at temp/replace.c:585:19)
                            ID: j (at temp/replace.c:585:25)
                      Constant: int, 99 (at temp/replace.c:585:31)
                    Compound:  (at temp/replace.c:585:1)
                      Goto: case_99 (at temp/replace.c:586:9)
                  If:  (at temp/replace.c:588:7)
                    BinaryOp: == (at temp/replace.c:588:11)
                      Cast:  (at temp/replace.c:588:11)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['int'] (at temp/replace.c:588:12)
                        UnaryOp: * (at temp/replace.c:588:19)
                          BinaryOp: + (at temp/replace.c:588:19)
                            ID: pat (at temp/replace.c:588:19)
                            ID: j (at temp/replace.c:588:25)
                      Constant: int, 37 (at temp/replace.c:588:31)
                    Compound:  (at temp/replace.c:588:1)
                      Goto: case_37 (at temp/replace.c:589:9)
                  If:  (at temp/replace.c:591:7)
                    BinaryOp: == (at temp/replace.c:591:11)
                      Cast:  (at temp/replace.c:591:11)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['int'] (at temp/replace.c:591:12)
                        UnaryOp: * (at temp/replace.c:591:19)
                          BinaryOp: + (at temp/replace.c:591:19)
                            ID: pat (at temp/replace.c:591:19)
                            ID: j (at temp/replace.c:591:25)
                      Constant: int, 63 (at temp/replace.c:591:31)
                    Compound:  (at temp/replace.c:591:1)
                      Goto: case_63 (at temp/replace.c:592:9)
                  If:  (at temp/replace.c:594:7)
                    BinaryOp: == (at temp/replace.c:594:11)
                      Cast:  (at temp/replace.c:594:11)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['int'] (at temp/replace.c:594:12)
                        UnaryOp: * (at temp/replace.c:594:19)
                          BinaryOp: + (at temp/replace.c:594:19)
                            ID: pat (at temp/replace.c:594:19)
                            ID: j (at temp/replace.c:594:25)
                      Constant: int, 36 (at temp/replace.c:594:31)
                    Compound:  (at temp/replace.c:594:1)
                      Goto: case_36 (at temp/replace.c:595:9)
                  If:  (at temp/replace.c:597:7)
                    BinaryOp: == (at temp/replace.c:597:11)
                      Cast:  (at temp/replace.c:597:11)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['int'] (at temp/replace.c:597:12)
                        UnaryOp: * (at temp/replace.c:597:19)
                          BinaryOp: + (at temp/replace.c:597:19)
                            ID: pat (at temp/replace.c:597:19)
                            ID: j (at temp/replace.c:597:25)
                      Constant: int, 91 (at temp/replace.c:597:31)
                    Compound:  (at temp/replace.c:597:1)
                      Goto: case_91 (at temp/replace.c:598:9)
                  If:  (at temp/replace.c:600:7)
                    BinaryOp: == (at temp/replace.c:600:11)
                      Cast:  (at temp/replace.c:600:11)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['int'] (at temp/replace.c:600:12)
                        UnaryOp: * (at temp/replace.c:600:19)
                          BinaryOp: + (at temp/replace.c:600:19)
                            ID: pat (at temp/replace.c:600:19)
                            ID: j (at temp/replace.c:600:25)
                      Constant: int, 33 (at temp/replace.c:600:31)
                    Compound:  (at temp/replace.c:600:1)
                      Goto: case_33 (at temp/replace.c:601:9)
                  Goto: switch_default (at temp/replace.c:603:7)
                  Label: case_99 (at temp/replace.c:604:7)
                    If:  (at temp/replace.c:605:7)
                      BinaryOp: == (at temp/replace.c:605:11)
                        Cast:  (at temp/replace.c:605:11)
                          Typename: None, [] (at temp/replace.c:0:1)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['int'] (at temp/replace.c:605:12)
                          UnaryOp: * (at temp/replace.c:605:19)
                            BinaryOp: + (at temp/replace.c:605:19)
                              ID: lin (at temp/replace.c:605:19)
                              UnaryOp: * (at temp/replace.c:605:26)
                                ID: i (at temp/replace.c:605:26)
                        Cast:  (at temp/replace.c:605:32)
                          Typename: None, [] (at temp/replace.c:0:1)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['int'] (at temp/replace.c:605:33)
                          UnaryOp: * (at temp/replace.c:605:40)
                            BinaryOp: + (at temp/replace.c:605:40)
                              ID: pat (at temp/replace.c:605:40)
                              BinaryOp: + (at temp/replace.c:605:47)
                                ID: j (at temp/replace.c:605:47)
                                Constant: int, 1 (at temp/replace.c:605:51)
                      Compound:  (at temp/replace.c:605:1)
                        Assignment: = (at temp/replace.c:606:9)
                          ID: advance (at temp/replace.c:606:9)
                          Cast:  (at temp/replace.c:606:19)
                            Typename: None, [] (at temp/replace.c:0:1)
                              TypeDecl: None, [] (at None)
                                IdentifierType: ['char'] (at temp/replace.c:606:20)
                            Constant: int, 1 (at temp/replace.c:606:25)
                  Goto: switch_break (at temp/replace.c:608:7)
                  Label: case_37 (at temp/replace.c:609:7)
                    If:  (at temp/replace.c:610:7)
                      BinaryOp: == (at temp/replace.c:610:12)
                        UnaryOp: * (at temp/replace.c:610:12)
                          ID: i (at temp/replace.c:610:12)
                        Constant: int, 0 (at temp/replace.c:610:17)
                      Compound:  (at temp/replace.c:610:1)
                        Assignment: = (at temp/replace.c:611:9)
                          ID: advance (at temp/replace.c:611:9)
                          Cast:  (at temp/replace.c:611:19)
                            Typename: None, [] (at temp/replace.c:0:1)
                              TypeDecl: None, [] (at None)
                                IdentifierType: ['char'] (at temp/replace.c:611:20)
                            Constant: int, 0 (at temp/replace.c:611:25)
                  Goto: switch_break (at temp/replace.c:613:7)
                  Label: case_63 (at temp/replace.c:614:7)
                    If:  (at temp/replace.c:615:7)
                      BinaryOp: != (at temp/replace.c:615:11)
                        Cast:  (at temp/replace.c:615:11)
                          Typename: None, [] (at temp/replace.c:0:1)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['int'] (at temp/replace.c:615:12)
                          UnaryOp: * (at temp/replace.c:615:19)
                            BinaryOp: + (at temp/replace.c:615:19)
                              ID: lin (at temp/replace.c:615:19)
                              UnaryOp: * (at temp/replace.c:615:26)
                                ID: i (at temp/replace.c:615:26)
                        Constant: int, 10 (at temp/replace.c:615:32)
                      Compound:  (at temp/replace.c:615:1)
                        Assignment: = (at temp/replace.c:616:9)
                          ID: advance (at temp/replace.c:616:9)
                          Cast:  (at temp/replace.c:616:19)
                            Typename: None, [] (at temp/replace.c:0:1)
                              TypeDecl: None, [] (at None)
                                IdentifierType: ['char'] (at temp/replace.c:616:20)
                            Constant: int, 1 (at temp/replace.c:616:25)
                  Goto: switch_break (at temp/replace.c:618:7)
                  Label: case_36 (at temp/replace.c:619:7)
                    If:  (at temp/replace.c:620:7)
                      BinaryOp: == (at temp/replace.c:620:11)
                        Cast:  (at temp/replace.c:620:11)
                          Typename: None, [] (at temp/replace.c:0:1)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['int'] (at temp/replace.c:620:12)
                          UnaryOp: * (at temp/replace.c:620:19)
                            BinaryOp: + (at temp/replace.c:620:19)
                              ID: lin (at temp/replace.c:620:19)
                              UnaryOp: * (at temp/replace.c:620:26)
                                ID: i (at temp/replace.c:620:26)
                        Constant: int, 10 (at temp/replace.c:620:32)
                      Compound:  (at temp/replace.c:620:1)
                        Assignment: = (at temp/replace.c:621:9)
                          ID: advance (at temp/replace.c:621:9)
                          Cast:  (at temp/replace.c:621:19)
                            Typename: None, [] (at temp/replace.c:0:1)
                              TypeDecl: None, [] (at None)
                                IdentifierType: ['char'] (at temp/replace.c:621:20)
                            Constant: int, 0 (at temp/replace.c:621:25)
                  Goto: switch_break (at temp/replace.c:623:7)
                  Label: case_91 (at temp/replace.c:624:7)
                    Compound:  (at temp/replace.c:625:1)
                      Assignment: = (at temp/replace.c:626:7)
                        ID: tmp (at temp/replace.c:626:7)
                        FuncCall:  (at temp/replace.c:626:13)
                          ID: locate (at temp/replace.c:626:13)
                          ExprList:  (at temp/replace.c:626:22)
                            UnaryOp: * (at temp/replace.c:626:22)
                              BinaryOp: + (at temp/replace.c:626:22)
                                ID: lin (at temp/replace.c:626:22)
                                UnaryOp: * (at temp/replace.c:626:29)
                                  ID: i (at temp/replace.c:626:29)
                            ID: pat (at temp/replace.c:626:33)
                            BinaryOp: + (at temp/replace.c:626:38)
                              ID: j (at temp/replace.c:626:38)
                              Constant: int, 1 (at temp/replace.c:626:42)
                  If:  (at temp/replace.c:628:7)
                    ID: tmp (at temp/replace.c:628:11)
                    Compound:  (at temp/replace.c:628:1)
                      Assignment: = (at temp/replace.c:629:9)
                        ID: advance (at temp/replace.c:629:9)
                        Cast:  (at temp/replace.c:629:19)
                          Typename: None, [] (at temp/replace.c:0:1)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['char'] (at temp/replace.c:629:20)
                          Constant: int, 1 (at temp/replace.c:629:25)
                  Goto: switch_break (at temp/replace.c:631:7)
                  Label: case_33 (at temp/replace.c:632:7)
                    If:  (at temp/replace.c:633:7)
                      BinaryOp: != (at temp/replace.c:633:11)
                        Cast:  (at temp/replace.c:633:11)
                          Typename: None, [] (at temp/replace.c:0:1)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['int'] (at temp/replace.c:633:12)
                          UnaryOp: * (at temp/replace.c:633:19)
                            BinaryOp: + (at temp/replace.c:633:19)
                              ID: lin (at temp/replace.c:633:19)
                              UnaryOp: * (at temp/replace.c:633:26)
                                ID: i (at temp/replace.c:633:26)
                        Constant: int, 10 (at temp/replace.c:633:32)
                      Compound:  (at temp/replace.c:633:1)
                        Compound:  (at temp/replace.c:634:1)
                          Assignment: = (at temp/replace.c:635:9)
                            ID: tmp___0 (at temp/replace.c:635:9)
                            FuncCall:  (at temp/replace.c:635:19)
                              ID: locate (at temp/replace.c:635:19)
                              ExprList:  (at temp/replace.c:635:28)
                                UnaryOp: * (at temp/replace.c:635:28)
                                  BinaryOp: + (at temp/replace.c:635:28)
                                    ID: lin (at temp/replace.c:635:28)
                                    UnaryOp: * (at temp/replace.c:635:35)
                                      ID: i (at temp/replace.c:635:35)
                                ID: pat (at temp/replace.c:635:39)
                                BinaryOp: + (at temp/replace.c:635:44)
                                  ID: j (at temp/replace.c:635:44)
                                  Constant: int, 1 (at temp/replace.c:635:48)
                        If:  (at temp/replace.c:637:9)
                          UnaryOp: ! (at temp/replace.c:637:15)
                            ID: tmp___0 (at temp/replace.c:637:15)
                          Compound:  (at temp/replace.c:637:1)
                            Assignment: = (at temp/replace.c:638:11)
                              ID: advance (at temp/replace.c:638:11)
                              Cast:  (at temp/replace.c:638:21)
                                Typename: None, [] (at temp/replace.c:0:1)
                                  TypeDecl: None, [] (at None)
                                    IdentifierType: ['char'] (at temp/replace.c:638:22)
                                Constant: int, 1 (at temp/replace.c:638:27)
                  Goto: switch_break (at temp/replace.c:641:7)
                  Label: switch_default (at temp/replace.c:642:7)
                    Compound:  (at temp/replace.c:643:1)
                      FuncCall:  (at temp/replace.c:644:7)
                        ID: Caseerror (at temp/replace.c:644:7)
                        ExprList:  (at temp/replace.c:644:17)
                          Cast:  (at temp/replace.c:644:17)
                            Typename: None, [] (at temp/replace.c:0:1)
                              TypeDecl: None, [] (at None)
                                IdentifierType: ['int'] (at temp/replace.c:644:18)
                            UnaryOp: * (at temp/replace.c:644:25)
                              BinaryOp: + (at temp/replace.c:644:25)
                                ID: pat (at temp/replace.c:644:25)
                                ID: j (at temp/replace.c:644:31)
                  Label: switch_break (at temp/replace.c:646:7)
                    EmptyStatement:  (at temp/replace.c:646:21)
              Compound:  (at temp/replace.c:648:1)
                Compound:  (at temp/replace.c:649:1)
                  FuncCall:  (at temp/replace.c:650:7)
                    ID: fprintf (at temp/replace.c:650:7)
                    ExprList:  (at temp/replace.c:650:15)
                      Cast:  (at temp/replace.c:650:15)
                        Typename: None, [] (at temp/replace.c:0:1)
                          PtrDecl: ['__restrict'] (at temp/replace.c:650:21)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['FILE'] (at temp/replace.c:650:16)
                        ID: stdout (at temp/replace.c:650:35)
                      Cast:  (at temp/replace.c:650:43)
                        Typename: None, ['const'] (at temp/replace.c:0:1)
                          PtrDecl: ['__restrict'] (at temp/replace.c:650:55)
                            TypeDecl: None, ['const'] (at None)
                              IdentifierType: ['char'] (at temp/replace.c:650:44)
                        Constant: string, "in omatch: can\'t happen\n" (at temp/replace.c:650:69)
                  FuncCall:  (at temp/replace.c:651:7)
                    ID: abort (at temp/replace.c:651:7)
        If:  (at temp/replace.c:655:3)
          BinaryOp: >= (at temp/replace.c:655:7)
            Cast:  (at temp/replace.c:655:7)
              Typename: None, [] (at temp/replace.c:0:1)
                TypeDecl: None, [] (at None)
                  IdentifierType: ['int'] (at temp/replace.c:655:8)
              ID: advance (at temp/replace.c:655:13)
            Constant: int, 0 (at temp/replace.c:655:24)
          Compound:  (at temp/replace.c:655:1)
            Assignment: += (at temp/replace.c:656:6)
              UnaryOp: * (at temp/replace.c:656:6)
                ID: i (at temp/replace.c:656:6)
              Cast:  (at temp/replace.c:656:11)
                Typename: None, [] (at temp/replace.c:0:1)
                  TypeDecl: None, [] (at None)
                    IdentifierType: ['int'] (at temp/replace.c:656:12)
                ID: advance (at temp/replace.c:656:17)
            Assignment: = (at temp/replace.c:657:5)
              ID: result (at temp/replace.c:657:5)
              Cast:  (at temp/replace.c:657:14)
                Typename: None, [] (at temp/replace.c:0:1)
                  TypeDecl: None, [] (at None)
                    IdentifierType: ['bool'] (at temp/replace.c:657:15)
                Constant: int, 1 (at temp/replace.c:657:21)
          Compound:  (at temp/replace.c:658:1)
            Assignment: = (at temp/replace.c:659:5)
              ID: result (at temp/replace.c:659:5)
              Cast:  (at temp/replace.c:659:14)
                Typename: None, [] (at temp/replace.c:0:1)
                  TypeDecl: None, [] (at None)
                    IdentifierType: ['bool'] (at temp/replace.c:659:15)
                Constant: int, 0 (at temp/replace.c:659:21)
        Return:  (at temp/replace.c:661:3)
          ID: result (at temp/replace.c:661:11)
  FuncDef:  (at temp/replace.c:664:5)
    Decl: patsize, [], [], [] (at temp/replace.c:664:5)
      FuncDeclExt:  (at temp/replace.c:664:5)
        ParamList:  (at temp/replace.c:664:18)
          Decl: pat, [], [], [] (at temp/replace.c:664:18)
            PtrDecl: [] (at temp/replace.c:664:18)
              TypeDecl: pat, [] (at temp/replace.c:664:19)
                IdentifierType: ['char'] (at temp/replace.c:664:13)
          Decl: n, [], [], [] (at temp/replace.c:664:29)
            TypeDecl: n, [] (at temp/replace.c:664:29)
              IdentifierType: ['int'] (at temp/replace.c:664:25)
        TypeDecl: patsize, [] (at temp/replace.c:664:5)
          IdentifierType: ['int'] (at temp/replace.c:664:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:665:1)
      Decl: size, [], [], [] (at temp/replace.c:666:7)
        TypeDecl: size, [] (at temp/replace.c:666:7)
          IdentifierType: ['int'] (at temp/replace.c:666:3)
      Decl: tmp, [], [], [] (at temp/replace.c:667:8)
        TypeDecl: tmp, [] (at temp/replace.c:667:8)
          IdentifierType: ['bool'] (at temp/replace.c:667:3)
      Compound:  (at temp/replace.c:669:1)
        Compound:  (at temp/replace.c:670:1)
          Assignment: = (at temp/replace.c:671:3)
            ID: tmp (at temp/replace.c:671:3)
            FuncCall:  (at temp/replace.c:671:9)
              ID: in_pat_set (at temp/replace.c:671:9)
              ExprList:  (at temp/replace.c:671:22)
                UnaryOp: * (at temp/replace.c:671:22)
                  BinaryOp: + (at temp/replace.c:671:22)
                    ID: pat (at temp/replace.c:671:22)
                    ID: n (at temp/replace.c:671:28)
        If:  (at temp/replace.c:673:3)
          ID: tmp (at temp/replace.c:673:7)
          Compound:  (at temp/replace.c:673:1)
            Compound:  (at temp/replace.c:674:1)
              If:  (at temp/replace.c:675:5)
                BinaryOp: == (at temp/replace.c:675:9)
                  Cast:  (at temp/replace.c:675:9)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:675:10)
                    UnaryOp: * (at temp/replace.c:675:17)
                      BinaryOp: + (at temp/replace.c:675:17)
                        ID: pat (at temp/replace.c:675:17)
                        ID: n (at temp/replace.c:675:23)
                  Constant: int, 99 (at temp/replace.c:675:29)
                Compound:  (at temp/replace.c:675:1)
                  Goto: case_99 (at temp/replace.c:676:7)
              If:  (at temp/replace.c:678:5)
                BinaryOp: == (at temp/replace.c:678:9)
                  Cast:  (at temp/replace.c:678:9)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:678:10)
                    UnaryOp: * (at temp/replace.c:678:17)
                      BinaryOp: + (at temp/replace.c:678:17)
                        ID: pat (at temp/replace.c:678:17)
                        ID: n (at temp/replace.c:678:23)
                  Constant: int, 63 (at temp/replace.c:678:29)
                Compound:  (at temp/replace.c:678:1)
                  Goto: case_63 (at temp/replace.c:679:7)
              If:  (at temp/replace.c:681:5)
                BinaryOp: == (at temp/replace.c:681:9)
                  Cast:  (at temp/replace.c:681:9)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:681:10)
                    UnaryOp: * (at temp/replace.c:681:17)
                      BinaryOp: + (at temp/replace.c:681:17)
                        ID: pat (at temp/replace.c:681:17)
                        ID: n (at temp/replace.c:681:23)
                  Constant: int, 36 (at temp/replace.c:681:29)
                Compound:  (at temp/replace.c:681:1)
                  Goto: case_63 (at temp/replace.c:682:7)
              If:  (at temp/replace.c:684:5)
                BinaryOp: == (at temp/replace.c:684:9)
                  Cast:  (at temp/replace.c:684:9)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:684:10)
                    UnaryOp: * (at temp/replace.c:684:17)
                      BinaryOp: + (at temp/replace.c:684:17)
                        ID: pat (at temp/replace.c:684:17)
                        ID: n (at temp/replace.c:684:23)
                  Constant: int, 37 (at temp/replace.c:684:29)
                Compound:  (at temp/replace.c:684:1)
                  Goto: case_63 (at temp/replace.c:685:7)
              If:  (at temp/replace.c:687:5)
                BinaryOp: == (at temp/replace.c:687:9)
                  Cast:  (at temp/replace.c:687:9)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:687:10)
                    UnaryOp: * (at temp/replace.c:687:17)
                      BinaryOp: + (at temp/replace.c:687:17)
                        ID: pat (at temp/replace.c:687:17)
                        ID: n (at temp/replace.c:687:23)
                  Constant: int, 33 (at temp/replace.c:687:29)
                Compound:  (at temp/replace.c:687:1)
                  Goto: case_33 (at temp/replace.c:688:7)
              If:  (at temp/replace.c:690:5)
                BinaryOp: == (at temp/replace.c:690:9)
                  Cast:  (at temp/replace.c:690:9)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:690:10)
                    UnaryOp: * (at temp/replace.c:690:17)
                      BinaryOp: + (at temp/replace.c:690:17)
                        ID: pat (at temp/replace.c:690:17)
                        ID: n (at temp/replace.c:690:23)
                  Constant: int, 91 (at temp/replace.c:690:29)
                Compound:  (at temp/replace.c:690:1)
                  Goto: case_33 (at temp/replace.c:691:7)
              If:  (at temp/replace.c:693:5)
                BinaryOp: == (at temp/replace.c:693:9)
                  Cast:  (at temp/replace.c:693:9)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:693:10)
                    UnaryOp: * (at temp/replace.c:693:17)
                      BinaryOp: + (at temp/replace.c:693:17)
                        ID: pat (at temp/replace.c:693:17)
                        ID: n (at temp/replace.c:693:23)
                  Constant: int, 42 (at temp/replace.c:693:29)
                Compound:  (at temp/replace.c:693:1)
                  Goto: case_42 (at temp/replace.c:694:7)
              Goto: switch_default (at temp/replace.c:696:5)
              Label: case_99 (at temp/replace.c:697:5)
                Assignment: = (at temp/replace.c:698:5)
                  ID: size (at temp/replace.c:698:5)
                  Constant: int, 2 (at temp/replace.c:698:12)
              Goto: switch_break (at temp/replace.c:699:5)
              Label: case_63 (at temp/replace.c:700:5)
                Label: case_36 (at temp/replace.c:701:5)
                  Label: case_37 (at temp/replace.c:702:5)
                    Assignment: = (at temp/replace.c:703:5)
                      ID: size (at temp/replace.c:703:5)
                      Constant: int, 1 (at temp/replace.c:703:12)
              Goto: switch_break (at temp/replace.c:704:5)
              Label: case_33 (at temp/replace.c:705:5)
                Label: case_91 (at temp/replace.c:706:5)
                  Assignment: = (at temp/replace.c:707:5)
                    ID: size (at temp/replace.c:707:5)
                    BinaryOp: + (at temp/replace.c:707:12)
                      Cast:  (at temp/replace.c:707:12)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['int'] (at temp/replace.c:707:13)
                        UnaryOp: * (at temp/replace.c:707:20)
                          BinaryOp: + (at temp/replace.c:707:20)
                            ID: pat (at temp/replace.c:707:20)
                            BinaryOp: + (at temp/replace.c:707:27)
                              ID: n (at temp/replace.c:707:27)
                              Constant: int, 1 (at temp/replace.c:707:31)
                      Constant: int, 2 (at temp/replace.c:707:37)
              Goto: switch_break (at temp/replace.c:708:5)
              Label: case_42 (at temp/replace.c:709:5)
                Assignment: = (at temp/replace.c:710:5)
                  ID: size (at temp/replace.c:710:5)
                  Constant: int, 1 (at temp/replace.c:710:12)
              Goto: switch_break (at temp/replace.c:711:5)
              Label: switch_default (at temp/replace.c:712:5)
                Compound:  (at temp/replace.c:713:1)
                  FuncCall:  (at temp/replace.c:714:5)
                    ID: Caseerror (at temp/replace.c:714:5)
                    ExprList:  (at temp/replace.c:714:15)
                      Cast:  (at temp/replace.c:714:15)
                        Typename: None, [] (at temp/replace.c:0:1)
                          TypeDecl: None, [] (at None)
                            IdentifierType: ['int'] (at temp/replace.c:714:16)
                        UnaryOp: * (at temp/replace.c:714:23)
                          BinaryOp: + (at temp/replace.c:714:23)
                            ID: pat (at temp/replace.c:714:23)
                            ID: n (at temp/replace.c:714:29)
              Label: switch_break (at temp/replace.c:716:5)
                EmptyStatement:  (at temp/replace.c:716:19)
          Compound:  (at temp/replace.c:718:1)
            Compound:  (at temp/replace.c:719:1)
              FuncCall:  (at temp/replace.c:720:5)
                ID: fprintf (at temp/replace.c:720:5)
                ExprList:  (at temp/replace.c:720:13)
                  Cast:  (at temp/replace.c:720:13)
                    Typename: None, [] (at temp/replace.c:0:1)
                      PtrDecl: ['__restrict'] (at temp/replace.c:720:19)
                        TypeDecl: None, [] (at None)
                          IdentifierType: ['FILE'] (at temp/replace.c:720:14)
                    ID: stdout (at temp/replace.c:720:33)
                  Cast:  (at temp/replace.c:720:41)
                    Typename: None, ['const'] (at temp/replace.c:0:1)
                      PtrDecl: ['__restrict'] (at temp/replace.c:720:53)
                        TypeDecl: None, ['const'] (at None)
                          IdentifierType: ['char'] (at temp/replace.c:720:42)
                    Constant: string, "in patsize: can\'t happen\n" (at temp/replace.c:720:67)
              FuncCall:  (at temp/replace.c:721:5)
                ID: abort (at temp/replace.c:721:5)
        Return:  (at temp/replace.c:724:3)
          ID: size (at temp/replace.c:724:11)
  FuncDef:  (at temp/replace.c:727:5)
    Decl: amatch, [], [], [] (at temp/replace.c:727:5)
      FuncDeclExt:  (at temp/replace.c:727:5)
        ParamList:  (at temp/replace.c:727:17)
          Decl: lin, [], [], [] (at temp/replace.c:727:17)
            PtrDecl: [] (at temp/replace.c:727:17)
              TypeDecl: lin, [] (at temp/replace.c:727:18)
                IdentifierType: ['char'] (at temp/replace.c:727:12)
          Decl: offset, [], [], [] (at temp/replace.c:727:28)
            TypeDecl: offset, [] (at temp/replace.c:727:28)
              IdentifierType: ['int'] (at temp/replace.c:727:24)
          Decl: pat, [], [], [] (at temp/replace.c:727:42)
            PtrDecl: [] (at temp/replace.c:727:42)
              TypeDecl: pat, [] (at temp/replace.c:727:43)
                IdentifierType: ['char'] (at temp/replace.c:727:37)
          Decl: j, [], [], [] (at temp/replace.c:727:53)
            TypeDecl: j, [] (at temp/replace.c:727:53)
              IdentifierType: ['int'] (at temp/replace.c:727:49)
        TypeDecl: amatch, [] (at temp/replace.c:727:5)
          IdentifierType: ['int'] (at temp/replace.c:727:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:728:1)
      Decl: i, [], [], [] (at temp/replace.c:729:7)
        TypeDecl: i, [] (at temp/replace.c:729:7)
          IdentifierType: ['int'] (at temp/replace.c:729:3)
      Decl: k, [], [], [] (at temp/replace.c:730:7)
        TypeDecl: k, [] (at temp/replace.c:730:7)
          IdentifierType: ['int'] (at temp/replace.c:730:3)
      Decl: result, [], [], [] (at temp/replace.c:731:8)
        TypeDecl: result, [] (at temp/replace.c:731:8)
          IdentifierType: ['bool'] (at temp/replace.c:731:3)
      Decl: done, [], [], [] (at temp/replace.c:732:8)
        TypeDecl: done, [] (at temp/replace.c:732:8)
          IdentifierType: ['bool'] (at temp/replace.c:732:3)
      Decl: tmp, [], [], [] (at temp/replace.c:733:7)
        TypeDecl: tmp, [] (at temp/replace.c:733:7)
          IdentifierType: ['int'] (at temp/replace.c:733:3)
      Decl: tmp___0, [], [], [] (at temp/replace.c:734:7)
        TypeDecl: tmp___0, [] (at temp/replace.c:734:7)
          IdentifierType: ['int'] (at temp/replace.c:734:3)
      Decl: tmp___1, [], [], [] (at temp/replace.c:735:7)
        TypeDecl: tmp___1, [] (at temp/replace.c:735:7)
          IdentifierType: ['int'] (at temp/replace.c:735:3)
      Compound:  (at temp/replace.c:737:1)
        Assignment: = (at temp/replace.c:738:3)
          ID: done (at temp/replace.c:738:3)
          Cast:  (at temp/replace.c:738:10)
            Typename: None, [] (at temp/replace.c:0:1)
              TypeDecl: None, [] (at None)
                IdentifierType: ['bool'] (at temp/replace.c:738:11)
            Constant: int, 0 (at temp/replace.c:738:17)
        Compound:  (at temp/replace.c:739:1)
          While:  (at temp/replace.c:740:3)
            Constant: int, 1 (at temp/replace.c:740:10)
            Compound:  (at temp/replace.c:740:1)
              Label: while_continue (at temp/replace.c:741:5)
                EmptyStatement:  (at temp/replace.c:741:21)
              If:  (at temp/replace.c:742:5)
                UnaryOp: ! (at temp/replace.c:742:11)
                  ID: done (at temp/replace.c:742:11)
                Compound:  (at temp/replace.c:742:1)
                  If:  (at temp/replace.c:743:7)
                    UnaryOp: ! (at temp/replace.c:743:14)
                      BinaryOp: != (at temp/replace.c:743:14)
                        Cast:  (at temp/replace.c:743:14)
                          Typename: None, [] (at temp/replace.c:0:1)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['int'] (at temp/replace.c:743:15)
                          UnaryOp: * (at temp/replace.c:743:22)
                            BinaryOp: + (at temp/replace.c:743:22)
                              ID: pat (at temp/replace.c:743:22)
                              ID: j (at temp/replace.c:743:28)
                        Constant: int, 0 (at temp/replace.c:743:34)
                    Compound:  (at temp/replace.c:743:1)
                      Goto: while_break (at temp/replace.c:744:9)
                Compound:  (at temp/replace.c:746:1)
                  Goto: while_break (at temp/replace.c:747:7)
              If:  (at temp/replace.c:749:5)
                BinaryOp: == (at temp/replace.c:749:9)
                  Cast:  (at temp/replace.c:749:9)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:749:10)
                    UnaryOp: * (at temp/replace.c:749:17)
                      BinaryOp: + (at temp/replace.c:749:17)
                        ID: pat (at temp/replace.c:749:17)
                        ID: j (at temp/replace.c:749:23)
                  Constant: int, 42 (at temp/replace.c:749:29)
                Compound:  (at temp/replace.c:749:1)
                  Compound:  (at temp/replace.c:750:1)
                    Assignment: = (at temp/replace.c:751:7)
                      ID: tmp (at temp/replace.c:751:7)
                      FuncCall:  (at temp/replace.c:751:13)
                        ID: patsize (at temp/replace.c:751:13)
                        ExprList:  (at temp/replace.c:751:21)
                          ID: pat (at temp/replace.c:751:21)
                          ID: j (at temp/replace.c:751:26)
                    Assignment: += (at temp/replace.c:752:7)
                      ID: j (at temp/replace.c:752:7)
                      ID: tmp (at temp/replace.c:752:12)
                    Assignment: = (at temp/replace.c:753:7)
                      ID: i (at temp/replace.c:753:7)
                      ID: offset (at temp/replace.c:753:11)
                  Compound:  (at temp/replace.c:755:1)
                    While:  (at temp/replace.c:756:7)
                      Constant: int, 1 (at temp/replace.c:756:14)
                      Compound:  (at temp/replace.c:756:1)
                        Label: while_continue___0 (at temp/replace.c:757:9)
                          EmptyStatement:  (at temp/replace.c:757:29)
                        If:  (at temp/replace.c:758:9)
                          UnaryOp: ! (at temp/replace.c:758:15)
                            ID: done (at temp/replace.c:758:15)
                          Compound:  (at temp/replace.c:758:1)
                            If:  (at temp/replace.c:759:11)
                              UnaryOp: ! (at temp/replace.c:759:18)
                                BinaryOp: != (at temp/replace.c:759:18)
                                  Cast:  (at temp/replace.c:759:18)
                                    Typename: None, [] (at temp/replace.c:0:1)
                                      TypeDecl: None, [] (at None)
                                        IdentifierType: ['int'] (at temp/replace.c:759:19)
                                    UnaryOp: * (at temp/replace.c:759:26)
                                      BinaryOp: + (at temp/replace.c:759:26)
                                        ID: lin (at temp/replace.c:759:26)
                                        ID: i (at temp/replace.c:759:32)
                                  Constant: int, 0 (at temp/replace.c:759:38)
                              Compound:  (at temp/replace.c:759:1)
                                Goto: while_break___0 (at temp/replace.c:760:13)
                          Compound:  (at temp/replace.c:762:1)
                            Goto: while_break___0 (at temp/replace.c:763:11)
                        Compound:  (at temp/replace.c:765:1)
                          Assignment: = (at temp/replace.c:766:9)
                            ID: result (at temp/replace.c:766:9)
                            FuncCall:  (at temp/replace.c:766:18)
                              ID: omatch (at temp/replace.c:766:18)
                              ExprList:  (at temp/replace.c:766:25)
                                ID: lin (at temp/replace.c:766:25)
                                UnaryOp: & (at temp/replace.c:766:32)
                                  ID: i (at temp/replace.c:766:32)
                                ID: pat (at temp/replace.c:766:35)
                                ID: j (at temp/replace.c:766:40)
                        If:  (at temp/replace.c:768:9)
                          UnaryOp: ! (at temp/replace.c:768:15)
                            ID: result (at temp/replace.c:768:15)
                          Compound:  (at temp/replace.c:768:1)
                            Assignment: = (at temp/replace.c:769:11)
                              ID: done (at temp/replace.c:769:11)
                              Cast:  (at temp/replace.c:769:18)
                                Typename: None, [] (at temp/replace.c:0:1)
                                  TypeDecl: None, [] (at None)
                                    IdentifierType: ['bool'] (at temp/replace.c:769:19)
                                Constant: int, 1 (at temp/replace.c:769:25)
                    Label: while_break___0 (at temp/replace.c:772:7)
                      EmptyStatement:  (at temp/replace.c:772:24)
                  Assignment: = (at temp/replace.c:774:7)
                    ID: done (at temp/replace.c:774:7)
                    Cast:  (at temp/replace.c:774:14)
                      Typename: None, [] (at temp/replace.c:0:1)
                        TypeDecl: None, [] (at None)
                          IdentifierType: ['bool'] (at temp/replace.c:774:15)
                      Constant: int, 0 (at temp/replace.c:774:21)
                  Compound:  (at temp/replace.c:775:1)
                    While:  (at temp/replace.c:776:7)
                      Constant: int, 1 (at temp/replace.c:776:14)
                      Compound:  (at temp/replace.c:776:1)
                        Label: while_continue___1 (at temp/replace.c:777:9)
                          EmptyStatement:  (at temp/replace.c:777:29)
                        If:  (at temp/replace.c:778:9)
                          UnaryOp: ! (at temp/replace.c:778:15)
                            ID: done (at temp/replace.c:778:15)
                          Compound:  (at temp/replace.c:778:1)
                            If:  (at temp/replace.c:779:11)
                              UnaryOp: ! (at temp/replace.c:779:18)
                                BinaryOp: >= (at temp/replace.c:779:18)
                                  ID: i (at temp/replace.c:779:18)
                                  ID: offset (at temp/replace.c:779:23)
                              Compound:  (at temp/replace.c:779:1)
                                Goto: while_break___1 (at temp/replace.c:780:13)
                          Compound:  (at temp/replace.c:782:1)
                            Goto: while_break___1 (at temp/replace.c:783:11)
                        Compound:  (at temp/replace.c:785:1)
                          Assignment: = (at temp/replace.c:786:9)
                            ID: tmp___0 (at temp/replace.c:786:9)
                            FuncCall:  (at temp/replace.c:786:19)
                              ID: patsize (at temp/replace.c:786:19)
                              ExprList:  (at temp/replace.c:786:27)
                                ID: pat (at temp/replace.c:786:27)
                                ID: j (at temp/replace.c:786:32)
                          Assignment: = (at temp/replace.c:787:9)
                            ID: k (at temp/replace.c:787:9)
                            FuncCall:  (at temp/replace.c:787:13)
                              ID: amatch (at temp/replace.c:787:13)
                              ExprList:  (at temp/replace.c:787:20)
                                ID: lin (at temp/replace.c:787:20)
                                ID: i (at temp/replace.c:787:25)
                                ID: pat (at temp/replace.c:787:28)
                                BinaryOp: + (at temp/replace.c:787:33)
                                  ID: j (at temp/replace.c:787:33)
                                  ID: tmp___0 (at temp/replace.c:787:37)
                        If:  (at temp/replace.c:789:9)
                          BinaryOp: >= (at temp/replace.c:789:13)
                            ID: k (at temp/replace.c:789:13)
                            Constant: int, 0 (at temp/replace.c:789:18)
                          Compound:  (at temp/replace.c:789:1)
                            Assignment: = (at temp/replace.c:790:11)
                              ID: done (at temp/replace.c:790:11)
                              Cast:  (at temp/replace.c:790:18)
                                Typename: None, [] (at temp/replace.c:0:1)
                                  TypeDecl: None, [] (at None)
                                    IdentifierType: ['bool'] (at temp/replace.c:790:19)
                                Constant: int, 1 (at temp/replace.c:790:25)
                          Compound:  (at temp/replace.c:791:1)
                            UnaryOp: p-- (at temp/replace.c:792:11)
                              ID: i (at temp/replace.c:792:11)
                    Label: while_break___1 (at temp/replace.c:795:7)
                      EmptyStatement:  (at temp/replace.c:795:24)
                  Assignment: = (at temp/replace.c:797:7)
                    ID: offset (at temp/replace.c:797:7)
                    ID: k (at temp/replace.c:797:16)
                  Assignment: = (at temp/replace.c:798:7)
                    ID: done (at temp/replace.c:798:7)
                    Cast:  (at temp/replace.c:798:14)
                      Typename: None, [] (at temp/replace.c:0:1)
                        TypeDecl: None, [] (at None)
                          IdentifierType: ['bool'] (at temp/replace.c:798:15)
                      Constant: int, 1 (at temp/replace.c:798:21)
                Compound:  (at temp/replace.c:799:1)
                  Compound:  (at temp/replace.c:800:1)
                    Assignment: = (at temp/replace.c:801:7)
                      ID: result (at temp/replace.c:801:7)
                      FuncCall:  (at temp/replace.c:801:16)
                        ID: omatch (at temp/replace.c:801:16)
                        ExprList:  (at temp/replace.c:801:23)
                          ID: lin (at temp/replace.c:801:23)
                          UnaryOp: & (at temp/replace.c:801:30)
                            ID: offset (at temp/replace.c:801:30)
                          ID: pat (at temp/replace.c:801:38)
                          ID: j (at temp/replace.c:801:43)
                  If:  (at temp/replace.c:803:7)
                    UnaryOp: ! (at temp/replace.c:803:13)
                      ID: result (at temp/replace.c:803:13)
                    Compound:  (at temp/replace.c:803:1)
                      Assignment: = (at temp/replace.c:804:9)
                        ID: offset (at temp/replace.c:804:9)
                        UnaryOp: - (at temp/replace.c:804:19)
                          Constant: int, 1 (at temp/replace.c:804:19)
                      Assignment: = (at temp/replace.c:805:9)
                        ID: done (at temp/replace.c:805:9)
                        Cast:  (at temp/replace.c:805:16)
                          Typename: None, [] (at temp/replace.c:0:1)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['bool'] (at temp/replace.c:805:17)
                          Constant: int, 1 (at temp/replace.c:805:23)
                    Compound:  (at temp/replace.c:806:1)
                      Compound:  (at temp/replace.c:807:1)
                        Assignment: = (at temp/replace.c:808:9)
                          ID: tmp___1 (at temp/replace.c:808:9)
                          FuncCall:  (at temp/replace.c:808:19)
                            ID: patsize (at temp/replace.c:808:19)
                            ExprList:  (at temp/replace.c:808:27)
                              ID: pat (at temp/replace.c:808:27)
                              ID: j (at temp/replace.c:808:32)
                        Assignment: += (at temp/replace.c:809:9)
                          ID: j (at temp/replace.c:809:9)
                          ID: tmp___1 (at temp/replace.c:809:14)
          Label: while_break (at temp/replace.c:814:3)
            EmptyStatement:  (at temp/replace.c:814:16)
        Return:  (at temp/replace.c:816:3)
          ID: offset (at temp/replace.c:816:11)
  FuncDef:  (at temp/replace.c:819:6)
    Decl: putsub, [], [], [] (at temp/replace.c:819:6)
      FuncDeclExt:  (at temp/replace.c:819:6)
        ParamList:  (at temp/replace.c:819:18)
          Decl: lin, [], [], [] (at temp/replace.c:819:18)
            PtrDecl: [] (at temp/replace.c:819:18)
              TypeDecl: lin, [] (at temp/replace.c:819:19)
                IdentifierType: ['char'] (at temp/replace.c:819:13)
          Decl: s1, [], [], [] (at temp/replace.c:819:29)
            TypeDecl: s1, [] (at temp/replace.c:819:29)
              IdentifierType: ['int'] (at temp/replace.c:819:25)
          Decl: s2, [], [], [] (at temp/replace.c:819:38)
            TypeDecl: s2, [] (at temp/replace.c:819:38)
              IdentifierType: ['int'] (at temp/replace.c:819:34)
          Decl: sub, [], [], [] (at temp/replace.c:819:48)
            PtrDecl: [] (at temp/replace.c:819:48)
              TypeDecl: sub, [] (at temp/replace.c:819:49)
                IdentifierType: ['char'] (at temp/replace.c:819:43)
        TypeDecl: putsub, [] (at temp/replace.c:819:6)
          IdentifierType: ['void'] (at temp/replace.c:819:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:820:1)
      Decl: i, [], [], [] (at temp/replace.c:821:7)
        TypeDecl: i, [] (at temp/replace.c:821:7)
          IdentifierType: ['int'] (at temp/replace.c:821:3)
      Decl: j, [], [], [] (at temp/replace.c:822:7)
        TypeDecl: j, [] (at temp/replace.c:822:7)
          IdentifierType: ['int'] (at temp/replace.c:822:3)
      Compound:  (at temp/replace.c:824:1)
        Assignment: = (at temp/replace.c:825:3)
          ID: i (at temp/replace.c:825:3)
          Constant: int, 0 (at temp/replace.c:825:7)
        Compound:  (at temp/replace.c:826:1)
          While:  (at temp/replace.c:827:3)
            Constant: int, 1 (at temp/replace.c:827:10)
            Compound:  (at temp/replace.c:827:1)
              Label: while_continue (at temp/replace.c:828:5)
                EmptyStatement:  (at temp/replace.c:828:21)
              If:  (at temp/replace.c:829:5)
                UnaryOp: ! (at temp/replace.c:829:12)
                  BinaryOp: != (at temp/replace.c:829:12)
                    Cast:  (at temp/replace.c:829:12)
                      Typename: None, [] (at temp/replace.c:0:1)
                        TypeDecl: None, [] (at None)
                          IdentifierType: ['int'] (at temp/replace.c:829:13)
                      UnaryOp: * (at temp/replace.c:829:20)
                        BinaryOp: + (at temp/replace.c:829:20)
                          ID: sub (at temp/replace.c:829:20)
                          ID: i (at temp/replace.c:829:26)
                    Constant: int, 0 (at temp/replace.c:829:32)
                Compound:  (at temp/replace.c:829:1)
                  Goto: while_break (at temp/replace.c:830:7)
              If:  (at temp/replace.c:832:5)
                BinaryOp: == (at temp/replace.c:832:9)
                  Cast:  (at temp/replace.c:832:9)
                    Typename: None, [] (at temp/replace.c:0:1)
                      TypeDecl: None, [] (at None)
                        IdentifierType: ['int'] (at temp/replace.c:832:10)
                    UnaryOp: * (at temp/replace.c:832:17)
                      BinaryOp: + (at temp/replace.c:832:17)
                        ID: sub (at temp/replace.c:832:17)
                        ID: i (at temp/replace.c:832:23)
                  UnaryOp: - (at temp/replace.c:832:30)
                    Constant: int, 1 (at temp/replace.c:832:30)
                Compound:  (at temp/replace.c:832:1)
                  Assignment: = (at temp/replace.c:833:7)
                    ID: j (at temp/replace.c:833:7)
                    ID: s1 (at temp/replace.c:833:11)
                  Compound:  (at temp/replace.c:834:1)
                    While:  (at temp/replace.c:835:7)
                      Constant: int, 1 (at temp/replace.c:835:14)
                      Compound:  (at temp/replace.c:835:1)
                        Label: while_continue___0 (at temp/replace.c:836:9)
                          EmptyStatement:  (at temp/replace.c:836:29)
                        If:  (at temp/replace.c:837:9)
                          UnaryOp: ! (at temp/replace.c:837:16)
                            BinaryOp: < (at temp/replace.c:837:16)
                              ID: j (at temp/replace.c:837:16)
                              ID: s2 (at temp/replace.c:837:20)
                          Compound:  (at temp/replace.c:837:1)
                            Goto: while_break___0 (at temp/replace.c:838:11)
                        Compound:  (at temp/replace.c:840:1)
                          FuncCall:  (at temp/replace.c:841:9)
                            ID: fputc (at temp/replace.c:841:9)
                            ExprList:  (at temp/replace.c:841:15)
                              Cast:  (at temp/replace.c:841:15)
                                Typename: None, [] (at temp/replace.c:0:1)
                                  TypeDecl: None, [] (at None)
                                    IdentifierType: ['int'] (at temp/replace.c:841:16)
                                UnaryOp: * (at temp/replace.c:841:23)
                                  BinaryOp: + (at temp/replace.c:841:23)
                                    ID: lin (at temp/replace.c:841:23)
                                    ID: j (at temp/replace.c:841:29)
                              ID: stdout (at temp/replace.c:841:33)
                          UnaryOp: p++ (at temp/replace.c:842:9)
                            ID: j (at temp/replace.c:842:9)
                    Label: while_break___0 (at temp/replace.c:845:7)
                      EmptyStatement:  (at temp/replace.c:845:24)
                Compound:  (at temp/replace.c:847:1)
                  Compound:  (at temp/replace.c:848:1)
                    FuncCall:  (at temp/replace.c:849:7)
                      ID: fputc (at temp/replace.c:849:7)
                      ExprList:  (at temp/replace.c:849:13)
                        Cast:  (at temp/replace.c:849:13)
                          Typename: None, [] (at temp/replace.c:0:1)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['int'] (at temp/replace.c:849:14)
                          UnaryOp: * (at temp/replace.c:849:21)
                            BinaryOp: + (at temp/replace.c:849:21)
                              ID: sub (at temp/replace.c:849:21)
                              ID: i (at temp/replace.c:849:27)
                        ID: stdout (at temp/replace.c:849:31)
              UnaryOp: p++ (at temp/replace.c:852:5)
                ID: i (at temp/replace.c:852:5)
          Label: while_break (at temp/replace.c:854:3)
            EmptyStatement:  (at temp/replace.c:854:16)
        Return:  (at temp/replace.c:856:3)
  FuncDef:  (at temp/replace.c:859:6)
    Decl: subline, [], [], [] (at temp/replace.c:859:6)
      FuncDeclExt:  (at temp/replace.c:859:6)
        ParamList:  (at temp/replace.c:859:19)
          Decl: lin, [], [], [] (at temp/replace.c:859:19)
            PtrDecl: [] (at temp/replace.c:859:19)
              TypeDecl: lin, [] (at temp/replace.c:859:20)
                IdentifierType: ['char'] (at temp/replace.c:859:14)
          Decl: pat, [], [], [] (at temp/replace.c:859:31)
            PtrDecl: [] (at temp/replace.c:859:31)
              TypeDecl: pat, [] (at temp/replace.c:859:32)
                IdentifierType: ['char'] (at temp/replace.c:859:26)
          Decl: sub, [], [], [] (at temp/replace.c:859:43)
            PtrDecl: [] (at temp/replace.c:859:43)
              TypeDecl: sub, [] (at temp/replace.c:859:44)
                IdentifierType: ['char'] (at temp/replace.c:859:38)
        TypeDecl: subline, [] (at temp/replace.c:859:6)
          IdentifierType: ['void'] (at temp/replace.c:859:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:860:1)
      Decl: i, [], [], [] (at temp/replace.c:861:7)
        TypeDecl: i, [] (at temp/replace.c:861:7)
          IdentifierType: ['int'] (at temp/replace.c:861:3)
      Decl: lastm, [], [], [] (at temp/replace.c:862:7)
        TypeDecl: lastm, [] (at temp/replace.c:862:7)
          IdentifierType: ['int'] (at temp/replace.c:862:3)
      Decl: m, [], [], [] (at temp/replace.c:863:7)
        TypeDecl: m, [] (at temp/replace.c:863:7)
          IdentifierType: ['int'] (at temp/replace.c:863:3)
      Compound:  (at temp/replace.c:865:1)
        Assignment: = (at temp/replace.c:866:3)
          ID: lastm (at temp/replace.c:866:3)
          UnaryOp: - (at temp/replace.c:866:12)
            Constant: int, 1 (at temp/replace.c:866:12)
        Assignment: = (at temp/replace.c:867:3)
          ID: i (at temp/replace.c:867:3)
          Constant: int, 0 (at temp/replace.c:867:7)
        Compound:  (at temp/replace.c:868:1)
          While:  (at temp/replace.c:869:3)
            Constant: int, 1 (at temp/replace.c:869:10)
            Compound:  (at temp/replace.c:869:1)
              Label: while_continue (at temp/replace.c:870:5)
                EmptyStatement:  (at temp/replace.c:870:21)
              If:  (at temp/replace.c:871:5)
                UnaryOp: ! (at temp/replace.c:871:12)
                  BinaryOp: != (at temp/replace.c:871:12)
                    Cast:  (at temp/replace.c:871:12)
                      Typename: None, [] (at temp/replace.c:0:1)
                        TypeDecl: None, [] (at None)
                          IdentifierType: ['int'] (at temp/replace.c:871:13)
                      UnaryOp: * (at temp/replace.c:871:20)
                        BinaryOp: + (at temp/replace.c:871:20)
                          ID: lin (at temp/replace.c:871:20)
                          ID: i (at temp/replace.c:871:26)
                    Constant: int, 0 (at temp/replace.c:871:32)
                Compound:  (at temp/replace.c:871:1)
                  Goto: while_break (at temp/replace.c:872:7)
              Compound:  (at temp/replace.c:874:1)
                Assignment: = (at temp/replace.c:875:5)
                  ID: m (at temp/replace.c:875:5)
                  FuncCall:  (at temp/replace.c:875:9)
                    ID: amatch (at temp/replace.c:875:9)
                    ExprList:  (at temp/replace.c:875:16)
                      ID: lin (at temp/replace.c:875:16)
                      ID: i (at temp/replace.c:875:21)
                      ID: pat (at temp/replace.c:875:24)
                      Constant: int, 0 (at temp/replace.c:875:29)
              If:  (at temp/replace.c:877:5)
                BinaryOp: >= (at temp/replace.c:877:9)
                  ID: m (at temp/replace.c:877:9)
                  Constant: int, 0 (at temp/replace.c:877:14)
                Compound:  (at temp/replace.c:877:1)
                  If:  (at temp/replace.c:878:7)
                    BinaryOp: != (at temp/replace.c:878:11)
                      ID: lastm (at temp/replace.c:878:11)
                      ID: m (at temp/replace.c:878:20)
                    Compound:  (at temp/replace.c:878:1)
                      Compound:  (at temp/replace.c:879:1)
                        FuncCall:  (at temp/replace.c:880:9)
                          ID: putsub (at temp/replace.c:880:9)
                          ExprList:  (at temp/replace.c:880:16)
                            ID: lin (at temp/replace.c:880:16)
                            ID: i (at temp/replace.c:880:21)
                            ID: m (at temp/replace.c:880:24)
                            ID: sub (at temp/replace.c:880:27)
                        Assignment: = (at temp/replace.c:881:9)
                          ID: lastm (at temp/replace.c:881:9)
                          ID: m (at temp/replace.c:881:17)
              If:  (at temp/replace.c:885:5)
                BinaryOp: == (at temp/replace.c:885:9)
                  ID: m (at temp/replace.c:885:9)
                  UnaryOp: - (at temp/replace.c:885:15)
                    Constant: int, 1 (at temp/replace.c:885:15)
                Compound:  (at temp/replace.c:885:1)
                  Compound:  (at temp/replace.c:886:1)
                    FuncCall:  (at temp/replace.c:887:7)
                      ID: fputc (at temp/replace.c:887:7)
                      ExprList:  (at temp/replace.c:887:13)
                        Cast:  (at temp/replace.c:887:13)
                          Typename: None, [] (at temp/replace.c:0:1)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['int'] (at temp/replace.c:887:14)
                          UnaryOp: * (at temp/replace.c:887:21)
                            BinaryOp: + (at temp/replace.c:887:21)
                              ID: lin (at temp/replace.c:887:21)
                              ID: i (at temp/replace.c:887:27)
                        ID: stdout (at temp/replace.c:887:31)
                    UnaryOp: p++ (at temp/replace.c:888:7)
                      ID: i (at temp/replace.c:888:7)
                Compound:  (at temp/replace.c:890:1)
                  If:  (at temp/replace.c:891:5)
                    BinaryOp: == (at temp/replace.c:891:9)
                      ID: m (at temp/replace.c:891:9)
                      ID: i (at temp/replace.c:891:14)
                    Compound:  (at temp/replace.c:891:1)
                      Compound:  (at temp/replace.c:892:1)
                        FuncCall:  (at temp/replace.c:893:7)
                          ID: fputc (at temp/replace.c:893:7)
                          ExprList:  (at temp/replace.c:893:13)
                            Cast:  (at temp/replace.c:893:13)
                              Typename: None, [] (at temp/replace.c:0:1)
                                TypeDecl: None, [] (at None)
                                  IdentifierType: ['int'] (at temp/replace.c:893:14)
                              UnaryOp: * (at temp/replace.c:893:21)
                                BinaryOp: + (at temp/replace.c:893:21)
                                  ID: lin (at temp/replace.c:893:21)
                                  ID: i (at temp/replace.c:893:27)
                            ID: stdout (at temp/replace.c:893:31)
                        UnaryOp: p++ (at temp/replace.c:894:7)
                          ID: i (at temp/replace.c:894:7)
                    Compound:  (at temp/replace.c:896:1)
                      Assignment: = (at temp/replace.c:897:7)
                        ID: i (at temp/replace.c:897:7)
                        ID: m (at temp/replace.c:897:11)
          Label: while_break (at temp/replace.c:901:3)
            EmptyStatement:  (at temp/replace.c:901:16)
        Return:  (at temp/replace.c:903:3)
  FuncDef:  (at temp/replace.c:906:6)
    Decl: change, [], [], [] (at temp/replace.c:906:6)
      FuncDeclExt:  (at temp/replace.c:906:6)
        ParamList:  (at temp/replace.c:906:18)
          Decl: pat, [], [], [] (at temp/replace.c:906:18)
            PtrDecl: [] (at temp/replace.c:906:18)
              TypeDecl: pat, [] (at temp/replace.c:906:19)
                IdentifierType: ['char'] (at temp/replace.c:906:13)
          Decl: sub, [], [], [] (at temp/replace.c:906:30)
            PtrDecl: [] (at temp/replace.c:906:30)
              TypeDecl: sub, [] (at temp/replace.c:906:31)
                IdentifierType: ['char'] (at temp/replace.c:906:25)
        TypeDecl: change, [] (at temp/replace.c:906:6)
          IdentifierType: ['void'] (at temp/replace.c:906:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:907:1)
      Decl: line, [], [], [] (at temp/replace.c:908:10)
        TypeDecl: line, [] (at temp/replace.c:908:10)
          IdentifierType: ['string'] (at temp/replace.c:908:3)
      Decl: result, [], [], [] (at temp/replace.c:909:8)
        TypeDecl: result, [] (at temp/replace.c:909:8)
          IdentifierType: ['bool'] (at temp/replace.c:909:3)
      Compound:  (at temp/replace.c:911:1)
        Compound:  (at temp/replace.c:912:1)
          Assignment: = (at temp/replace.c:913:3)
            ID: result (at temp/replace.c:913:3)
            FuncCall:  (at temp/replace.c:913:12)
              ID: getline_in_replace (at temp/replace.c:913:12)
              ExprList:  (at temp/replace.c:913:31)
                ID: line (at temp/replace.c:913:31)
                Constant: int, 100 (at temp/replace.c:913:37)
        Compound:  (at temp/replace.c:915:1)
          While:  (at temp/replace.c:916:3)
            Constant: int, 1 (at temp/replace.c:916:10)
            Compound:  (at temp/replace.c:916:1)
              Label: while_continue (at temp/replace.c:917:5)
                EmptyStatement:  (at temp/replace.c:917:21)
              If:  (at temp/replace.c:918:5)
                UnaryOp: ! (at temp/replace.c:918:11)
                  ID: result (at temp/replace.c:918:11)
                Compound:  (at temp/replace.c:918:1)
                  Goto: while_break (at temp/replace.c:919:7)
              Compound:  (at temp/replace.c:921:1)
                FuncCall:  (at temp/replace.c:922:5)
                  ID: subline (at temp/replace.c:922:5)
                  ExprList:  (at temp/replace.c:922:13)
                    ID: line (at temp/replace.c:922:13)
                    ID: pat (at temp/replace.c:922:19)
                    ID: sub (at temp/replace.c:922:24)
                Assignment: = (at temp/replace.c:923:5)
                  ID: result (at temp/replace.c:923:5)
                  FuncCall:  (at temp/replace.c:923:14)
                    ID: getline_in_replace (at temp/replace.c:923:14)
                    ExprList:  (at temp/replace.c:923:33)
                      ID: line (at temp/replace.c:923:33)
                      Constant: int, 100 (at temp/replace.c:923:39)
          Label: while_break (at temp/replace.c:926:3)
            EmptyStatement:  (at temp/replace.c:926:16)
        Return:  (at temp/replace.c:928:3)
  FuncDef:  (at temp/replace.c:931:5)
    Decl: main, [], [], [] (at temp/replace.c:931:5)
      FuncDeclExt:  (at temp/replace.c:931:5)
        ParamList:  (at temp/replace.c:931:14)
          Decl: argc, [], [], [] (at temp/replace.c:931:14)
            TypeDecl: argc, [] (at temp/replace.c:931:14)
              IdentifierType: ['int'] (at temp/replace.c:931:10)
          Decl: argv, [], [], [] (at temp/replace.c:931:27)
            PtrDecl: [] (at temp/replace.c:931:27)
              PtrDecl: [] (at temp/replace.c:931:26)
                TypeDecl: argv, [] (at temp/replace.c:931:28)
                  IdentifierType: ['char'] (at temp/replace.c:931:21)
        TypeDecl: main, [] (at temp/replace.c:931:5)
          IdentifierType: ['int'] (at temp/replace.c:931:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:932:1)
      Decl: pat, [], [], [] (at temp/replace.c:933:10)
        TypeDecl: pat, [] (at temp/replace.c:933:10)
          IdentifierType: ['string'] (at temp/replace.c:933:3)
      Decl: sub, [], [], [] (at temp/replace.c:934:10)
        TypeDecl: sub, [] (at temp/replace.c:934:10)
          IdentifierType: ['string'] (at temp/replace.c:934:3)
      Decl: result, [], [], [] (at temp/replace.c:935:8)
        TypeDecl: result, [] (at temp/replace.c:935:8)
          IdentifierType: ['bool'] (at temp/replace.c:935:3)
      Decl: tmp, [], [], [] (at temp/replace.c:936:7)
        TypeDecl: tmp, [] (at temp/replace.c:936:7)
          IdentifierType: ['int'] (at temp/replace.c:936:3)
      Compound:  (at temp/replace.c:938:1)
        If:  (at temp/replace.c:939:3)
          BinaryOp: < (at temp/replace.c:939:7)
            ID: argc (at temp/replace.c:939:7)
            Constant: int, 2 (at temp/replace.c:939:14)
          Compound:  (at temp/replace.c:939:1)
            Compound:  (at temp/replace.c:940:1)
              FuncCall:  (at temp/replace.c:941:5)
                ID: fprintf (at temp/replace.c:941:5)
                ExprList:  (at temp/replace.c:941:13)
                  Cast:  (at temp/replace.c:941:13)
                    Typename: None, [] (at temp/replace.c:0:1)
                      PtrDecl: ['__restrict'] (at temp/replace.c:941:19)
                        TypeDecl: None, [] (at None)
                          IdentifierType: ['FILE'] (at temp/replace.c:941:14)
                    ID: stdout (at temp/replace.c:941:33)
                  Cast:  (at temp/replace.c:941:41)
                    Typename: None, ['const'] (at temp/replace.c:0:1)
                      PtrDecl: ['__restrict'] (at temp/replace.c:941:53)
                        TypeDecl: None, ['const'] (at None)
                          IdentifierType: ['char'] (at temp/replace.c:941:42)
                    Constant: string, "usage: change from [to]\n" (at temp/replace.c:941:67)
              FuncCall:  (at temp/replace.c:942:5)
                ID: exit (at temp/replace.c:942:5)
                ExprList:  (at temp/replace.c:942:10)
                  Constant: int, 1 (at temp/replace.c:942:10)
        Compound:  (at temp/replace.c:945:1)
          Assignment: = (at temp/replace.c:946:3)
            ID: tmp (at temp/replace.c:946:3)
            FuncCall:  (at temp/replace.c:946:9)
              ID: getpat (at temp/replace.c:946:9)
              ExprList:  (at temp/replace.c:946:18)
                UnaryOp: * (at temp/replace.c:946:18)
                  BinaryOp: + (at temp/replace.c:946:18)
                    ID: argv (at temp/replace.c:946:18)
                    Constant: int, 1 (at temp/replace.c:946:25)
                ID: pat (at temp/replace.c:946:29)
          Assignment: = (at temp/replace.c:947:3)
            ID: result (at temp/replace.c:947:3)
            Cast:  (at temp/replace.c:947:12)
              Typename: None, [] (at temp/replace.c:0:1)
                TypeDecl: None, [] (at None)
                  IdentifierType: ['bool'] (at temp/replace.c:947:13)
              ID: tmp (at temp/replace.c:947:19)
        If:  (at temp/replace.c:949:3)
          UnaryOp: ! (at temp/replace.c:949:9)
            ID: result (at temp/replace.c:949:9)
          Compound:  (at temp/replace.c:949:1)
            Compound:  (at temp/replace.c:950:1)
              FuncCall:  (at temp/replace.c:951:5)
                ID: fprintf (at temp/replace.c:951:5)
                ExprList:  (at temp/replace.c:951:13)
                  Cast:  (at temp/replace.c:951:13)
                    Typename: None, [] (at temp/replace.c:0:1)
                      PtrDecl: ['__restrict'] (at temp/replace.c:951:19)
                        TypeDecl: None, [] (at None)
                          IdentifierType: ['FILE'] (at temp/replace.c:951:14)
                    ID: stdout (at temp/replace.c:951:33)
                  Cast:  (at temp/replace.c:951:41)
                    Typename: None, ['const'] (at temp/replace.c:0:1)
                      PtrDecl: ['__restrict'] (at temp/replace.c:951:53)
                        TypeDecl: None, ['const'] (at None)
                          IdentifierType: ['char'] (at temp/replace.c:951:42)
                    Constant: string, "change: illegal \"from\" pattern\n" (at temp/replace.c:951:67)
              FuncCall:  (at temp/replace.c:952:5)
                ID: exit (at temp/replace.c:952:5)
                ExprList:  (at temp/replace.c:952:10)
                  Constant: int, 2 (at temp/replace.c:952:10)
        If:  (at temp/replace.c:955:3)
          BinaryOp: >= (at temp/replace.c:955:7)
            ID: argc (at temp/replace.c:955:7)
            Constant: int, 3 (at temp/replace.c:955:15)
          Compound:  (at temp/replace.c:955:1)
            Compound:  (at temp/replace.c:956:1)
              Assignment: = (at temp/replace.c:957:5)
                ID: result (at temp/replace.c:957:5)
                FuncCall:  (at temp/replace.c:957:14)
                  ID: getsub (at temp/replace.c:957:14)
                  ExprList:  (at temp/replace.c:957:23)
                    UnaryOp: * (at temp/replace.c:957:23)
                      BinaryOp: + (at temp/replace.c:957:23)
                        ID: argv (at temp/replace.c:957:23)
                        Constant: int, 2 (at temp/replace.c:957:30)
                    ID: sub (at temp/replace.c:957:34)
            If:  (at temp/replace.c:959:5)
              UnaryOp: ! (at temp/replace.c:959:11)
                ID: result (at temp/replace.c:959:11)
              Compound:  (at temp/replace.c:959:1)
                Compound:  (at temp/replace.c:960:1)
                  FuncCall:  (at temp/replace.c:961:7)
                    ID: fprintf (at temp/replace.c:961:7)
                    ExprList:  (at temp/replace.c:961:15)
                      Cast:  (at temp/replace.c:961:15)
                        Typename: None, [] (at temp/replace.c:0:1)
                          PtrDecl: ['__restrict'] (at temp/replace.c:961:21)
                            TypeDecl: None, [] (at None)
                              IdentifierType: ['FILE'] (at temp/replace.c:961:16)
                        ID: stdout (at temp/replace.c:961:35)
                      Cast:  (at temp/replace.c:961:43)
                        Typename: None, ['const'] (at temp/replace.c:0:1)
                          PtrDecl: ['__restrict'] (at temp/replace.c:961:55)
                            TypeDecl: None, ['const'] (at None)
                              IdentifierType: ['char'] (at temp/replace.c:961:44)
                        Constant: string, "change: illegal \"to\" string\n" (at temp/replace.c:961:69)
                  FuncCall:  (at temp/replace.c:962:7)
                    ID: exit (at temp/replace.c:962:7)
                    ExprList:  (at temp/replace.c:962:12)
                      Constant: int, 3 (at temp/replace.c:962:12)
          Compound:  (at temp/replace.c:965:1)
            Assignment: = (at temp/replace.c:966:5)
              ArrayRef:  (at temp/replace.c:966:5)
                ID: sub (at temp/replace.c:966:5)
                Constant: int, 0 (at temp/replace.c:966:9)
              Cast:  (at temp/replace.c:966:14)
                Typename: None, [] (at temp/replace.c:0:1)
                  TypeDecl: None, [] (at None)
                    IdentifierType: ['char'] (at temp/replace.c:966:15)
                Constant: char, '\000' (at temp/replace.c:966:21)
        Compound:  (at temp/replace.c:968:1)
          FuncCall:  (at temp/replace.c:969:3)
            ID: change (at temp/replace.c:969:3)
            ExprList:  (at temp/replace.c:969:10)
              ID: pat (at temp/replace.c:969:10)
              ID: sub (at temp/replace.c:969:15)
        Return:  (at temp/replace.c:971:3)
          Constant: int, 0 (at temp/replace.c:971:11)
  FuncDef:  (at temp/replace.c:974:6)
    Decl: Caseerror, [], [], [] (at temp/replace.c:974:6)
      FuncDeclExt:  (at temp/replace.c:974:6)
        ParamList:  (at temp/replace.c:974:20)
          Decl: n, [], [], [] (at temp/replace.c:974:20)
            TypeDecl: n, [] (at temp/replace.c:974:20)
              IdentifierType: ['int'] (at temp/replace.c:974:16)
        TypeDecl: Caseerror, [] (at temp/replace.c:974:6)
          IdentifierType: ['void'] (at temp/replace.c:974:1)
        ExprList:  (at temp/replace.c:0)
    Compound:  (at temp/replace.c:975:1)
      Compound:  (at temp/replace.c:978:1)
        Compound:  (at temp/replace.c:979:1)
          FuncCall:  (at temp/replace.c:980:3)
            ID: fprintf (at temp/replace.c:980:3)
            ExprList:  (at temp/replace.c:980:11)
              Cast:  (at temp/replace.c:980:11)
                Typename: None, [] (at temp/replace.c:0:1)
                  PtrDecl: ['__restrict'] (at temp/replace.c:980:17)
                    TypeDecl: None, [] (at None)
                      IdentifierType: ['FILE'] (at temp/replace.c:980:12)
                ID: stdout (at temp/replace.c:980:31)
              Cast:  (at temp/replace.c:980:39)
                Typename: None, ['const'] (at temp/replace.c:0:1)
                  PtrDecl: ['__restrict'] (at temp/replace.c:980:51)
                    TypeDecl: None, ['const'] (at None)
                      IdentifierType: ['char'] (at temp/replace.c:980:40)
                Constant: string, "Missing case limb: line %d\n" (at temp/replace.c:980:65)
              ID: n (at temp/replace.c:981:11)
          FuncCall:  (at temp/replace.c:982:3)
            ID: exit (at temp/replace.c:982:3)
            ExprList:  (at temp/replace.c:982:8)
              Constant: int, 4 (at temp/replace.c:982:8)
